{"version":3,"sources":["routes/settings/index.js"],"names":["Settings","props","_this","Object","_Users_carlosjouanne_Desktop_T2_2021_2_S4_Grupo1_Web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_super","call","state","user","name","userName","password","password_confirmation","gitname","userGithub","current_password","loading","file","handleName","bind","_Users_carlosjouanne_Desktop_T2_2021_2_S4_Grupo1_Web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3__","handlePassword","handlePassConfirmation","handleGithub","handleSubmit","handleCurrentPassword","handleSelectedFile","handlePhoto","event","value","setState","_Users_carlosjouanne_Desktop_T2_2021_2_S4_Grupo1_Web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","_this2","preventDefault","_this$state","slice","toLowerCase","updatePhoto","then","response","ok","notifySuccess","notifyError","_this3","reader","FileReader","readAsDataURL","onload","result","getBase64","target","files","_this4","selectedLanguage","language","settings","updateUser","_this$props","userProvider","userImage","classes","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","root","grid","imgCard","alt","img","src","concat","Date","toString","BlankProfile","_components_lib_Form__WEBPACK_IMPORTED_MODULE_12__","imgForm","encType","onSubmit","imgSelect","onChange","type","_components_lib_Button_PrimaryButton__WEBPACK_IMPORTED_MODULE_14__","uploadPicture","_components_lib_Card__WEBPACK_IMPORTED_MODULE_17__","card","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_11___default","formTitle","variant","component","editProfile","formInput","_components_lib_TextField__WEBPACK_IMPORTED_MODULE_13__","fullWidth","label","id","autoFocus","github","disabled","newPass","confirmPass","currentPass","submit","Component","defaultProps","connect","auth","provider","image","dispatch","bindActionCreators","withStyles","backgroundColor","flex","display","alignItems","flexDirection","padding","paddingLeft","paddingTop","paddingRight","paddingBottom","border","position","height","width","textAlign","marginTop","marginBottom","alignSelf"],"mappings":"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","file":"static/js/46.d5d28b93.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Form from '../../components/lib/Form';\nimport TextField from '../../components/lib/TextField';\nimport PrimaryButton from '../../components/lib/Button/PrimaryButton';\nimport { notifySuccess, notifyError } from '../../actions/notification';\nimport { updateUser, updatePhoto } from '../../actions/api/auth';\nimport CardPanel from '../../components/lib/Card';\nimport BlankProfile from '../../assets/blankprofile.png';\nimport language from '../../constants/language';\n\nconst styles = {\n  root: {\n    backgroundColor: '#f0f0f0',\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    padding: '20px',\n  },\n  formTitle: {\n    paddingLeft: '2.5%',\n    paddingTop: '3%',\n  },\n  formInput: {\n    paddingLeft: '5%',\n    paddingRight: '5%',\n    paddingBottom: '5%',\n  },\n  grid: {\n    paddingTop: '2%',\n    display: 'flex',\n  },\n  img: {\n    border: 'none',\n    position: 'relative',\n    height: '200px',\n    width: '200px',\n  },\n  imgForm: {\n    width: '200px',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center',\n  },\n  imgSelect: {\n    width: '100%',\n    textAlign: 'center',\n    paddingLeft: '15px',\n    marginTop: '5px',\n    marginBottom: '15px',\n    alignSelf: 'center',\n  },\n  card: {\n    width: '100%',\n  },\n  imgCard: {\n    width: '250px',\n  },\n};\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        name: this.props.userName || '',\n        password: '',\n        password_confirmation: '',\n        gitname: this.props.userGithub || '',\n        current_password: '',\n      },\n      loading: false,\n      file: null,\n      name: null,\n    };\n    this.handleName = this.handleName.bind(this);\n    this.handlePassword = this.handlePassword.bind(this);\n    this.handlePassConfirmation = this.handlePassConfirmation.bind(this);\n    this.handleGithub = this.handleGithub.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCurrentPassword = this.handleCurrentPassword.bind(this);\n    this.handleSelectedFile = this.handleSelectedFile.bind(this);\n    this.handlePhoto = this.handlePhoto.bind(this);\n  }\n\n  handleName(event) {\n    const value = event;\n    const { user } = this.state;\n    this.setState({\n      user: {\n        ...user,\n        name: value,\n      },\n    });\n  }\n\n  handlePhoto(event) {\n    event.preventDefault();\n    const { file, name } = this.state;\n    if (name) {\n      if ((name.slice(-3).toLowerCase() === 'png') || (name.slice(-3).toLowerCase() === 'jpg')) {\n        this.setState({ loading: true });\n        this.props.updatePhoto({ file, name })\n          .then((response) => {\n            if (response.ok) {\n              this.setState({ loading: false });\n              this.props.notifySuccess('The photo was updated successfully');\n            }\n          });\n      } else {\n        this.props.notifyError('Invalid photo format (must be PNG or JPG)');\n      }\n    }\n  }\n\n  handleSelectedFile(event) {\n    const getBase64 = (file) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.setState({ file: reader.result });\n      };\n    };\n    getBase64(event.target.files[0]);\n    this.setState({ name: event.target.files[0].name });\n  }\n\n  handleGithub(event) {\n    const value = event;\n    const { user } = this.state;\n    this.setState({\n      user: {\n        ...user,\n        gitname: value,\n      },\n    });\n  }\n\n  handlePassword(event) {\n    const value = event;\n    const { user } = this.state;\n    this.setState({\n      user: {\n        ...user,\n        password: value,\n      },\n    });\n  }\n\n  handleCurrentPassword(event) {\n    const value = event;\n    const { user } = this.state;\n    this.setState({\n      user: {\n        ...user,\n        current_password: value,\n      },\n    });\n  }\n\n  handlePassConfirmation(event) {\n    const value = event;\n    const { user } = this.state;\n    this.setState({\n      user: {\n        ...user,\n        password_confirmation: value,\n      },\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { user } = this.state;\n    const { selectedLanguage } = this.props;\n    if (user.password !== user.password_confirmation) {\n      this.props.notifyError(language[selectedLanguage].settings.notifyError);\n    } else {\n      this.props.updateUser(user)\n        .then((response) => {\n          if (response.ok) {\n            this.props.notifySuccess(language[selectedLanguage].settings.notifySuccess);\n          }\n        });\n    }\n  }\n\n  render() {\n    const {\n      user,\n    } = this.state;\n    const {\n      userProvider,\n      userImage,\n      classes,\n      selectedLanguage,\n    } = this.props;\n    return (\n      <div className={classes.root}>\n        <div className={classes.grid}>\n          <div className={classes.imgCard}>\n            <img\n              alt=\"avatar\"\n              className={classes.img}\n              src={(!userImage || userImage === 'null')\n                ? BlankProfile : (`${userImage}?time=${(new Date()).toString()}`)\n              }\n            />\n            <Form className={classes.imgForm} encType=\"multipart/form-data\" onSubmit={this.handlePhoto}>\n              <input className={classes.imgSelect} onChange={this.handleSelectedFile} type=\"file\" />\n              <PrimaryButton\n                type=\"submit\"\n                loading={this.state.loading}\n              >\n\n                {language[selectedLanguage].settings.uploadPicture}\n              </PrimaryButton>\n            </Form>\n          </div>\n          <div>\n            <CardPanel className={classes.card}>\n              <Typography className={classes.formTitle} variant=\"headline\" component=\"h2\">\n\n                {language[selectedLanguage].settings.editProfile}\n              </Typography>\n              <Form\n                onSubmit={this.handleSubmit}\n                className={classes.formInput}\n              >\n                <TextField\n                  onChange={this.handleName}\n                  type=\"name\"\n                  value={user.name}\n                  fullWidth\n                  label={language[selectedLanguage].settings.name}\n                  id=\"name\"\n                  autoFocus\n                />\n                <TextField\n                  onChange={this.handleGithub}\n                  type=\"Github\"\n                  value={user.gitname}\n                  fullWidth\n                  label={language[selectedLanguage].settings.github}\n                  id=\"github\"\n                />\n                <TextField\n                  onChange={this.handlePassword}\n                  type=\"password\"\n                  disabled={userProvider === 'google_oauth2'}\n                  value={user.password}\n                  fullWidth\n                  label={language[selectedLanguage].settings.newPass}\n                  id=\"Password\"\n                />\n                <TextField\n                  onChange={this.handlePassConfirmation}\n                  type=\"password\"\n                  value={user.password_confirmation}\n                  disabled={userProvider === 'google_oauth2'}\n                  fullWidth\n                  label={language[selectedLanguage].settings.confirmPass}\n                  id=\"passwordconfirmation\"\n                />\n                <br />\n                <br />\n                <br />\n                <TextField\n                  onChange={this.handleCurrentPassword}\n                  type=\"password\"\n                  value={user.current_password}\n                  disabled={userProvider === 'google_oauth2'}\n                  fullWidth\n                  label={language[selectedLanguage].settings.currentPass}\n                  id=\"currentpassword\"\n                />\n                <PrimaryButton\n                  type=\"submit\"\n                >\n\n                  {language[selectedLanguage].settings.submit}\n                </PrimaryButton>\n              </Form>\n            </CardPanel>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSettings.propTypes = {\n  classes: PropTypes.any.isRequired,\n  notifySuccess: PropTypes.func.isRequired,\n  notifyError: PropTypes.func.isRequired,\n  updateUser: PropTypes.func.isRequired,\n  userName: PropTypes.string,\n  userGithub: PropTypes.string,\n  userProvider: PropTypes.string.isRequired,\n  updatePhoto: PropTypes.func.isRequired,\n  userImage: PropTypes.string.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nSettings.defaultProps = {\n  userName: '',\n  userGithub: '',\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userName: state.auth.name,\n    userGithub: state.auth.gitname,\n    userProvider: state.auth.provider,\n    userImage: state.auth.image,\n    selectedLanguage: state.user.language,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    notifyError,\n    notifySuccess,\n    updateUser,\n    updatePhoto,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Settings));\n"],"sourceRoot":""}
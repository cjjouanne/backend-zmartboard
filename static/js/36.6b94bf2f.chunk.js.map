{"version":3,"sources":["components/report/share/EstimatedHoursVariation/PercentageRange.js","components/report/share/EstimatedHoursVariation/index.js","routes/estimatedHoursVariationReport/index.js","actions/api/members.js","actions/api/milestones.js"],"names":["HighchartsMore","Highcharts","PercentageRange","props","_this","Object","classCallCheck","this","_super","call","state","loading","setOptions","bind","assertThisInitialized","setState","prevProps","equal","data","chartOptions","chart","selectedLanguage","_this$formatData","formatData","boardsNames","rangeHours","averageHours","value","type","inverted","accessibility","description","title","text","language","percentageRangeChart","subtitle","concat","underestimation","overestimation","xAxis","categories","opposite","reversed","linkedTo","labels","step","yAxis","min","max","marker","tooltip","valueSuffix","plotOptions","columnrange","dataLabels","enabled","format","legend","series","name","percentage","colorByPoint","average","lineWidth","radius","fillColor","states","hover","lineWidthPlus","boards","minHours","maxHours","sumHours","taskCount","range_values","tasks","forEach","task","dif","reported_hours","estimated_hours","parseFloat","toFixed","board_id","Array","from","Set","keys","board","push","board_name","filter","b","id","map","range","react_default","a","createElement","CircularProgress","highcharts_react_min_default","highcharts","options","Component","connect","user","EstimatedHoursVariationContainer","changeData","milestone","_this2","fetchGetMilestonesPercentageHours","then","response","ok","body","console","log","_this$props","classes","className","headerContainer","Typography_default","tasktracking","estimatedhoursvariation","line","style","display","alignItems","margin","averageTaskTimeChart","milestoneSelection","wrapper","filterOption","length","EstimatedHoursVariation_PercentageRange","dispatch","bindActionCreators","fetchGetMilestones","notifyError","withStyles","height","width","modalContent","modalContainer","fontSize","fontFamiliy","color","fontWeight","marginTop","marginBottom","selectText","marginLeft","grid","backgroundColor","info","box","marginRight","padding","customIcon","border-radius","shareText","shareButton","borderColor","border","&:hover","borderRadius","Report","selectProject","projectId","fetchProjectMembers","react","EstimatedHoursVariation","ownProps","String","match","params","milestone_id","__webpack_require__","d","__webpack_exports__","fetchTaskAssign","fetchTaskUnassign","fetchUpdateMember","fetchDeleteMember","fetchQuitMember","_constants_api_members__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_ALL_MEMBERS","fetch","url","method","FETCH_TASK_ASSIGN","userId","FETCH_TASK_UNASSIGN","memberId","FETCH_UPDATE_MEMBER","FETCH_DELETE_MEMBER","FETCH_QUIT_PROJECT","fetchMilestoneAssign","fetchMilestoneUnassign","fetchGetMilestone","fetchCreateMilestone","fetchDeleteMilestone","fetchUpdateMilestone","fetchGetMilestonesTasks","fetchGetMilestonesHoursBoard","_constants_api_milestones__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_MILESTONES","FETCH_MILESTONE_ASSIGN","task_id","FETCH_MILESTONE_UNASSIGN","FETCH_GET_MILESTONE","project_id","FETCH_CREATE_MILESTONE","FETCH_DELETE_MILESTONE","FETCH_UPDATE_MILESTONE","FETCH_GET_MILESTONE_TASKS","FETCH_GET_MILESTONES_HOURS_BOARD","FETCH_GET_MILESTONES_PERCENTAGE_HOURS"],"mappings":"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","file":"static/js/36.6b94bf2f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport equal from 'fast-deep-equal';\nimport CircularProgress from '../../../lib/CircularProgress';\n\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport HighchartsMore from 'highcharts/highcharts-more';\n\nimport language from '../../../../constants/language';\nimport { connect } from 'react-redux';\nHighchartsMore(Highcharts);\n\nclass PercentageRange extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.setOptions.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ loading: false });\n\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!equal(this.props.data, prevProps.data)) {\n      const chartOptions = this.setOptions();\n      Highcharts.chart('chart', chartOptions);\n    }\n    if (!equal(this.props.selectedLanguage, prevProps.selectedLanguage)) {\n      const chartOptions = this.setOptions();\n      Highcharts.chart('chart', chartOptions);\n    }\n  }\n\n\n  setOptions() {\n    const {boardsNames, rangeHours, averageHours, value} = this.formatData();\n    const { selectedLanguage } = this.props;\n    return {\n      chart: {\n        type: 'columnrange',\n        inverted: true\n      },\n      accessibility: {\n        description: 'chart'\n      },\n      title: {\n        text: language[selectedLanguage].percentageRangeChart.title,\n      },\n      subtitle: {\n        text: `${language[selectedLanguage].percentageRangeChart.underestimation}   |   ${language[selectedLanguage].percentageRangeChart.overestimation} `,\n\n      },\n      xAxis: [{\n        categories: boardsNames,\n        },{ // mirror axis on right side\n          opposite: true,\n          reversed: false,\n          categories: boardsNames,\n          linkedTo: 0,\n          labels: {\n              step: 1\n      }}],\n      yAxis: {\n        title: {\n          text: language[selectedLanguage].percentageRangeChart.yAxis,\n        },\n        min: -value,\n        max: value,\n        marker: 0,\n      },\n      tooltip: {\n        valueSuffix: '%'\n      },\n\n      plotOptions: {\n        columnrange: {\n          dataLabels: {\n            enabled: true,\n            format: '{y}%'\n          }\n        }\n      },\n      legend: {\n        enabled: false\n      },\n      series:[{\n        name: language[selectedLanguage].percentageRangeChart.percentage,\n        colorByPoint: true,\n        data: rangeHours\n      },\n      {\n        type: 'spline',\n        name: language[selectedLanguage].percentageRangeChart.average,\n          data: averageHours,\n          lineWidth: 0,\n          marker: {\n            radius: 8,\n            fillColor: '#ea5941'\n          },\n          states: {\n            hover: {\n                lineWidthPlus: 0\n                      }\n                  }\n        }\n      ]\n\n    }\n  }\n  formatData() {\n    const  {data}  = this.props;\n    const boards = data.boards;\n    const minHours = {};\n    const maxHours = {};\n    const averageHours = [];\n    const sumHours = {};\n    const taskCount = {};\n    const rangeHours = [];\n    const boardsNames = [];\n    const range_values = [];\n    data.tasks.forEach((task) => {\n      let dif = ((task.reported_hours - task.estimated_hours)/task.estimated_hours)*100;\n      if (parseFloat(task.estimated_hours) === 0){\n        dif = (0-task.reported_hours)*100;\n      }\n      dif = parseFloat(dif.toFixed(3));\n      if(!taskCount[task.board_id]){\n        taskCount[task.board_id] = 0;\n        }\n        taskCount[task.board_id] += 1;\n\n      if(!minHours[task.board_id]){\n        minHours[task.board_id] = dif;\n        }\n        if (dif < minHours[task.board_id]){\n          minHours[task.board_id] = dif;\n        }\n      if(!maxHours[task.board_id]){\n        maxHours[task.board_id] = dif;\n        }\n        if (dif > maxHours[task.board_id]){\n          maxHours[task.board_id] = dif;\n        }\n      if(!sumHours[task.board_id]){\n        sumHours[task.board_id] = 0;\n        }\n        sumHours[task.board_id] += dif;\n\n    });\n    const boards_ids = Array.from(new Set(Object.keys(sumHours)));\n    \n    boards_ids.forEach((board)=>{\n      averageHours.push(parseFloat((sumHours[board] / taskCount[board]).toFixed(3)));\n      rangeHours.push([minHours[board], maxHours[board]]);\n      const board_name = boards\n      .filter(b => b.id === board)\n        .map(b => b.name)\n\n      boardsNames.push(board_name);\n\n    });\n    range_values.push(0);\n    range_values.push(0);\n    rangeHours.forEach((range)=>{\n      if (range[1] > range_values[1]){\n        range_values[1]*= 0;\n        range_values[1] += range[1];\n      }\n      if (range[0] < range_values[0]){\n        range_values[0]*= 0;\n        range_values[0]+=range[0];\n      }\n    });\n    let value = range_values[1];\n    if (range_values[0]*-1 > range_values[1]){\n      value = range_values[0]*-1;\n    }\n    return {\n      'boardsNames': boardsNames,\n      'rangeHours': rangeHours,\n      'averageHours': averageHours,\n      'value': value,\n    };\n  }\n\n  render() {\n    if (this.state.loading) return <CircularProgress />;\n    const chartOptions = this.setOptions(); \n    return (\n      <div>\n        <div id=\"chart\">\n          <HighchartsReact highcharts={Highcharts} options={chartOptions}  />\n        </div>\n      </div>\n    );\n  }\n}\n\nPercentageRange.propTypes = {\n  data: PropTypes.object.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedLanguage: state.user.language,\n  };\n};\n\n\nexport default connect(\n  mapStateToProps,\n)(PercentageRange);","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '../../../lib/CircularProgress';\n\nimport { notifyError } from '../../../../actions/notification';\nimport { fetchGetMilestones, fetchGetMilestonesPercentageHours } from '../../../../actions/api/milestones';\n\nimport language from '../../../../constants/language';\nimport PercentageRange from './PercentageRange';\n\nconst styles = {\n  wrapper: {\n    height: '400px',\n    width: 'auto',\n  },\n  modalContent: {\n    width: '600px',\n    height: '400px',\n  },\n  modalContainer: {\n    // width: '800px',\n  },\n  title: {\n    fontSize: '28px',\n    fontFamiliy:\n      '-apple-system, \".SFNSText-Regular\", \"San Francisco\", BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Lucida Grande\", Arial, sans-serif',\n    color: 'rgb(68, 68, 68)',\n  },\n  headerContainer: {\n    margin: '30px',\n    width: 'auto',\n  },\n  text: {\n    color: '#2a3d41',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: '10px',\n    marginBottom: '10px',\n  },\n  selectText: {\n    color: '#2a3d41',\n    fontSize: 14,\n    fontWeight: 'normal',\n    marginTop: '10px',\n    marginBottom: '10px',\n    marginLeft: '10px',\n  },\n  grid: {\n    display: 'flex',\n    width: '100%',\n    margin: '10px',\n  },\n  line: {\n    width: 'auto',\n    height: '1px',\n    backgroundColor: '#CCCCCC',\n  },\n  info: {\n    color: '#2a3d41',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: '5px',\n  },\n  box: {\n    display: 'flex',\n    marginRight: '10px',\n    padding: '5px',\n  },\n  customIcon: {\n    height: '24px',\n    width: '24px',\n    display: 'block',\n    'border-radius': '50%',\n    marginRight: '5px',\n  },\n  shareText: {\n    fontSize: 12,\n    color: 'white',\n    margin: '0px 0px',\n  },\n  shareButton: {\n    margin: 5,\n    padding: '0px 8px',\n    borderColor: 'white',\n    border: '1px solid #fff',\n    backgroundColor: '#ea5941',\n    '&:hover': {\n      backgroundColor: '#ca3921',\n    },\n    color: '#fff',\n    borderRadius: 0,\n  },\n};\n\n\nclass EstimatedHoursVariationContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      data: '',\n      tasks: [],\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n\n  componentDidMount() {\n    this.changeData(this.props.milestone);\n  }\n\n  changeData(id) {\n    this.props\n      .fetchGetMilestonesPercentageHours(id)\n      .then((response) => {\n        if (response.ok) { this.setState({ data: response.body, tasks: response.body.tasks, loading: false }); }\n        else {\n          console.log(\"Bad Request\");\n        }\n      })\n  }\n\n  render() {\n    if (this.state.loading) return <CircularProgress />;\n    const { data } = this.state;\n    const { classes, selectedLanguage } = this.props;\n    return (\n      <div className={classes.headerContainer}>\n        <Typography className={classes.title}>\n          {language[selectedLanguage].tasktracking.estimatedhoursvariation}\n        </Typography>\n        <div className={classes.line} />\n        <div style={{ display: 'flex', alignItems: 'center', margin: '10px' }}>\n          <Typography className={classes.text}>\n            {language[this.props.selectedLanguage].averageTaskTimeChart.milestoneSelection}{' '}{this.props.milestone}\n          </Typography>\n        </div>\n        <div className={classes.line} />\n        <div className={classes.wrapper}>\n          {this.state.filterOption !== '' && this.state.data !== '' && this.state.tasks.length > 0 && <PercentageRange data={data} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nEstimatedHoursVariationContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  projectId: PropTypes.string.isRequired,\n  notifyError: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n  fetchGetMilestones: PropTypes.func.isRequired,\n  milestone: PropTypes.string.isRequired,\n  fetchGetMilestonesPercentageHours: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchGetMilestones,\n      fetchGetMilestonesPercentageHours,\n      notifyError,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(EstimatedHoursVariationContainer));\n","import React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectProject } from '../../actions/user';\nimport { fetchProjectMembers } from '../../actions/api/members';\n\nimport CircularProgress from '../../components/lib/CircularProgress';\n\nimport EstimatedHoursVariationReportsContainer from '../../components/report/share/EstimatedHoursVariation';\n\nclass Report extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.selectProject(this.props.projectId);\n        this.props.fetchProjectMembers(this.props.projectId)\n            .then(() => {\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress />;\n        }\n        return (\n            <Fragment>\n                <EstimatedHoursVariationReportsContainer projectId={this.props.projectId} milestone={this.props.milestone} />\n            </Fragment>\n        );\n    }\n}\n\nReport.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    milestone: PropTypes.string.isRequired,\n    selectProject: PropTypes.func.isRequired,\n    fetchProjectMembers: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        projectId: String(ownProps.match.params.id),\n        milestone: String(ownProps.match.params.milestone_id),\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        selectProject,\n        fetchProjectMembers,\n    }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);\n","import {\n  FETCH_GET_ALL_MEMBERS,\n  FETCH_TASK_ASSIGN,\n  FETCH_TASK_UNASSIGN,\n  FETCH_UPDATE_MEMBER,\n  FETCH_DELETE_MEMBER,\n  FETCH_QUIT_PROJECT,\n} from '../../constants/api/members';\n\nexport const fetchProjectMembers = id => ({\n  type: FETCH_GET_ALL_MEMBERS,\n  fetch: true,\n  url: `/projects/${id}/members/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchTaskAssign = (id, body) => ({\n  type: FETCH_TASK_ASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/assign/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchTaskUnassign = (id, userId) => ({\n  type: FETCH_TASK_UNASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/users/${userId}/unassign/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateMember = (projectId, memberId, body) => ({\n  type: FETCH_UPDATE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchDeleteMember = (projectId, memberId) => ({\n  type: FETCH_DELETE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchQuitMember = (projectId, memberId) => ({\n  type: FETCH_QUIT_PROJECT,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n","import {\n    FETCH_GET_MILESTONES,\n    FETCH_MILESTONE_ASSIGN,\n    FETCH_MILESTONE_UNASSIGN,\n    FETCH_GET_MILESTONE,\n    FETCH_CREATE_MILESTONE,\n    FETCH_DELETE_MILESTONE,\n    FETCH_UPDATE_MILESTONE,\n    FETCH_GET_MILESTONE_TASKS,\n    FETCH_GET_MILESTONES_HOURS_BOARD,\n    FETCH_GET_MILESTONES_PERCENTAGE_HOURS,\n} from '../../constants/api/milestones';\n\nexport const fetchGetMilestones = (id) => ({\n    type: FETCH_GET_MILESTONES,\n    fetch: true,\n    url: `/milestones/get_milestone?project_id=${id}`,\n    params: {\n        method: 'GET',\n    },\n});\n\nexport const fetchMilestoneAssign = (body) => ({\n    type: FETCH_MILESTONE_ASSIGN,\n    fetch: true,\n    url: `/milestones/add_task_to_milestone?task_id=${body.task_id}&milestone_id=${body.milestone_id}`,\n    params: {\n        method: 'POST',\n        body,\n    },\n});\n\nexport const fetchMilestoneUnassign = (body) => ({\n    type: FETCH_MILESTONE_UNASSIGN,\n    fetch: true,\n    url: `/milestones/remove_task_from_milestone?task_id=${body.task_id}&milestone_id=${body.milestone_id}`,\n    params: {\n        method: 'POST',\n        body,\n    },\n});\n\nexport const fetchGetMilestone = (body) => ({\n    type: FETCH_GET_MILESTONE,\n    fetch: true,\n    url: `/milestones/get_milestone_dates?project_id=${body.project_id}&milestone_id=${body.milestone_id}`,\n    params: {\n        method: 'GET',\n    },\n});\n\nexport const fetchCreateMilestone = body => ({\n    type: FETCH_CREATE_MILESTONE,\n    fetch: true,\n    url: '/milestones/create_milestone',\n    params: {\n        method: 'POST',\n        body,\n    },\n});\n\nexport const fetchDeleteMilestone = body => ({\n    type: FETCH_DELETE_MILESTONE,\n    fetch: true,\n    url: `/milestones/destroy_milestone`,\n    params: {\n        method: 'DELETE',\n        body,\n    },\n});\n\nexport const fetchUpdateMilestone = body => ({\n    type: FETCH_UPDATE_MILESTONE,\n    fetch: true,\n    url: `/milestones/update`,\n    params: {\n        method: 'POST',\n        body,\n    },\n});\n\nexport const fetchGetMilestonesTasks = body => ({\n    type: FETCH_GET_MILESTONE_TASKS,\n    fetch: true,\n    url: `/milestones/task_list?milestone_id=${body.milestone_id}`,\n    params: {\n        method: 'GET',\n    },\n});\nexport const fetchGetMilestonesHoursBoard = (id) => ({\n    type: FETCH_GET_MILESTONES_HOURS_BOARD,\n    fetch: true,\n    url: `/milestones/${id}/average_hours_per_board`,\n    params: {\n        method: 'GET',\n    },\n});\n\nexport const fetchGetMilestonesPercentageHours = (id) => ({\n    type: FETCH_GET_MILESTONES_PERCENTAGE_HOURS,\n    fetch: true,\n    url: `/milestones/${id}/percentage_difference_hours`,\n    params: {\n        method: 'GET',\n    },\n});\n"],"sourceRoot":""}
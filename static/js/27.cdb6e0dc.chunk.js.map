{"version":3,"sources":["components/report/share/AverageTaskCompletionTime/AverageTaskTime.js","components/report/share/AverageTaskCompletionTime/index.js","routes/averageTaskCompletionReport/index.js","actions/api/members.js","actions/api/viz.js","constants/api/viz.js","../node_modules/fast-deep-equal/index.js","actions/api/milestones.js"],"names":["AverageBoardHours","props","_this","Object","classCallCheck","this","_super","call","state","loading","setOptions","bind","assertThisInitialized","setState","prevProps","equal","data","chartOptions","Highcharts","chart","selectedLanguage","_this$formatData","formatData","boardNames","averageHours","totalTasks","height","zoomType","credits","title","text","language","averageTaskTimeChart","boardAverageHours","xAxis","categories","yAxis","labels","format","hours","min","gridLineWidth","totalCompletedTasks","style","opposite","series","name","type","tooltip","color","shared","disabled","backgroundColor","borderColor","borderWidth","fontFamily","textAlign","formatter","concat","y","points","plotOptions","dataLabels","enabled","events","legendItemClick","e","preventDefault","boards","boardIDs","Array","from","Set","keys","forEach","ID","hours_info","push","parseInt","react_default","a","createElement","CircularProgress","id","highcharts_react_min_default","highcharts","options","Component","connect","user","dispatch","bindActionCreators","fetchVizHoursPerLabel","HoursContainer","milestone_list","filterOption","changeData","milestone","_this2","fetchGetMilestonesHoursBoard","then","response","ok","body","console","log","_this$state","classes","className","container","headerContainer","Typography_default","tasktracking","averagetaskcompletiontime","line","display","alignItems","margin","length","milestoneSelection","wrapper","total","task_count","AverageTaskTime","hoursIndex","noReported","fetchGetMilestones","notifyError","withStyles","modalContent","width","fontSize","fontFamiliy","fontWeight","marginTop","marginBottom","selectText","marginLeft","grid","modalContainer","shareText","shareButton","padding","border","&:hover","borderRadius","Report","selectProject","projectId","fetchProjectMembers","react","AverageTaskCompletionTime","ownProps","String","match","params","milestone_id","__webpack_require__","d","__webpack_exports__","fetchTaskAssign","fetchTaskUnassign","fetchUpdateMember","fetchDeleteMember","fetchQuitMember","_constants_api_members__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_ALL_MEMBERS","fetch","url","method","FETCH_TASK_ASSIGN","userId","FETCH_TASK_UNASSIGN","memberId","FETCH_UPDATE_MEMBER","FETCH_DELETE_MEMBER","FETCH_QUIT_PROJECT","fetchVizHoursPerBoard","queryParams","objectSpread","fetchVizHoursPerUser","fetchVizHoursPerTask","fetchVizGithub","fetchGetLinkedRepos","fetchUsersHoursTimeline","fetchGetPR","fetchGetPRLeadTime","fetchGetCommitsPerPR","isArray","keyList","hasProp","prototype","hasOwnProperty","module","exports","b","i","key","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString","fetchMilestoneAssign","fetchMilestoneUnassign","fetchGetMilestone","fetchCreateMilestone","fetchDeleteMilestone","fetchUpdateMilestone","fetchGetMilestonesTasks","fetchGetMilestonesPercentageHours","_constants_api_milestones__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_MILESTONES","FETCH_MILESTONE_ASSIGN","task_id","FETCH_MILESTONE_UNASSIGN","FETCH_GET_MILESTONE","project_id","FETCH_CREATE_MILESTONE","FETCH_DELETE_MILESTONE","FETCH_UPDATE_MILESTONE","FETCH_GET_MILESTONE_TASKS","FETCH_GET_MILESTONES_HOURS_BOARD","FETCH_GET_MILESTONES_PERCENTAGE_HOURS"],"mappings":"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","file":"static/js/27.cdb6e0dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Highcharts from 'highcharts';\nimport equal from 'fast-deep-equal';\nimport HighchartsReact from 'highcharts-react-official';\nimport { fetchVizHoursPerLabel } from '../../../../actions/api/viz';\nimport CircularProgress from '../../../lib/CircularProgress';\nimport language from '../../../../constants/language';\n\nclass AverageBoardHours extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.setOptions.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ loading: false });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!equal(this.props.data, prevProps.data)) {\n      const chartOptions = this.setOptions();\n      Highcharts.chart('chart', chartOptions);\n    }\n    if (!equal(this.props.selectedLanguage, prevProps.selectedLanguage)) {\n      const chartOptions = this.setOptions();\n      Highcharts.chart('chart', chartOptions);\n    }\n  }\n\n  setOptions() {\n    const {boardNames , averageHours, totalTasks} = this.formatData();\n\n    const { selectedLanguage } = this.props;\n    return {\n      chart: {\n        //type: 'column',\n        height: 350,\n        zoomType: 'xy',\n      },\n      credits: false,\n      title: {\n        text: language[selectedLanguage].averageTaskTimeChart.boardAverageHours,\n      },\n      xAxis: {\n        categories: boardNames,\n      },\n      yAxis: [{ // Primary yAxis\n        labels: {\n          format: '{value} ' + language[selectedLanguage].averageTaskTimeChart.hours,\n        },\n        title: {\n          text: language[selectedLanguage].averageTaskTimeChart.averageHours,\n        },\n        min: 0,\n      }, { // Secondary yAxis\n        gridLineWidth: 0,\n        title: {\n          text: language[selectedLanguage].averageTaskTimeChart.totalCompletedTasks,\n          style: {\n            //color: Highcharts.getOptions().colors[0]\n          }\n        },\n        labels: {\n          style: {\n            //color: Highcharts.getOptions().colors[0]\n          }\n        },\n        opposite: true,\n      }],\n      series: [\n        {\n          name: language[selectedLanguage].averageTaskTimeChart.averageHours,\n          type: 'column',\n          yAxis: 0,\n          // color: '',\n          data: averageHours,\n          // colorByPoint: true,\n          tooltip: {\n            //valueSuffix: 'Horas',\n          },\n        }, {\n          name: language[selectedLanguage].averageTaskTimeChart.totalCompletedTasks,\n          type: 'spline',\n          color: 'black',\n          yAxis: 1,\n          data: totalTasks,\n        },\n      ],\n      tooltip: {\n        shared: true,\n        disabled: true,\n        backgroundColor: '#616161',\n        borderColor: '#616161',\n        borderWidth: 1,\n        style: {\n          color: 'white',\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n          textAlign: 'center',\n        },\n        formatter() {\n          return `${language[selectedLanguage].averageTaskTimeChart.averageHours}: ${this.y} \n           <br>\n           ${language[selectedLanguage].averageTaskTimeChart.totalTasks}: ${this.points[1].y}`;\n        },\n      },\n      plotOptions: {\n        series: {\n          dataLabels: {\n            enabled: false,\n            // format: `{point.y:.1f} ${language[selectedLanguage].averageTaskTimeChart.hours}`,\n          },\n          events: {\n            legendItemClick: function(e) {\n              e.preventDefault();\n            },\n          },\n        },\n      },\n    };\n  }\n\n  formatData() {\n    const boards = this.props.labels;\n    const boardIDs = Array.from(new Set(Object.keys(boards)));\n\n    const { data } = this.props;\n    const averageHours = [];\n    const totalTasks = [];\n    const boardNames = [];\n    boardIDs.forEach((ID) => {\n      if(data.hours_info[ID]){\n        averageHours.push({\n          name: boards[ID],\n          y: parseInt(data.hours_info[ID][\"average_estimated_hours\"]),\n        });\n        totalTasks.push({\n          name: boards[ID],\n          y: data.hours_info[ID][\"task_count\"],\n        });\n        boardNames.push(boards[ID]);\n      };\n    });\n    return {\n      'boardNames': boardNames,\n      'averageHours': averageHours,\n      'totalTasks': totalTasks,\n    };\n  }\n\n  render() {\n    if (this.state.loading) return <CircularProgress />;\n    const chartOptions = this.setOptions();\n    return (\n      <div>\n        <div id=\"chart\">\n          <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n        </div>\n      </div>\n    );\n  }\n}\n\nAverageBoardHours.propTypes = {\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.object.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ fetchVizHoursPerLabel }, dispatch);\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(AverageBoardHours);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\n\nimport CircularProgress from '../../../lib/CircularProgress';\nimport { notifyError } from '../../../../actions/notification';\nimport { fetchGetMilestones, fetchGetMilestonesHoursBoard } from '../../../../actions/api/milestones';\n\nimport AverageTimeChart from './AverageTaskTime';\nimport language from '../../../../constants/language';\n\n/* eslint-disable react/no-unused-state */\nconst styles = {\n  wrapper: {\n    height: '400px',\n  },\n  modalContent: {\n    width: '500px',\n    height: '400px',\n  },\n  title: {\n    fontSize: '28px',\n    fontFamiliy:\n      '-apple-system, \".SFNSText-Regular\", \"San Francisco\", BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Lucida Grande\", Arial, sans-serif',\n    color: 'rgb(68, 68, 68)',\n  },\n  headerContainer: {\n    margin: '30px',\n    width: 'auto',\n  },\n  text: {\n    color: '#2a3d41',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: '10px',\n    marginBottom: '10px',\n  },\n  selectText: {\n    color: '#2a3d41',\n    fontSize: 14,\n    fontWeight: 'normal',\n    marginTop: '10px',\n    marginBottom: '10px',\n    marginLeft: '10px',\n  },\n  grid: {\n    display: 'flex',\n    width: '100%',\n  },\n  container: {\n    height: '700px',\n  },\n  modalContainer: {\n    height: '700px',\n  },\n  line: {\n    width: 'auto',\n    height: '1px',\n    backgroundColor: '#CCCCCC',\n  },\n  shareText: {\n    fontSize: 12,\n    color: 'white',\n    margin: '0px 0px',\n  },\n  shareButton: {\n    margin: 5,\n    padding: '0px 8px',\n    borderColor: 'white',\n    border: '1px solid #fff',\n    backgroundColor: '#ea5941',\n    '&:hover': {\n      backgroundColor: '#ca3921',\n    },\n    color: '#fff',\n    borderRadius: 0,\n  },\n};\n\n\nclass HoursContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      milestone_list: [],\n      filterOption: '',\n      data: '',\n    };\n    this.changeData = this.changeData.bind(this);\n\n  }\n  componentDidMount() {\n    this.changeData(this.props.milestone);\n  }\n\n  changeData(id) {\n    this.props\n      .fetchGetMilestonesHoursBoard(id)\n      .then((response) => {\n        if (response.ok) { this.setState({ data: response.body, loading: false }); }\n        else {\n          console.log(\"Bad Request\");\n        }\n      })\n  }\n\n  render() {\n    const { milestone_list, data, loading } = this.state;\n    if (loading) return <CircularProgress />;\n    const { classes } = this.props;\n    return (\n      <div className={classes.container}>\n        <div className={classes.headerContainer}>\n          <Typography className={classes.title}>\n            {language[this.props.selectedLanguage].tasktracking.averagetaskcompletiontime}\n          </Typography>\n          <div className={classes.line} />\n          <div style={{ display: 'flex', alignItems: 'center', margin: '10px' }}>\n            {milestone_list.length > 0 && (\n              <Typography className={classes.text}>\n                {language[this.props.selectedLanguage].averageTaskTimeChart.milestoneSelection}\n              </Typography>\n            )}\n          </div>\n        </div>\n        <div className={classes.line} />\n        <div className={classes.wrapper}>\n          {data !== '' && data.total.task_count > 0 && (\n            <AverageTimeChart\n              data={data}\n              labels={data.boards}\n            />\n          )}\n          {data === '' && (\n            <Typography style={{ textAlign: 'center' }}>\n              {language[this.props.selectedLanguage].hoursIndex.noReported}.\n            </Typography>\n          )}\n          {data !== '' && data.total.task_count === 0 && (\n            <Typography style={{ textAlign: 'center' }}>\n              {language[this.props.selectedLanguage].hoursIndex.noReported}.\n            </Typography>\n          )}\n\n        </div>\n      </div>\n    );\n  }\n}\n\nHoursContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  projectId: PropTypes.string.isRequired,\n  notifyError: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n  filterOption: PropTypes.any.isRequired,\n  fetchGetMilestones: PropTypes.func.isRequired,\n  fetchGetMilestonesHoursBoard: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchGetMilestones,\n      notifyError,\n      fetchGetMilestonesHoursBoard,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(HoursContainer));\n","import React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectProject } from '../../actions/user';\nimport { fetchProjectMembers } from '../../actions/api/members';\n\nimport CircularProgress from '../../components/lib/CircularProgress';\n\nimport AverageTaskCompletionReportsContainer from '../../components/report/share/AverageTaskCompletionTime';\n\nclass Report extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.selectProject(this.props.projectId);\n        this.props.fetchProjectMembers(this.props.projectId)\n            .then(() => {\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress />;\n        }\n        return (\n            <Fragment>\n                <AverageTaskCompletionReportsContainer projectId={this.props.projectId} milestone={this.props.milestone} />\n            </Fragment>\n        );\n    }\n}\n\nReport.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    milestone: PropTypes.string.isRequired,\n    selectProject: PropTypes.func.isRequired,\n    fetchProjectMembers: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        projectId: String(ownProps.match.params.id),\n        milestone: String(ownProps.match.params.milestone_id),\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        selectProject,\n        fetchProjectMembers,\n    }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);\n","import {\n  FETCH_GET_ALL_MEMBERS,\n  FETCH_TASK_ASSIGN,\n  FETCH_TASK_UNASSIGN,\n  FETCH_UPDATE_MEMBER,\n  FETCH_DELETE_MEMBER,\n  FETCH_QUIT_PROJECT,\n} from '../../constants/api/members';\n\nexport const fetchProjectMembers = id => ({\n  type: FETCH_GET_ALL_MEMBERS,\n  fetch: true,\n  url: `/projects/${id}/members/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchTaskAssign = (id, body) => ({\n  type: FETCH_TASK_ASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/assign/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchTaskUnassign = (id, userId) => ({\n  type: FETCH_TASK_UNASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/users/${userId}/unassign/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateMember = (projectId, memberId, body) => ({\n  type: FETCH_UPDATE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchDeleteMember = (projectId, memberId) => ({\n  type: FETCH_DELETE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchQuitMember = (projectId, memberId) => ({\n  type: FETCH_QUIT_PROJECT,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n","import {\n  FETCH_VIZ_HOURS_PER_BOARD,\n  FETCH_VIZ_HOURS_PER_LABEL,\n  FETCH_VIZ_HOURS_PER_USER,\n  FETCH_VIZ_HOURS_PER_TASK,\n  FETCH_VIZ_HOURS_TIMELINE,\n  FETCH_VIZ_COMMITS_PER_PR,\n  FETCH_VIZ_LINKED_REPOS,\n  FETCH_VIZ_PR_LEAD_TIME,\n  FETCH_VIZ_PR,\n  FETCH_VIZ_GITHUB,\n} from '../../constants/api/viz';\n\nexport const fetchVizHoursPerBoard = (id, body) => ({\n  type: FETCH_VIZ_HOURS_PER_BOARD,\n  fetch: true,\n  url: `/viz/projects/${id}/hours_per_board`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizHoursPerLabel = (id, body) => ({\n  type: FETCH_VIZ_HOURS_PER_LABEL,\n  fetch: true,\n  url: `/viz/boards/${id}/hours_per_label`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizHoursPerUser = (id, body) => ({\n  type: FETCH_VIZ_HOURS_PER_USER,\n  fetch: true,\n  url: `/viz/projects/${id}/hours_per_user`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizHoursPerTask = (projectId, userId, body) => ({\n  type: FETCH_VIZ_HOURS_PER_TASK,\n  fetch: true,\n  url: `/viz/projects/${projectId}/users/${userId}/tasks`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizGithub = (projectId, userId, body) => ({\n  type: FETCH_VIZ_GITHUB,\n  fetch: true,\n  url: `/viz/projects/${projectId}/users/${userId}/github`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetLinkedRepos = projectId => ({\n  type: FETCH_VIZ_LINKED_REPOS,\n  fetch: true,\n  url: `/projects/${projectId}/repos`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchUsersHoursTimeline = (projectId, body) => ({\n  type: FETCH_VIZ_HOURS_TIMELINE,\n  fetch: true,\n  url: `/viz/projects/${projectId}/users_timeline`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetPR = (projectId, body) => ({\n  type: FETCH_VIZ_PR,\n  fetch: true,\n  url: `/projects/${projectId}/gits/get_pull_requests`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetPRLeadTime = (projectId, body) => ({\n  type: FETCH_VIZ_PR_LEAD_TIME,\n  fetch: true,\n  url: `/projects/${projectId}/gits/get_pr_lead_time`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetCommitsPerPR = (projectId, body) => ({\n  type: FETCH_VIZ_COMMITS_PER_PR,\n  fetch: true,\n  url: `/projects/${projectId}/gits/get_commits_of_all_pr`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n","export const FETCH_VIZ_HOURS_PER_BOARD = 'FETCH_VIZ_HOURS_PER_BOARD';\nexport const FETCH_VIZ_HOURS_PER_LABEL = 'FETCH_VIZ_HOURS_PER_LABEL';\nexport const FETCH_VIZ_HOURS_PER_USER = 'FETCH_VIZ_HOURS_PER_USER';\nexport const FETCH_VIZ_HOURS_PER_TASK = 'FETCH_VIZ_HOURS_PER_TASK';\nexport const FETCH_VIZ_HOURS_TIMELINE = 'FETCH_VIZ_HOURS_TIMELINE';\nexport const FETCH_VIZ_COMMITS_PER_PR = 'FETCH_VIZ_COMMITS_PER_PR';\nexport const FETCH_VIZ_PR_LEAD_TIME = 'FETCH_VIZ_PR_LEAD_TIME';\nexport const FETCH_VIZ_LINKED_REPOS = 'FETCH_VIZ_LINKED_REPOS';\nexport const FETCH_VIZ_GITHUB = 'FETCH_VIZ_GITHUB';\nexport const FETCH_VIZ_PR = 'FETCH_VIZ_PR';\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a),\n        arrB = isArray(b),\n        i,\n        length,\n        key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (!equal(a[i], b[i])) return false;\n      }\n\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n    var dateA = a instanceof Date,\n        dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    var regexpA = a instanceof RegExp,\n        regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    var keys = keyList(a);\n    length = keys.length;\n    if (length !== keyList(b).length) return false;\n\n    for (i = length; i-- !== 0;) {\n      if (!hasProp.call(b, keys[i])) return false;\n    }\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a !== a && b !== b;\n};","import {\n    FETCH_GET_MILESTONES,\n    FETCH_MILESTONE_ASSIGN,\n    FETCH_MILESTONE_UNASSIGN,\n    FETCH_GET_MILESTONE,\n    FETCH_CREATE_MILESTONE,\n    FETCH_DELETE_MILESTONE,\n    FETCH_UPDATE_MILESTONE,\n    FETCH_GET_MILESTONE_TASKS,\n    FETCH_GET_MILESTONES_HOURS_BOARD,\n    FETCH_GET_MILESTONES_PERCENTAGE_HOURS,\n} from '../../constants/api/milestones';\n\nexport const fetchGetMilestones = (id) => ({\n    type: FETCH_GET_MILESTONES,\n    fetch: true,\n    url: `/milestones/get_milestone?project_id=${id}`,\n    params: {\n        method: 'GET',\n    },\n});\n\nexport const fetchMilestoneAssign = (body) => ({\n    type: FETCH_MILESTONE_ASSIGN,\n    fetch: true,\n    url: `/milestones/add_task_to_milestone?task_id=${body.task_id}&milestone_id=${body.milestone_id}`,\n    params: {\n        method: 'POST',\n        body,\n    },\n});\n\nexport const fetchMilestoneUnassign = (body) => ({\n    type: FETCH_MILESTONE_UNASSIGN,\n    fetch: true,\n    url: `/milestones/remove_task_from_milestone?task_id=${body.task_id}&milestone_id=${body.milestone_id}`,\n    params: {\n        method: 'POST',\n        body,\n    },\n});\n\nexport const fetchGetMilestone = (body) => ({\n    type: FETCH_GET_MILESTONE,\n    fetch: true,\n    url: `/milestones/get_milestone_dates?project_id=${body.project_id}&milestone_id=${body.milestone_id}`,\n    params: {\n        method: 'GET',\n    },\n});\n\nexport const fetchCreateMilestone = body => ({\n    type: FETCH_CREATE_MILESTONE,\n    fetch: true,\n    url: '/milestones/create_milestone',\n    params: {\n        method: 'POST',\n        body,\n    },\n});\n\nexport const fetchDeleteMilestone = body => ({\n    type: FETCH_DELETE_MILESTONE,\n    fetch: true,\n    url: `/milestones/destroy_milestone`,\n    params: {\n        method: 'DELETE',\n        body,\n    },\n});\n\nexport const fetchUpdateMilestone = body => ({\n    type: FETCH_UPDATE_MILESTONE,\n    fetch: true,\n    url: `/milestones/update`,\n    params: {\n        method: 'POST',\n        body,\n    },\n});\n\nexport const fetchGetMilestonesTasks = body => ({\n    type: FETCH_GET_MILESTONE_TASKS,\n    fetch: true,\n    url: `/milestones/task_list?milestone_id=${body.milestone_id}`,\n    params: {\n        method: 'GET',\n    },\n});\nexport const fetchGetMilestonesHoursBoard = (id) => ({\n    type: FETCH_GET_MILESTONES_HOURS_BOARD,\n    fetch: true,\n    url: `/milestones/${id}/average_hours_per_board`,\n    params: {\n        method: 'GET',\n    },\n});\n\nexport const fetchGetMilestonesPercentageHours = (id) => ({\n    type: FETCH_GET_MILESTONES_PERCENTAGE_HOURS,\n    fetch: true,\n    url: `/milestones/${id}/percentage_difference_hours`,\n    params: {\n        method: 'GET',\n    },\n});\n"],"sourceRoot":""}
{"version":3,"sources":["components/report/share/Trazability/Tooltip.js","components/report/share/Trazability/TreeMap.js","components/report/share/Trazability/index.js","routes/tasksReport/index.js","actions/api/members.js","actions/api/viz.js","constants/api/viz.js","selectors/members.js","actions/project.js"],"names":["withStyles","box","display","borderRadius","boxSizing","info","fontSize","square","width","heigth","marginRight","_ref","classes","value","color","name","react_default","a","createElement","className","style","backgroundColor","Typography_default","getTooltip","obj","Tooltip","data","hours","label","Treemap","min","min_hours","max","max_hours","scale","chroma","domain","treemap","tooltip","root","identity","innerPadding","outerPadding","leavesOnly","margin","top","right","bottom","left","d","labelSkipSize","labelTextColor","colorBy","depth","hex","getColor","borderColor","animate","motionStiffness","motionDamping","UserContainer","props","_this","Object","classCallCheck","this","_super","call","state","loading","dataTree","repos","dataTreeCompleted","dataTreeUncompleted","tasksCompleted","tasksUnCompleted","changeDataTree","bind","assertThisInitialized","changeDataTreeCompleted","changeDataTreeUncompleted","copyClipboard","changeTrazabilityHours","selectedRepo","startDate","endDate","user","userId","dummy","document","body","appendChild","href","concat","window","location","origin","projectId","setAttribute","select","execCommand","removeChild","_this2","setState","start_date","end_date","fetchVizHoursPerTask","then","response","newdataTree","ok","children","length","NewDataTreeCompleted","JSON","parse","stringify","all_tasks","forEach","board","tasks","task","push","filter","completed","NewDataTreeUnCompleted","CircularProgress","_this$props","selectedLanguage","_this$state","langDict","language","report","headerContainer","title","line","grid","alignSelf","marginLeft","text","from","to","container","item2","completetasks","notcompletetasks","item3","TreeMap","params","noDataMsg","nocompletetasks","nonotcompletetasks","Component","connect","ownProps","auth","id","users","allMembers","dispatch","bindActionCreators","notifyError","titleContainer","paddingLeft","paddingTop","borderBottom","fontFamiliy","gridTemplateColumns","gridGap","textAlign","gridColumn","float","fontWeight","marginTop","justifyContent","height","titleText","marginBottom","selectText","errorMsg","shareText","shareButton","padding","border","&:hover","Report","selectProject","fetchProjectMembers","react","Trazability","String","match","user_id","__webpack_require__","__webpack_exports__","fetchTaskAssign","fetchTaskUnassign","fetchUpdateMember","fetchDeleteMember","fetchQuitMember","_constants_api_members__WEBPACK_IMPORTED_MODULE_0__","type","FETCH_GET_ALL_MEMBERS","fetch","url","method","FETCH_TASK_ASSIGN","FETCH_TASK_UNASSIGN","memberId","FETCH_UPDATE_MEMBER","FETCH_DELETE_MEMBER","FETCH_QUIT_PROJECT","fetchVizHoursPerBoard","queryParams","objectSpread","fetchVizHoursPerLabel","fetchVizHoursPerUser","fetchVizGithub","fetchGetLinkedRepos","fetchUsersHoursTimeline","fetchGetPR","fetchGetPRLeadTime","fetchGetCommitsPerPR","onlyMembers","oneTaskMembers","onlyTaskMembers","evaluableMembers","redux_orm__WEBPACK_IMPORTED_MODULE_0__","_reducers_orm__WEBPACK_IMPORTED_MODULE_1__","getRef","ref","createSelector","orm","_","selectedProjectId","session","projectMembers","Project","get","o","Member","members","includes","orderBy","toUpperCase","toRefArray","selectedTask","taskId","Task","taskMembers","assigned","map","mem","assign","prop","role","toggleRepoAssignForm","archiveSearch","changeReportHours","changeUsersHours","changeTimelineHours","toggleTaskFilter","_constants_project__WEBPACK_IMPORTED_MODULE_0__","TOGGLE_ASSIGN_MODAL_REPO","payload","ARCHIVE_SEARCH","REPORT_HOURS","USERS_HOURS","TRAZABILITY_HOURS","TIMELINE_HOURS","TOGGLE_FILTER"],"mappings":"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","file":"static/js/30.adff88be.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  box: {\n    display: 'flex',\n    borderRadius: '2px',\n    boxSizing: 'border-box',\n  },\n  info: {\n    fontSize: '12px',\n  },\n  square: {\n    width: '15px',\n    heigth: '5px',\n    marginRight: '5px',\n  },\n};\n\nconst ToolTip = ({\n  classes, value, color, name,\n}) => {\n  return (\n    <div className={classes.box}>\n      <div className={classes.square} style={{ backgroundColor: color }} />\n      <Typography className={classes.info}>\n        {name}\n\n        &nbsp;\n        -\n        Hours:\n        &nbsp;\n        <b>\n          { value < 1 ? 0 : value }\n        </b>\n      </Typography>\n    </div>\n  );\n};\n\nToolTip.propTypes = {\n  classes: PropTypes.object.isRequired,\n  value: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles)(ToolTip);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveTreeMap } from '@nivo/treemap';\nimport chroma from 'chroma-js';\nimport Tooltip from './Tooltip';\n\nconst fromColor = '#7fe8c4';\nconst toColor = '#205e49';\nconst innerBorderColor = 'black';\n\nconst getColor = (d, scale) => {\n  if (d.depth === 0) {\n    return innerBorderColor;\n  }\n\n  if (d.depth === 1) {\n    return innerBorderColor;\n  }\n  return scale(d.hours).hex();\n};\n\nconst getTooltip = (obj) => {\n  return (\n    <Tooltip value={obj.data.hours} color={obj.color} name={obj.label} />\n  );\n};\n\nconst Treemap = ({ data }) => {\n  const min = data.min_hours;\n  const max = data.max_hours;\n  const scale = chroma.scale([fromColor, toColor]).domain([min, max]);\n  const getLabel = (d) => {\n    return d.name;\n  };\n\n  return (\n    <ResponsiveTreeMap\n      tooltip={getTooltip}\n      root={data}\n      identity=\"id\"\n      value=\"hours\"\n      innerPadding={3}\n      outerPadding={3}\n      leavesOnly\n      margin={{\n        top: 10,\n        right: 10,\n        bottom: 10,\n        left: 10,\n      }}\n      label={getLabel}\n      labelSkipSize={15}\n      labelTextColor=\"inherit:darker(3.5)\"\n      colorBy={d => getColor(d, scale, min, max)}\n      borderColor=\"inherit:darker(0.3)\"\n      animate\n      motionStiffness={90}\n      motionDamping={11}\n    />\n  );\n};\n\nTreemap.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Treemap;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\n\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport { truncateString } from '../../../../utils';\nimport 'react-day-picker/lib/style.css';\n\nimport TreeMap from './TreeMap';\nimport CircularProgress from '../../../lib/CircularProgress';\n\nimport {\n  fetchVizHoursPerTask\n} from '../../../../actions/api/viz';\nimport { changeTrazabilityHours } from '../../../../actions/project';\nimport { allMembers } from '../../../../selectors/members';\nimport { notifyError } from '../../../../actions/notification';\nimport language from '../../../../constants/language';\n\n/* eslint-disable max-len */\nconst styles = {\n  titleContainer: {\n    display: 'block',\n    paddingLeft: 20,\n    paddingTop: 5,\n    borderBottom: '2px solid rgb(68, 68, 68)',\n  },\n  title: {\n    fontSize: '28px',\n    fontFamiliy:\n      '-apple-system, \".SFNSText-Regular\", \"San Francisco\", BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Lucida Grande\", Arial, sans-serif',\n    color: 'rgb(68, 68, 68)',\n  },\n  container: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(2, 1fr)',\n    gridGap: '2px',\n  },\n  item2: {\n    textAlign: 'center',\n    width: '500px',\n    gridColumn: 'span 1 / auto',\n    float: 'center',\n    display: 'block',\n    color: '#2a3d41',\n    alignSelf: 'center',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: '10px',\n    marginRight: '5px',\n    justifyContent: 'center',\n  },\n  item3: {\n    height: '500px',\n    width: '500px',\n    gridColumn: 'span 1 / auto',\n    float: 'center',\n    display: 'block',\n  },\n  titleText: {\n    color: '#2a3d41',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: '10px',\n    marginBottom: '10px',\n  },\n  headerContainer: {\n    margin: '30px',\n    width: 'auto',\n  },\n  text: {\n    color: '#2a3d41',\n    alignSelf: 'center',\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginTop: '10px',\n    marginBottom: '10px',\n    marginRight: '5px',\n  },\n  selectText: {\n    color: '#2a3d41',\n    fontSize: 14,\n    fontWeight: 'normal',\n    marginTop: '10px',\n    marginBottom: '10px',\n    marginLeft: '10px',\n  },\n  grid: {\n    display: 'flex',\n    width: '100%',\n  },\n  line: {\n    width: 'auto',\n    height: '1px',\n    backgroundColor: '#CCCCCC',\n  },\n  errorMsg: {\n    marginLeft: '500px',\n    marginTop: '200px',\n    width: '200px',\n    fontFamiliy:\n      '-apple-system, \".SFNSText-Regular\", \"San Francisco\", BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Lucida Grande\", Arial, sans-serif',\n    color: 'rgb(68, 68, 68)',\n    fontWeight: 'bold',\n  },\n  noDataMsg: {\n    textAlign: 'center',\n    width: '500px',\n    gridColumn: 'span 1 / auto',\n    marginTop: '250px',\n    marginBottom: '250px',\n    fontFamiliy:\n      '-apple-system, \".SFNSText-Regular\", \"San Francisco\", BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Lucida Grande\", Arial, sans-serif',\n    color: 'rgb(68, 68, 68)',\n    fontWeight: 'bold',\n  },\n  shareText: {\n    fontSize: 12,\n    color: 'white',\n    margin: '0px 0px',\n  },\n  shareButton: {\n    margin: 5,\n    padding: '0px 8px',\n    borderColor: 'white',\n    border: '1px solid #fff',\n    backgroundColor: '#ea5941',\n    '&:hover': {\n      backgroundColor: '#ca3921',\n    },\n    color: '#fff',\n    borderRadius: 0,\n  },\n};\n\nclass UserContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      dataTree: [],\n      repos: [],\n      dataTreeCompleted: [],\n      dataTreeUncompleted: [],\n      tasksCompleted: [],\n      tasksUnCompleted: [],\n    };\n    this.changeDataTree = this.changeDataTree.bind(this);\n    this.changeDataTreeCompleted = this.changeDataTreeCompleted.bind(this);\n    this.changeDataTreeUncompleted = this.changeDataTreeUncompleted.bind(this);\n    this.copyClipboard = this.copyClipboard.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.changeTrazabilityHours({\n      selectedRepo: this.props.selectedRepo,\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      user: this.props.userId,\n    });\n    this.changeDataTree(\n      this.props.startDate,\n      this.props.endDate,\n      this.props.userId,\n    );\n\n  }\n\n  copyClipboard() {\n    var dummy = document.createElement(\"input\");\n    document.body.appendChild(dummy);\n    var href = `${window.location.origin}/project/${this.props.projectId}/report/tasks/${this.props.startDate}/${this.props.endDate}/${this.props.user}`\n    dummy.setAttribute('value', href);\n    dummy.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummy);\n  }\n\n  changeDataTree(startDate, endDate, userId) {\n    this.setState({ dataTree: [], tasksCompleted: [], tasksUnCompleted: [], dataTreeUncompleted: [], dataTreeCompleted: [] });\n    const { projectId } = this.props;\n    const body = {\n      start_date: startDate,\n      end_date: endDate,\n    };\n    this.props\n      .fetchVizHoursPerTask(projectId, userId, body)\n      .then((response) => {\n        const newdataTree = response.ok ? response.body : [];\n        this.setState({ loading: false, dataTree: newdataTree });\n        this.changeDataTreeCompleted(this.state.dataTree);\n        this.changeDataTreeUncompleted(this.state.dataTree);\n      });\n  }\n\n  changeDataTreeCompleted(dataTree) {\n    if (!dataTree.children || !dataTree.children.length) {\n      ;\n    } else {\n      let NewDataTreeCompleted = JSON.parse(JSON.stringify(dataTree));\n      let all_tasks = [];\n      NewDataTreeCompleted.children.forEach((board) => {\n        let tasks = [];\n        board.children.forEach((task) => {\n          tasks.push(task);\n          all_tasks.push(task);\n        });\n        board.children = tasks.filter(task => task.completed);\n      });\n      this.setState({\n        dataTreeCompleted: NewDataTreeCompleted,\n        tasksCompleted: all_tasks.filter(task => task.completed)\n      });\n    }\n  }\n\n  changeDataTreeUncompleted(dataTree) {\n    if (!dataTree.children || !dataTree.children.length) {\n      ;\n    } else {\n      let NewDataTreeUnCompleted = JSON.parse(JSON.stringify(dataTree));\n      let all_tasks = [];\n      NewDataTreeUnCompleted.children.forEach((board) => {\n        let tasks = [];\n        board.children.forEach((task) => {\n          tasks.push(task);\n          all_tasks.push(task);\n        });\n        board.children = tasks.filter(task => !task.completed);\n      });\n      this.setState({\n        dataTreeUncompleted: NewDataTreeUnCompleted,\n        tasksUnCompleted: all_tasks.filter(task => !task.completed)\n      });\n    }\n  }\n\n  render() {\n    if (this.state.loading) return <CircularProgress />;\n    const { classes, selectedLanguage } = this.props;\n    const { dataTreeCompleted, dataTreeUncompleted, tasksUnCompleted, tasksCompleted } = this.state;\n    const langDict = language[selectedLanguage].report;\n    return (\n      <div className={classes.headerContainer}>\n        <Typography className={classes.title}>\n          {langDict.tasks}\n        </Typography>\n        <div className={classes.line} />\n        <div className={classes.grid}>\n          <div\n            style={{ display: 'flex', alignSelf: 'center', marginLeft: '10px' }}\n          >\n            <Typography className={classes.text}>\n              {langDict.user}:{' '}{this.props.userId}\n            </Typography>\n          </div>\n          <div\n            style={{ display: 'flex', alignSelf: 'center', marginLeft: '10px' }}\n          >\n            <Typography className={classes.text}>\n              {langDict.from}:{' '}{this.props.startDate}\n            </Typography>\n          </div>\n          <div\n            style={{ display: 'flex', alignSelf: 'center', marginLeft: '10px' }}\n          >\n            <Typography className={classes.text}>\n              {langDict.to}:{' '}{this.props.endDate}\n            </Typography>\n          </div>\n        </div>\n        <div className={classes.line} />\n        <div className={classes.container}>\n          <Typography className={classes.item2}>{langDict.completetasks}</Typography>\n          <Typography className={classes.item2}>{langDict.notcompletetasks}</Typography>\n          <div className={classes.item3}>\n            <div className={classes.container}>\n            </div>\n            {tasksCompleted.length > 0 &&\n              <TreeMap\n                data={dataTreeCompleted}\n                params={[this.props.startDate, this.props.endDate]}\n              />}\n            {tasksCompleted.length === 0 && (\n              <Typography className={classes.noDataMsg}>\n                {' '}\n                {langDict.nocompletetasks}.{' '}\n              </Typography>\n            )}\n\n          </div>\n\n          <div className={classes.item3}>\n            <div className={classes.container}>\n            </div>\n            {tasksUnCompleted.length === 0 && (\n              <Typography className={classes.noDataMsg}>\n                {' '}\n                {langDict.nonotcompletetasks}.{' '}\n              </Typography>\n            )}\n            {tasksUnCompleted.length > 0 && (\n              <TreeMap\n                data={dataTreeUncompleted}\n                params={[this.props.startDate, this.props.endDate]}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUserContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  projectId: PropTypes.string.isRequired,\n  users: PropTypes.array.isRequired,\n  userId: PropTypes.string.isRequired,\n  fetchVizHoursPerTask: PropTypes.func.isRequired,\n  changeTrazabilityHours: PropTypes.func.isRequired,\n  notifyError: PropTypes.func.isRequired,\n  selectedRepo: PropTypes.any.isRequired,\n  user: PropTypes.any.isRequired,\n  endDate: PropTypes.any.isRequired,\n  startDate: PropTypes.any.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: state.auth.id,\n    users: allMembers(ownProps, state),\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchVizHoursPerTask,\n      changeTrazabilityHours,\n      notifyError,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(UserContainer));\n","import React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectProject } from '../../actions/user';\nimport { fetchProjectMembers } from '../../actions/api/members';\n\nimport CircularProgress from '../../components/lib/CircularProgress';\n\nimport TasksReportsContainer from '../../components/report/share/Trazability';\n\nclass Report extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.selectProject(this.props.projectId);\n        this.props.fetchProjectMembers(this.props.projectId)\n            .then(() => {\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress />;\n        }\n        return (\n            <Fragment>\n                <TasksReportsContainer projectId={this.props.projectId} startDate={this.props.startDate} endDate={this.props.endDate} userId={this.props.userId} />\n            </Fragment>\n        );\n    }\n}\n\nReport.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    startDate: PropTypes.string.isRequired,\n    endDate: PropTypes.string.isRequired,\n    userId: PropTypes.string.isRequired,\n    selectProject: PropTypes.func.isRequired,\n    fetchProjectMembers: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        projectId: String(ownProps.match.params.id),\n        startDate: String(ownProps.match.params.start_date),\n        endDate: String(ownProps.match.params.end_date),\n        userId: String(ownProps.match.params.user_id),\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        selectProject,\n        fetchProjectMembers,\n    }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);\n","import {\n  FETCH_GET_ALL_MEMBERS,\n  FETCH_TASK_ASSIGN,\n  FETCH_TASK_UNASSIGN,\n  FETCH_UPDATE_MEMBER,\n  FETCH_DELETE_MEMBER,\n  FETCH_QUIT_PROJECT,\n} from '../../constants/api/members';\n\nexport const fetchProjectMembers = id => ({\n  type: FETCH_GET_ALL_MEMBERS,\n  fetch: true,\n  url: `/projects/${id}/members/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchTaskAssign = (id, body) => ({\n  type: FETCH_TASK_ASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/assign/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchTaskUnassign = (id, userId) => ({\n  type: FETCH_TASK_UNASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/users/${userId}/unassign/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateMember = (projectId, memberId, body) => ({\n  type: FETCH_UPDATE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchDeleteMember = (projectId, memberId) => ({\n  type: FETCH_DELETE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchQuitMember = (projectId, memberId) => ({\n  type: FETCH_QUIT_PROJECT,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n","import {\n  FETCH_VIZ_HOURS_PER_BOARD,\n  FETCH_VIZ_HOURS_PER_LABEL,\n  FETCH_VIZ_HOURS_PER_USER,\n  FETCH_VIZ_HOURS_PER_TASK,\n  FETCH_VIZ_HOURS_TIMELINE,\n  FETCH_VIZ_COMMITS_PER_PR,\n  FETCH_VIZ_LINKED_REPOS,\n  FETCH_VIZ_PR_LEAD_TIME,\n  FETCH_VIZ_PR,\n  FETCH_VIZ_GITHUB,\n} from '../../constants/api/viz';\n\nexport const fetchVizHoursPerBoard = (id, body) => ({\n  type: FETCH_VIZ_HOURS_PER_BOARD,\n  fetch: true,\n  url: `/viz/projects/${id}/hours_per_board`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizHoursPerLabel = (id, body) => ({\n  type: FETCH_VIZ_HOURS_PER_LABEL,\n  fetch: true,\n  url: `/viz/boards/${id}/hours_per_label`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizHoursPerUser = (id, body) => ({\n  type: FETCH_VIZ_HOURS_PER_USER,\n  fetch: true,\n  url: `/viz/projects/${id}/hours_per_user`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizHoursPerTask = (projectId, userId, body) => ({\n  type: FETCH_VIZ_HOURS_PER_TASK,\n  fetch: true,\n  url: `/viz/projects/${projectId}/users/${userId}/tasks`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizGithub = (projectId, userId, body) => ({\n  type: FETCH_VIZ_GITHUB,\n  fetch: true,\n  url: `/viz/projects/${projectId}/users/${userId}/github`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetLinkedRepos = projectId => ({\n  type: FETCH_VIZ_LINKED_REPOS,\n  fetch: true,\n  url: `/projects/${projectId}/repos`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchUsersHoursTimeline = (projectId, body) => ({\n  type: FETCH_VIZ_HOURS_TIMELINE,\n  fetch: true,\n  url: `/viz/projects/${projectId}/users_timeline`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetPR = (projectId, body) => ({\n  type: FETCH_VIZ_PR,\n  fetch: true,\n  url: `/projects/${projectId}/gits/get_pull_requests`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetPRLeadTime = (projectId, body) => ({\n  type: FETCH_VIZ_PR_LEAD_TIME,\n  fetch: true,\n  url: `/projects/${projectId}/gits/get_pr_lead_time`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetCommitsPerPR = (projectId, body) => ({\n  type: FETCH_VIZ_COMMITS_PER_PR,\n  fetch: true,\n  url: `/projects/${projectId}/gits/get_commits_of_all_pr`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n","export const FETCH_VIZ_HOURS_PER_BOARD = 'FETCH_VIZ_HOURS_PER_BOARD';\nexport const FETCH_VIZ_HOURS_PER_LABEL = 'FETCH_VIZ_HOURS_PER_LABEL';\nexport const FETCH_VIZ_HOURS_PER_USER = 'FETCH_VIZ_HOURS_PER_USER';\nexport const FETCH_VIZ_HOURS_PER_TASK = 'FETCH_VIZ_HOURS_PER_TASK';\nexport const FETCH_VIZ_HOURS_TIMELINE = 'FETCH_VIZ_HOURS_TIMELINE';\nexport const FETCH_VIZ_COMMITS_PER_PR = 'FETCH_VIZ_COMMITS_PER_PR';\nexport const FETCH_VIZ_PR_LEAD_TIME = 'FETCH_VIZ_PR_LEAD_TIME';\nexport const FETCH_VIZ_LINKED_REPOS = 'FETCH_VIZ_LINKED_REPOS';\nexport const FETCH_VIZ_GITHUB = 'FETCH_VIZ_GITHUB';\nexport const FETCH_VIZ_PR = 'FETCH_VIZ_PR';\n","import { createSelector } from 'redux-orm';\n\nimport orm from '../reducers/orm';\n\nconst getRef = obj => (obj != null ? obj.ref : null);\n\n// Return all the users of a project\nexport const allMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  (props, state) => state.user.selectedProjectId,\n  (session, projectId) => {\n    const projectMembers = getRef(session.Project.get(o => o.id === projectId));\n    if (projectMembers === null) return [];\n    const members = session.Member\n      .filter(o => projectMembers.members.includes(o.id))\n      .orderBy(o => o.name.toUpperCase())\n      .toRefArray();\n    return members;\n  },\n);\n/*\nReturns all the users of a project. Each user comes with an attribute\nassigned<bool>, which is used to know if the user is asigned to the task\nor not.\n*/\nexport const onlyMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  (props, state) => state.board.selectedTask,\n  (props, state) => state.user.selectedProjectId,\n  (session, taskId, projectId) => {\n    const task = session.Task.get(o => o.id === taskId).ref;\n    if (task === null) return null;\n    const taskMembers = task.assigned;\n    const projectMembers = session.Project.get(o => o.id === projectId).ref.members;\n    const members = session.Member\n      .filter(o => projectMembers.includes(o.id))\n      .orderBy(o => o.name.toUpperCase())\n      .toRefArray();\n    return members.map((mem) => {\n      return Object.assign({}, mem, {\n        assigned: taskMembers.includes(mem.id),\n      });\n    });\n  },\n);\n\n// Returns all the users asigned to a single task.\nexport const oneTaskMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  props => props.taskId,\n  (session, taskId) => {\n    const task = getRef(session.Task.get(o => o.id === taskId));\n    if (task === null) return null;\n    return Object.assign({}, {\n      assigned: session.Member.filter(o => task.assigned.includes(o.id)).toRefArray(),\n    }).assigned;\n  },\n);\n\nexport const onlyTaskMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  (prop, state) => state.board.selectedTask,\n  (session, taskId) => {\n    const task = getRef(session.Task.get(o => o.id === taskId));\n    if (task === null) return null;\n    return Object.assign({}, {\n      assigned: session.Member.filter(o => task.assigned.includes(o.id)).toRefArray(),\n    }).assigned;\n  },\n);\n\nexport const evaluableMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  (props, state) => state.user.selectedProjectId,\n  (session, projectId) => {\n    const projectMembers = getRef(session.Project.get(o => o.id === projectId));\n    if (projectMembers === null) return [];\n    const members = session.Member\n      .filter(o => projectMembers.members.includes(o.id) && o.role !== 'viewer')\n      .orderBy(o => o.name.toUpperCase())\n      .toRefArray();\n    return members;\n  },\n);","import {\n  TOGGLE_ASSIGN_MODAL_REPO,\n  ARCHIVE_SEARCH,\n  REPORT_HOURS,\n  USERS_HOURS,\n  TRAZABILITY_HOURS,\n  TIMELINE_HOURS,\n  TOGGLE_FILTER,\n} from '../constants/project';\n\nexport const toggleRepoAssignForm = id => ({\n  type: TOGGLE_ASSIGN_MODAL_REPO,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const archiveSearch = body => ({\n  type: ARCHIVE_SEARCH,\n  payload: {\n    body,\n  },\n});\n\nexport const changeReportHours = body => ({\n  type: REPORT_HOURS,\n  payload: {\n    body,\n  },\n});\n\nexport const changeUsersHours = body => ({\n  type: USERS_HOURS,\n  payload: {\n    body,\n  },\n});\n\nexport const changeTrazabilityHours = body => ({\n  type: TRAZABILITY_HOURS,\n  payload: {\n    body,\n  },\n});\n\nexport const changeTimelineHours = body => ({\n  type: TIMELINE_HOURS,\n  payload: {\n    body,\n  },\n});\n\nexport const toggleTaskFilter = () => {\n  return {\n    type: TOGGLE_FILTER,\n  };\n};\n"],"sourceRoot":""}
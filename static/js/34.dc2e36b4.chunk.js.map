{"version":3,"sources":["components/report/share/BurnDown/Burndown.js","components/report/share/BurnDown/index.js","routes/burndownReport/index.js","actions/api/members.js","actions/api/burncharts.js","constants/api/burncharts.js"],"names":["legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","fontFamily","itemBackground","Burnup","_ref","graph","leg","react_default","a","createElement","line","data","margin","top","right","bottom","left","xScale","type","yScale","stacked","min","max","colors","reverse","maxY","axisLeft","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisBottom","dotSize","dotColor","dotBorderWidth","dotBorderColor","dotLabel","dotLabelYOffset","motionStiffness","motionDamping","styles","wrapper","height","modalContent","width","title","fontSize","fontFamiliy","color","headerContainer","text","fontWeight","marginTop","marginBottom","selectText","marginLeft","grid","display","container","modalContainer","backgroundColor","BurnDownContainer","props","_this","Object","classCallCheck","this","_super","call","state","loading","changeData","bind","assertThisInitialized","milestone","id","_this2","fetchGetBurndown","then","response","output","body","estimated_hours","language","selectedLanguage","burnchart","hour_stats","reported_hours","hours","days","setState","CircularProgress","classes","className","Typography_default","burndown","alignItems","milestoneSelection","textAlign","noMilestoneSelected","task_number","Burndown","noReportedHoursInMilestone","Component","connect","user","dispatch","bindActionCreators","notifyError","withStyles","Report","selectProject","projectId","fetchProjectMembers","react","BurnDown","ownProps","String","match","params","milestone_id","__webpack_require__","d","__webpack_exports__","fetchTaskAssign","fetchTaskUnassign","fetchUpdateMember","fetchDeleteMember","fetchQuitMember","_constants_api_members__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_ALL_MEMBERS","fetch","url","concat","method","FETCH_TASK_ASSIGN","userId","FETCH_TASK_UNASSIGN","memberId","FETCH_UPDATE_MEMBER","FETCH_DELETE_MEMBER","FETCH_QUIT_PROJECT","burncharts_fetchGetBurnup","burncharts_fetchGetBurndown","fetchGetBurnup"],"mappings":"wQAIMA,EAAU,CACZ,CACIC,OAAQ,eACRC,UAAW,SACXC,SAAS,EACTC,WAAY,IACZC,WAAY,EACZC,aAAc,EACdC,cAAe,gBACfC,UAAW,GACXC,WAAY,GACZC,YAAa,IACbC,WAAY,GACZC,YAAa,SACbC,kBAAmB,oBACnBC,QAAS,CACL,CACIC,GAAI,QACJC,MAAO,CACHC,WAAY,SACZC,eAAgB,qBAChBR,YAAa,OA0DlBS,EAnDA,SAAAC,GAET,IADFC,EACED,EADFC,MAAOC,EACLF,EADKE,IAEP,OACIC,EAAAC,EAAAC,cAACC,EAAA,eAAD,CACIC,KAAMN,EACNO,OAAQ,CAAEC,IAAK,GAAIC,MAAO,IAAKC,OAAQ,GAAIC,KAAM,KACjDC,OAAQ,CAAEC,KAAM,SAChBC,OAAQ,CACJD,KAAM,SACNE,SAAS,EACTC,IAAK,OACLC,IAAK,QAETC,OAAQ,CAAC,UAAW,UAAW,WAAWC,UAC1CC,KAAK,OACLC,SAAU,CACNC,OAAQ,OACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQzB,EAAI,GACZ0B,cAAe,GACfC,eAAgB,UAEpBC,WAAY,CACRP,OAAQ,SACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQzB,EAAI,GACZ0B,aAAc,GACdC,eAAgB,UAEpBE,QAAS,GACTC,SAAS,sBACTC,eAAgB,EAChBC,eAAe,UACfC,SAAS,IACTC,iBAAkB,GAClBC,gBAAiB,GACjBC,cAAe,GACf1D,QAASA,kdCpDrB,IAAM2D,EAAS,CACbC,QAAS,CACPC,OAAQ,SAEVC,aAAc,CACZC,MAAO,QACPF,OAAQ,SAEVG,MAAO,CACLC,SAAU,OACVC,YACE,0MACFC,MAAO,mBAETC,gBAAiB,CACfxC,OAAQ,OACRmC,MAAO,QAETM,KAAM,CACJF,MAAO,UACPF,SAAU,GACVK,WAAY,OACZC,UAAW,OACXC,aAAc,QAEhBC,WAAY,CACVN,MAAO,UACPF,SAAU,GACVK,WAAY,SACZC,UAAW,OACXC,aAAc,OACdE,WAAY,QAEdC,KAAM,CACJC,QAAS,OACTb,MAAO,QAETc,UAAW,CACThB,OAAQ,SAEViB,eAAgB,CACdjB,OAAQ,SAEVnC,KAAM,CACJqC,MAAO,OACPF,OAAQ,MACRkB,gBAAiB,WAEnB1D,MAAO,CACLJ,WAAY,+CAIV+D,0CACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXC,SAAS,EACT9D,KAAM,IAERuD,EAAKQ,WAAaR,EAAKQ,WAAWC,KAAhBR,OAAAS,EAAA,EAAAT,CAAAD,IANDA,uDASnB,WACEG,KAAKK,WAAWL,KAAKJ,MAAMY,qCAG7B,SAAWC,GAAI,IAAAC,EAAAV,KACbA,KAAKJ,MACFe,iBAAiBF,GACjBG,KAAK,SAACC,GACL,IAAIC,EAAS,GACbA,EAASD,EAASE,KAClB,IAAIC,EAAkB,GACtBA,EAAe,GAASC,IAASP,EAAKd,MAAMsB,kBAAkBC,UAAUH,gBACxEA,EAAe,KAAWH,EAASE,KAAKK,WAAW,GAAzB,KAE1B,IAAIC,EAAiB,GACrBA,EAAc,GAASJ,IAASP,EAAKd,MAAMsB,kBAAkBC,UAAUE,eACvEA,EAAc,KAAWR,EAASE,KAAKK,WAAW,GAAzB,KAEzBN,EAAM,WAAiB,CAACE,EAAiBK,GAEzC,IAAI1G,EAAU,CAACsG,IAASP,EAAKd,MAAMsB,kBAAkBC,UAAUG,MAAOL,IAASP,EAAKd,MAAMsB,kBAAkBC,UAAUI,MACtHT,EAAM,QAAcnG,EAEpB+F,EAAKc,SAAS,CACZpB,SAAS,EACT9D,KAAMwE,4BAKd,WAEE,GADoBd,KAAKG,MAAjBC,QAEN,OAAOlE,EAAAC,EAAAC,cAACqF,EAAA,EAAD,MAHF,IAKCC,EAAY1B,KAAKJ,MAAjB8B,QACApF,EAAS0D,KAAKG,MAAd7D,KACR,OACEJ,EAAAC,EAAAC,cAAA,OAAMuF,UAAWD,EAAQlC,WACvBtD,EAAAC,EAAAC,cAAA,OAAKuF,UAAWD,EAAQ3C,iBACtB7C,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAYwF,UAAWD,EAAQ/C,OAC5BsC,IAASjB,KAAKJ,MAAMsB,kBAAkBC,UAAUU,UAEnD3F,EAAAC,EAAAC,cAAA,OAAKuF,UAAWD,EAAQrF,OACxBH,EAAAC,EAAAC,cAAA,OACET,MAAO,CAAE4D,QAAS,OAAQuC,WAAY,SAAUvF,OAAQ,SAExDL,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAYwF,UAAWD,EAAQ1C,MAC5BiC,IAASjB,KAAKJ,MAAMsB,kBAAkBC,UAAUY,mBADnD,IACwE,IAAK/B,KAAKJ,MAAMY,aAI5FtE,EAAAC,EAAAC,cAAA,OAAKT,MAAO2C,EAAOtC,MAAO2F,UAAWD,EAAQnD,SACjC,KAATjC,GACCJ,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAYR,MAAO,CAAEqG,UAAW,WAC7B,IACAf,IAASjB,KAAKJ,MAAMsB,kBAAkBC,UAAUc,oBAAqB,KAGhE,KAAT3F,GAAoC,IAArBA,EAAK4F,aAAqBhG,EAAAC,EAAAC,cAAC+F,EAAD,CAAUnG,MAAOM,EAAK8E,WAAYnF,IAAKK,EAAK3B,UAC5E,KAAT2B,GAAoC,IAArBA,EAAK4F,aACnBhG,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,CAAYR,MAAO,CAAEqG,UAAW,WAC7B,IACAf,IAASjB,KAAKJ,MAAMsB,kBAAkBC,UAAUiB,2BAA4B,cAzE3DC,aA6GjBC,cAhBS,SAACnC,GACvB,MAAO,CACLe,iBAAkBf,EAAMoC,KAAKtB,WAIN,SAACuB,GAC1B,OAAOC,YACL,CACEC,gBACA/B,sBAEF6B,IAIWF,CAGbK,qBAAWrE,EAAXqE,CAAmBhD,6cC/KfiD,0CACF,SAAAA,EAAYhD,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4C,IACf/C,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACTC,SAAS,GAHEP,uDAOnB,WAAoB,IAAAa,EAAAV,KAChBA,KAAKJ,MAAMiD,cAAc7C,KAAKJ,MAAMkD,WACpC9C,KAAKJ,MAAMmD,oBAAoB/C,KAAKJ,MAAMkD,WACrClC,KAAK,WACFF,EAAKc,SAAS,CAAEpB,SAAS,4BAIrC,WACI,OAAIJ,KAAKG,MAAMC,QACJlE,EAAAC,EAAAC,cAACqF,EAAA,EAAD,MAGPvF,EAAAC,EAAAC,cAAC4G,EAAA,SAAD,KACI9G,EAAAC,EAAAC,cAAC6G,EAAD,CAA0BH,UAAW9C,KAAKJ,MAAMkD,UAAWtC,UAAWR,KAAKJ,MAAMY,oBAtB5E6B,aAiDNC,sBAdf,SAAyBnC,EAAO+C,GAC5B,MAAO,CACHJ,UAAWK,OAAOD,EAASE,MAAMC,OAAO5C,IACxCD,UAAW2C,OAAOD,EAASE,MAAMC,OAAOC,gBAIrB,SAACd,GACxB,OAAOC,YAAmB,CACtBI,kBACAE,yBACDP,IAGQF,CAA6CM,qCC7D5DW,EAAAC,EAAAC,EAAA,sBAAAV,IAAAQ,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAAL,EAAAC,EAAAC,EAAA,sBAAAI,IAAAN,EAAAC,EAAAC,EAAA,sBAAAK,IAAA,IAAAC,EAAAR,EAAA,IASaR,EAAsB,SAAAtC,GAAE,MAAK,CACxC5D,KAAMmH,IACNC,OAAO,EACPC,IAAG,aAAAC,OAAe1D,EAAf,aACH4C,OAAQ,CACNe,OAAQ,SAICV,EAAkB,SAACjD,EAAIM,GAAL,MAAe,CAC5ClE,KAAMwH,IACNJ,OAAO,EACPC,IAAG,UAAAC,OAAY1D,EAAZ,YACH4C,OAAQ,CACNe,OAAQ,OACRrD,UAIS4C,EAAoB,SAAClD,EAAI6D,GAAL,MAAiB,CAChDzH,KAAM0H,IACNN,OAAO,EACPC,IAAG,UAAAC,OAAY1D,EAAZ,WAAA0D,OAAwBG,EAAxB,cACHjB,OAAQ,CACNe,OAAQ,YAICR,EAAoB,SAACd,EAAW0B,EAAUzD,GAAtB,MAAgC,CAC/DlE,KAAM4H,IACNR,OAAO,EACPC,IAAG,aAAAC,OAAerB,EAAf,aAAAqB,OAAoCK,EAApC,KACHnB,OAAQ,CACNe,OAAQ,MACRrD,UAIS8C,EAAoB,SAACf,EAAW0B,GAAZ,MAA0B,CACzD3H,KAAM6H,IACNT,OAAO,EACPC,IAAG,aAAAC,OAAerB,EAAf,aAAAqB,OAAoCK,EAApC,KACHnB,OAAQ,CACNe,OAAQ,YAICN,EAAkB,SAAChB,EAAW0B,GAAZ,MAA0B,CACvD3H,KAAM8H,IACNV,OAAO,EACPC,IAAG,aAAAC,OAAerB,EAAf,aAAAqB,OAAoCK,EAApC,KACHnB,OAAQ,CACNe,OAAQ,8CC7DZb,EAAAC,EAAAC,EAAA,sBAAAmB,IAAArB,EAAAC,EAAAC,EAAA,sBAAAoB,IAKO,IAAMC,EAAiB,SAAArE,GAAE,MAAK,CACjC5D,KCN4B,mBDO5BoH,OAAO,EACPC,IAAG,WAAAC,OAAa1D,EAAb,iBACH4C,OAAQ,CACJe,OAAQ,SAIHzD,EAAmB,SAAAF,GAAE,MAAK,CACnC5D,KCd8B,qBDe9BoH,OAAO,EACPC,IAAG,WAAAC,OAAa1D,EAAb,mBACH4C,OAAQ,CACJe,OAAQ","file":"static/js/34.dc2e36b4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveLine } from '@nivo/line';\n\nconst legends = [\n    {\n        anchor: 'bottom-right',\n        direction: 'column',\n        justify: false,\n        translateX: 100,\n        translateY: 0,\n        itemsSpacing: 0,\n        itemDirection: 'left-to-right',\n        itemWidth: 80,\n        itemHeight: 20,\n        itemOpacity: 0.75,\n        symbolSize: 12,\n        symbolShape: 'circle',\n        symbolBorderColor: 'rgba(0, 0, 0, .5)',\n        effects: [\n            {\n                on: 'hover',\n                style: {\n                    fontFamily: \"Roboto\",\n                    itemBackground: 'rgba(0, 0, 0, .03)',\n                    itemOpacity: 1,\n                },\n            },\n        ],\n    },\n];\n\nconst Burnup = ({\n    graph, leg,\n}) => {\n    return (\n        <ResponsiveLine\n            data={graph}\n            margin={{ top: 50, right: 160, bottom: 50, left: 100 }}\n            xScale={{ type: 'point' }}\n            yScale={{\n                type: 'linear',\n                stacked: false,\n                min: 'auto',\n                max: 'auto',\n            }}\n            colors={['#8bc34a', '#ff9800', '#ff5722'].reverse()}\n            maxY=\"auto\"\n            axisLeft={{\n                orient: 'left',\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: leg[0],\n                legendOffset: -40,\n                legendPosition: 'middle',\n            }}\n            axisBottom={{\n                orient: 'bottom',\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: leg[1],\n                legendOffset: 36,\n                legendPosition: 'middle',\n            }}\n            dotSize={10}\n            dotColor=\"inherit:darker(0.3)\"\n            dotBorderWidth={2}\n            dotBorderColor=\"#ffffff\"\n            dotLabel=\"y\"\n            dotLabelYOffset={-12}\n            motionStiffness={90}\n            motionDamping={15}\n            legends={legends}\n        />\n    );\n};\n\nBurnup.propTypes = {\n    data: PropTypes.array.isRequired,\n};\n\nexport default Burnup;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport 'react-day-picker/lib/style.css';\n\nimport CircularProgress from '../../../lib/CircularProgress';\nimport { notifyError } from '../../../../actions/notification';\n\nimport {\n  fetchGetBurndown,\n} from '../../../../actions/api/burncharts';\n\nimport BurnDown from './Burndown';\n\nimport language from '../../../../constants/language';\n\n/* eslint-disable react/no-unused-state */\nconst styles = {\n  wrapper: {\n    height: '400px',\n  },\n  modalContent: {\n    width: '500px',\n    height: '400px',\n  },\n  title: {\n    fontSize: '28px',\n    fontFamiliy:\n      '-apple-system, \".SFNSText-Regular\", \"San Francisco\", BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Lucida Grande\", Arial, sans-serif',\n    color: 'rgb(68, 68, 68)',\n  },\n  headerContainer: {\n    margin: '30px',\n    width: 'auto',\n  },\n  text: {\n    color: '#2a3d41',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: '10px',\n    marginBottom: '10px',\n  },\n  selectText: {\n    color: '#2a3d41',\n    fontSize: 14,\n    fontWeight: 'normal',\n    marginTop: '10px',\n    marginBottom: '10px',\n    marginLeft: '10px',\n  },\n  grid: {\n    display: 'flex',\n    width: '100%',\n  },\n  container: {\n    height: '700px',\n  },\n  modalContainer: {\n    height: '700px',\n  },\n  line: {\n    width: 'auto',\n    height: '1px',\n    backgroundColor: '#CCCCCC',\n  },\n  graph: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n  }\n};\n\nclass BurnDownContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      data: '',\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n\n  componentDidMount() {\n    this.changeData(this.props.milestone);\n  }\n\n  changeData(id) {\n    this.props\n      .fetchGetBurndown(id)\n      .then((response) => {\n        var output = {}\n        output = response.body\n        var estimated_hours = {}\n        estimated_hours['id'] = language[this.props.selectedLanguage].burnchart.estimated_hours\n        estimated_hours['data'] = response.body.hour_stats[1]['data']\n\n        var reported_hours = {}\n        reported_hours['id'] = language[this.props.selectedLanguage].burnchart.reported_hours\n        reported_hours['data'] = response.body.hour_stats[0]['data']\n\n        output['hour_stats'] = [estimated_hours, reported_hours]\n\n        var legends = [language[this.props.selectedLanguage].burnchart.hours, language[this.props.selectedLanguage].burnchart.days]\n        output['legends'] = legends\n\n        this.setState({\n          loading: false,\n          data: output,\n        });\n      });\n  }\n\n  render() {\n    const { loading } = this.state;\n    if (loading) {\n      return <CircularProgress />;\n    }\n    const { classes } = this.props;\n    const { data } = this.state\n    return (\n      < div className={classes.container} >\n        <div className={classes.headerContainer}>\n          <Typography className={classes.title}>\n            {language[this.props.selectedLanguage].burnchart.burndown}\n          </Typography>\n          <div className={classes.line} />\n          <div\n            style={{ display: 'flex', alignItems: 'center', margin: '10px' }}\n          >\n            <Typography className={classes.text}>\n              {language[this.props.selectedLanguage].burnchart.milestoneSelection}:{' '}{this.props.milestone}\n            </Typography>\n          </div>\n        </div>\n        <div style={styles.graph} className={classes.wrapper}>\n          {data === '' && (\n            <Typography style={{ textAlign: 'center' }}>\n              {' '}\n              {language[this.props.selectedLanguage].burnchart.noMilestoneSelected}{' '}\n            </Typography>\n          )}\n          {data !== '' && data.task_number !== 0 && <BurnDown graph={data.hour_stats} leg={data.legends} />}\n          {data !== '' && data.task_number === 0 && (\n            <Typography style={{ textAlign: 'center' }}>\n              {' '}\n              {language[this.props.selectedLanguage].burnchart.noReportedHoursInMilestone}{' '}\n            </Typography>\n          )}\n        </div>\n      </div >\n    );\n  }\n}\n\nBurnDownContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  projectId: PropTypes.string.isRequired,\n  milestone: PropTypes.string.isRequired,\n  notifyError: PropTypes.func.isRequired,\n  changeBurnchartMilestone: PropTypes.func.isRequired,\n  fetchGetBurndown: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      notifyError,\n      fetchGetBurndown,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(BurnDownContainer));\n","import React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectProject } from '../../actions/user';\nimport { fetchProjectMembers } from '../../actions/api/members';\n\nimport CircularProgress from '../../components/lib/CircularProgress';\n\nimport BurndownReportsContainer from '../../components/report/share/BurnDown';\n\nclass Report extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.selectProject(this.props.projectId);\n        this.props.fetchProjectMembers(this.props.projectId)\n            .then(() => {\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress />;\n        }\n        return (\n            <Fragment>\n                <BurndownReportsContainer projectId={this.props.projectId} milestone={this.props.milestone} />\n            </Fragment>\n        );\n    }\n}\n\nReport.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    milestone: PropTypes.string.isRequired,\n    selectProject: PropTypes.func.isRequired,\n    fetchProjectMembers: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        projectId: String(ownProps.match.params.id),\n        milestone: String(ownProps.match.params.milestone_id),\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        selectProject,\n        fetchProjectMembers,\n    }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);\n","import {\n  FETCH_GET_ALL_MEMBERS,\n  FETCH_TASK_ASSIGN,\n  FETCH_TASK_UNASSIGN,\n  FETCH_UPDATE_MEMBER,\n  FETCH_DELETE_MEMBER,\n  FETCH_QUIT_PROJECT,\n} from '../../constants/api/members';\n\nexport const fetchProjectMembers = id => ({\n  type: FETCH_GET_ALL_MEMBERS,\n  fetch: true,\n  url: `/projects/${id}/members/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchTaskAssign = (id, body) => ({\n  type: FETCH_TASK_ASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/assign/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchTaskUnassign = (id, userId) => ({\n  type: FETCH_TASK_UNASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/users/${userId}/unassign/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateMember = (projectId, memberId, body) => ({\n  type: FETCH_UPDATE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchDeleteMember = (projectId, memberId) => ({\n  type: FETCH_DELETE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchQuitMember = (projectId, memberId) => ({\n  type: FETCH_QUIT_PROJECT,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n","import {\n    FETCH_GET_BURNUP,\n    FETCH_GET_BURNDOWN,\n} from '../../constants/api/burncharts';\n\nexport const fetchGetBurnup = id => ({\n    type: FETCH_GET_BURNUP,\n    fetch: true,\n    url: `/charts/${id}/burnup_chart`,\n    params: {\n        method: 'GET',\n    },\n});\n\nexport const fetchGetBurndown = id => ({\n    type: FETCH_GET_BURNDOWN,\n    fetch: true,\n    url: `/charts/${id}/burndown_chart`,\n    params: {\n        method: 'GET',\n    },\n});\n","export const FETCH_GET_BURNUP = 'FETCH_GET_BURNUP';\nexport const FETCH_GET_BURNDOWN = 'FETCH_GET_BURNDOWN';"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/@nivo/bar/index.js","../node_modules/lodash/_baseExtremum.js","../node_modules/@nivo/bar/cjs/nivo-bar.js","../node_modules/lodash/min.js","../node_modules/lodash/_baseLt.js","../node_modules/lodash/max.js","../node_modules/lodash/_baseGt.js","../node_modules/lodash/range.js","../node_modules/lodash/_createRange.js","../node_modules/lodash/_baseRange.js","../node_modules/lodash/flattenDepth.js","../node_modules/@nivo/bar/node_modules/@nivo/core/index.js","../node_modules/@nivo/bar/node_modules/@nivo/core/cjs/nivo-core.js"],"names":["module","exports","__webpack_require__","isSymbol","array","iteratee","comparator","index","length","value","current","undefined","computed","result","global","_interopDefault","ex","Object","defineProperty","d3Scale","min","max","range","flattenDepth","d3Shape","React","React__default","PropTypes","compose","withPropsOnChange","pure","core","axes","legends","defaultProps","reactMotion","setDisplayName","getIndexedScale","data","getIndex","range$$1","padding","scaleBand","rangeRound","domain","map","getGroupedScale","keys","_minValue","_maxValue","allValues","reduce","acc","entry","concat","k","maxValue","minValue","scaleLinear","generateGroupedBars","options","layout","_ref","reverse","width","height","getColor","_ref$padding","_ref$innerPadding","innerPadding","xScale","yScale","barWidth","bandwidth","yRef","getY","d","getHeight","y","bars","forEach","key","i","x","barHeight","barData","id","indexValue","push","color","generateVerticalGroupedBars","_ref2","_ref2$padding","_ref2$innerPadding","xRef","getX","getWidth","generateHorizontalGroupedBars","getStackedScale","generateStackedBars","stackedData","stack","offset","stackOffsetDiverging","stackedDataItem","generateVerticalStackedBars","generateHorizontalStackedBars","classCallCheck","instance","Constructor","TypeError","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","possibleConstructorReturn","self","ReferenceError","BarItem","borderRadius","borderWidth","borderColor","label","shouldRenderLabel","labelColor","showTooltip","hideTooltip","onClick","onMouseEnter","onMouseLeave","tooltip","theme","createElement","transform","rx","ry","fill","strokeWidth","stroke","e","onMouseMove","textAnchor","alignmentBaseline","style","labels","text","pointerEvents","propTypes","shape","string","isRequired","number","oneOfType","bool","func","getTooltipLabel","tooltipFormat","element","BarItem$1","_onClick","event","_ref3","BasicTooltip","enableChip","format","renderContent","bind","enhance","BarPropTypes","arrayOf","object","indexBy","layers","oneOf","groupMode","axisTop","axisPropType","axisRight","axisBottom","axisLeft","enableGridX","enableGridY","gridXValues","gridYValues","barComponent","enableLabel","labelFormat","getLabel","labelSkipWidth","labelSkipHeight","labelTextColor","getLabelTextColor","labelLinkColor","getLabelLinkColor","defsPropTypes","any","getBorderColor","isInteractive","tooltipLabel","dataFrom","LegendPropShape","pixelRatio","BarDefaultProps","defs","noop","window","devicePixelRatio","enhance$1","Component","withTheme","withColors","withDimensions","withMotion","getAccessorFor","getInheritedColorGenerator","_ref4","getLabelGenerator","_ref5","_ref6","barWillEnterHorizontal","val","barWillEnterVertical","Bar","props","margin","outerWidth","outerHeight","markers","animate","motionStiffness","motionDamping","legends$$1","motionProps","springConfig","damping","stiffness","willEnter","willLeave","spring","barWillLeaveVertical","barWillLeaveHorizontal","boundDefs","bindDefs","dataKey","targetKey","legendDataForKeys","filter","bar","legendDataForIndexes","Container","commonProps","TransitionMotion","styles","interpolatedStyles","_ref7","baseProps","Math","layerById","grid","Grid","xValues","yValues","Axes","top","right","bottom","left","CartesianMarkers","legend","legendData","BoxLegendSvg","containerWidth","containerHeight","SvgWrapper","layer","Fragment","Bar$1","findNodeUnderCursor","nodes","find","node","isCursorInRect","BarCanvas","_Component","_temp","_this","this","_len","args","Array","_key","apply","handleMouseHover","_this$props","_getRelativeCursor","getRelativeCursor","surface","handleMouseLeave","handleClick","_this$props2","_getRelativeCursor2","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","inherits","componentDidMount","ctx","getContext","draw","shouldComponentUpdate","componentDidUpdate","_this2","scale","fillStyle","background","fillRect","translate","strokeStyle","renderGridLinesToCanvas","axis","renderLegendToCanvas","itemTextColor","symbolSize","renderAxesToCanvas","render","_this3","_props","ref","BarCanvas$1","ResponsiveBar","ResponsiveWrapper","ResponsiveBarCanvas","baseExtremum","baseLt","identity","other","baseGt","createRange","baseRange","isIterateeCall","toFinite","fromRight","start","end","step","nativeCeil","ceil","nativeMax","baseFlatten","toInteger","depth","Measure","d3Interpolate","isFunction","d3Format","memoize","get","d3Color","last","isArray","d3ScaleChromatic","isString","setPropTypes","without","d3Hierarchy","withProps","isEqual","partialRight","merge","isNumber","d3TimeFormat","shouldUpdate","isPlainObject","pick","set","objectWithoutProperties","obj","indexOf","containerStyle","position","tooltipStyle","zIndex","noopHandlers","state","isTooltipVisible","tooltipContent","content","clientX","clientY","bounds","container","getBoundingClientRect","setState","children","_state","dimensions","_state$dimensions","shouldRender","onResize","contentRect","measureRef","LinearGradient","colors","x1","x2","y1","y2","opacity","stopColor","stopOpacity","gradientTypes","linearGradient","PatternDots","size","stagger","fullSize","radius","halfPadding","patternUnits","cx","cy","r","TWO_PI","PI","degreesToRadians","degrees","radiansToDegrees","radians","positionFromAngle","angle","distance","cos","sin","textPropsByEngine","svg","align","center","baseline","canvas","PatternLines","_spacing","spacing","_rotation","rotation","lineWidth","round","abs","path","strokeLinecap","PatternSquares","patternTypes","patternDots","patternLines","patternSquares","defsMapping","Defs","definitions","type","def","axisThemePropType","line","strokeDasharray","ticks","fontSize","gridThemePropType","legendsThemePropType","labelsThemePropType","dotsThemePropType","themePropType","dots","defaultTheme","lineColor","lineStrokeWidth","textColor","boxShadow","basic","whiteSpace","display","alignItems","table","tableCell","xmlns","role","enhancedSpring","config","interpolator","interpolate","SmartMotion","_PureComponent","oldValues","newInters","currentStepValues","stepValues","stepInterpolators","rest","resolvedStyle","Motion","values","newValues","_key2","percentage","PureComponent","DotsItemSymbol","DotsItemSymbol$1","DotsItem","symbol","labelTextAnchor","labelYOffset","DotsItemDefaultProps","DotsItem$1","Chip","Chip$1","chipStyle","marginRight","_value","isNaN","String","BasicTooltip$1","tableStyle","borderCollapse","TableTooltip","title","rows","row","column","j","TableTooltip$1","memoizedColorModifier","method","_amount","amount","parseFloat","rgb","toString","noneGenerator","inheritGenerator","quantizeColorScales","nivo","BrBG","schemeBrBG","PRGn","schemePRGn","PiYG","schemePiYG","PuOr","schemePuOr","RdBu","schemeRdBu","RdGy","schemeRdGy","RdYlBu","schemeRdYlBu","RdYlGn","schemeRdYlGn","spectral","schemeSpectral","blues","schemeBlues","greens","schemeGreens","greys","schemeGreys","oranges","schemeOranges","purples","schemePurples","reds","schemeReds","BuGn","schemeBuGn","BuPu","schemeBuPu","GnBu","schemeGnBu","OrRd","schemeOrRd","PuBuGn","schemePuBuGn","PuBu","schemePuBu","PuRd","schemePuRd","RdPu","schemeRdPu","YlGnBu","schemeYlGnBu","YlGn","schemeYlGn","YlOrBr","schemeYlOrBr","YlOrRd","schemeYlOrRd","quantizeColorScalesKeys","colorSchemes","category10","schemeCategory10","accent","schemeAccent","dark2","schemeDark2","paired","schemePaired","pastel1","schemePastel1","pastel2","schemePastel2","set1","schemeSet1","set2","schemeSet2","set3","schemeSet3","brown_blueGreen","purpleRed_green","pink_yellowGreen","purple_orange","red_blue","red_grey","red_yellow_blue","red_yellow_green","blue_green","blue_purple","green_blue","orange_red","purple_blue_green","purple_blue","purple_red","red_purple","yellow_green_blue","yellow_green","yellow_orange_brown","yellow_orange_red","colorInterpolators","interpolateBrBG","interpolatePRGn","interpolatePiYG","interpolatePuOr","interpolateRdBu","interpolateRdGy","interpolateRdYlBu","interpolateRdYlGn","interpolateSpectral","interpolateBlues","interpolateGreens","interpolateGreys","interpolateOranges","interpolatePurples","interpolateReds","viridis","interpolateViridis","inferno","interpolateInferno","magma","interpolateMagma","plasma","interpolatePlasma","warm","interpolateWarm","cool","interpolateCool","cubehelixDefault","interpolateCubehelixDefault","interpolateBuGn","interpolateBuPu","interpolateGnBu","interpolateOrRd","interpolatePuBuGn","interpolatePuBu","interpolatePuRd","interpolateRdPu","interpolateYlGnBu","interpolateYlGn","interpolateYlOrBr","interpolateYlOrRd","rainbow","interpolateRainbow","sinebow","interpolateSinebow","ordinalColorScales","scaleOrdinal","nivoCategoricalColors","dataColor","getColorsGenerator","colorBy","colorGenerator","getColorId","quantizeColorScalePropType","curvePropMapping","basis","curveBasis","basisClosed","curveBasisClosed","basisOpen","curveBasisOpen","bundle","curveBundle","cardinal","curveCardinal","cardinalClosed","curveCardinalClosed","cardinalOpen","curveCardinalOpen","catmullRom","curveCatmullRom","catmullRomClosed","curveCatmullRomClosed","catmullRomOpen","curveCatmullRomOpen","linear","curveLinear","linearClosed","curveLinearClosed","monotoneX","curveMonotoneX","monotoneY","curveMonotoneY","natural","curveNatural","curveStep","stepAfter","curveStepAfter","stepBefore","curveStepBefore","curvePropKeys","curvePropType","closedCurvePropKeys","c","endsWith","closedCurvePropType","areaCurvePropKeys","areaCurvePropType","lineCurvePropKeys","lineCurvePropType","curveFromProp","match","stackOrderPropMapping","ascending","stackOrderAscending","descending","stackOrderDescending","insideOut","stackOrderInsideOut","none","stackOrderNone","stackOrderReverse","stackOrderPropKeys","stackOrderPropType","stackOffsetPropMapping","expand","stackOffsetExpand","diverging","stackOffsetNone","silhouette","stackOffsetSilhouette","wiggle","stackOffsetWiggle","stackOffsetPropKeys","stackOffsetPropType","treeMapTilePropMapping","binary","treemapBinary","dice","treemapDice","slice","treemapSlice","sliceDice","treemapSliceDice","squarify","treemapSquarify","resquarify","treemapResquarify","treeMapTilePropKeys","treeMapTilePropType","scalePropType","marginPropType","motionPropTypes","blendModePropType","defaultCategoricalColors","defaultColorRange","defaultMargin","directive","boundSpring","horizontalPositions","verticalPositions","centerScale","getScaleValues","tickCount","computeAxisTicks","_position","_tickValues","tickValues","_ref$tickSize","tickSize","_ref$tickPadding","tickPadding","_ref$tickRotation","tickRotation","_ref$engine","engine","textProps","orient","lineX","lineY","textX","textY","textAlign","textBaseline","includes","computeGridLines","_ref2$values","lines","v","AxisTick","rotate","gStyle","instanceOf","Date","axisPositions","legendPositions","legendPosition","legendOffset","_ref$style","Axis","_legend","_computeAxisTicks","isHorizontal","legendX","legendY","legendRotation","tickElements","tick","Axis$1","f","timeFormat","horizontalPositions$1","positions","Axes$1","nextProps","GridLine","GridLines","_props2","interpolatedStyle","xLines","yLines","Grid$1","CartesianMarkersItem","lineStyle","textStyle","legendOffsetX","legendOffsetY","legendOrientation","legendNode","legendProps","offsetX","offsetY","orientation","computeLabel","CartesianMarkersItem$1","marker","CartesianMarkers$1","getDistance","deltaX","deltaY","sqrt","getAngle","atan2","isCursorInRing","centerX","centerY","innerRadius","cursorX","cursorY","horizontalPositions$2","positions$1","renderAxisToCanvas","save","font","beginPath","moveTo","lineTo","fillText","restore","gradientKeys","patternKeys","isMatchingDef","predicate","linearGradientDef","patternDotsDef","patternLinesDef","patternSquaresDef","_defaultProps","_setPropTypes","_ref$colorsKey","colorsKey","_ref$colorByKey","colorByKey","_ref$destKey","destKey","_ref$defaultColors","defaultColors","_ref$defaultColorBy","defaultColorBy","withCurve","_ref$srcKey","srcKey","withHierarchy","_ref$valueKey","valueKey","_ref$valueDefault","valueDefault","hierarchy","sum","_label","getRawLabel","formatter","getAccessorOrValue","stackOrderFromProp","prop","stackOffsetFromProp","treeMapTileFromProp","colorSchemeIds","colorInterpolatorIds","getColorRange","instruction","getColorScale","dataScale","scheme","_scale","scaleSequential","_scale2","themeKey","Error","inheritMatches","colorMotionSpring","_color","_config","colorR","colorG","g","colorB","b","precision","getInterpolatedColor","guessQuantizeColorScale","scaleQuantize","join","midAngle","arc","startAngle","endAngle","absoluteAngleDegrees","absAngle","absoluteAngleRadians","floor","computeArcBoundingBox","ox","oy","includeCenter","points","p0","p1","p","xs","ys","x0","y0","getPolarLabelProps","_positionFromAngle","el","getHoveredArc","arcs","cursorAngle","rules","_ref$colorKey","colorKey","_ref$targetKey","generatedIds","_loop","_rules$i","nodeColor","inheritedId","_nodeColor","_inheritedId","inheritedDef","colorStop","defaultAnimate","defaultMotionStiffness","defaultMotionDamping"],"mappings":"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","file":"static/js/9.a2d52a87.chunk.js","sourcesContent":["module.exports = require('./cjs/nivo-bar');","var isSymbol = require('./isSymbol');\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\n\n\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) {\n      var computed = current,\n          result = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseExtremum;","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar d3Scale = require('d3-scale');\n\nvar min = _interopDefault(require('lodash/min'));\n\nvar max = _interopDefault(require('lodash/max'));\n\nvar range = _interopDefault(require('lodash/range'));\n\nvar flattenDepth = _interopDefault(require('lodash/flattenDepth'));\n\nvar d3Shape = require('d3-shape');\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar compose = _interopDefault(require('recompose/compose'));\n\nvar withPropsOnChange = _interopDefault(require('recompose/withPropsOnChange'));\n\nvar pure = _interopDefault(require('recompose/pure'));\n\nvar core = require('@nivo/core');\n\nvar axes = require('@nivo/axes');\n\nvar legends = require('@nivo/legends');\n\nvar defaultProps = _interopDefault(require('recompose/defaultProps'));\n\nvar reactMotion = require('react-motion');\n\nvar setDisplayName = _interopDefault(require('recompose/setDisplayName'));\n/**\n * Generates indexed scale.\n *\n * @param {Array.<Object>} data\n * @param {Function}       getIndex\n * @param {Array.<number>} range\n * @param {number}         padding\n * @returns {Function}\n */\n\n\nvar getIndexedScale = function getIndexedScale(data, getIndex, range$$1, padding) {\n  return d3Scale.scaleBand().rangeRound(range$$1).domain(data.map(getIndex)).padding(padding);\n};\n/**\n * Generates scale for grouped bar chart.\n *\n * @param {Array.<Object>} data\n * @param {Array.<string>} keys\n * @param {number}         _minValue\n * @param {number|string}  _maxValue\n * @param {Array.<number>} range\n * @returns {Function}\n */\n\n\nvar getGroupedScale = function getGroupedScale(data, keys, _minValue, _maxValue, range$$1) {\n  var allValues = data.reduce(function (acc, entry) {\n    return [].concat(acc, keys.map(function (k) {\n      return entry[k];\n    }));\n  }, []);\n  var maxValue = _maxValue;\n\n  if (maxValue === 'auto') {\n    maxValue = max(allValues);\n  }\n\n  var minValue = _minValue;\n\n  if (minValue === 'auto') {\n    minValue = min(allValues);\n    if (minValue > 0) minValue = 0;\n  }\n\n  return d3Scale.scaleLinear().rangeRound(range$$1).domain([minValue, maxValue]);\n};\n/**\n * Generates x/y scales & bars for vertical grouped bar chart.\n *\n * @param {Array.<Object>} data\n * @param {Function}       getIndex\n * @param {Array.<string>} keys\n * @param {number}         minValue\n * @param {number}         maxValue\n * @param {boolean}        reverse\n * @param {number}         width\n * @param {number}         height\n * @param {Function}       getColor\n * @param {number}         [padding=0]\n * @param {number}         [innerPadding=0]\n * @return {{ xScale: Function, yScale: Function, bars: Array.<Object> }}\n */\n\n\nvar generateVerticalGroupedBars = function generateVerticalGroupedBars(_ref) {\n  var data = _ref.data,\n      getIndex = _ref.getIndex,\n      keys = _ref.keys,\n      minValue = _ref.minValue,\n      maxValue = _ref.maxValue,\n      reverse = _ref.reverse,\n      width = _ref.width,\n      height = _ref.height,\n      getColor = _ref.getColor,\n      _ref$padding = _ref.padding,\n      padding = _ref$padding === undefined ? 0 : _ref$padding,\n      _ref$innerPadding = _ref.innerPadding,\n      innerPadding = _ref$innerPadding === undefined ? 0 : _ref$innerPadding;\n  var xScale = getIndexedScale(data, getIndex, [0, width], padding);\n  var yRange = reverse ? [0, height] : [height, 0];\n  var yScale = getGroupedScale(data, keys, minValue, maxValue, yRange);\n  var barWidth = (xScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length;\n  var yRef = yScale(0);\n\n  var getY = function getY(d) {\n    return d > 0 ? yScale(d) : yRef;\n  };\n\n  var getHeight = function getHeight(d, y) {\n    return d > 0 ? yRef - y : yScale(d) - yRef;\n  };\n\n  if (reverse) {\n    getY = function getY(d) {\n      return d < 0 ? yScale(d) : yRef;\n    };\n\n    getHeight = function getHeight(d, y) {\n      return d < 0 ? yRef - y : yScale(d) - yRef;\n    };\n  }\n\n  var bars = [];\n\n  if (barWidth > 0) {\n    keys.forEach(function (key, i) {\n      range(xScale.domain().length).forEach(function (index) {\n        var x = xScale(getIndex(data[index])) + barWidth * i + innerPadding * i;\n        var y = getY(data[index][key]);\n        var barHeight = getHeight(data[index][key], y);\n\n        if (barWidth > 0 && barHeight > 0) {\n          var barData = {\n            id: key,\n            value: data[index][key],\n            index: index,\n            indexValue: getIndex(data[index]),\n            data: data[index]\n          };\n          bars.push({\n            key: key + '.' + barData.indexValue,\n            data: barData,\n            x: x,\n            y: y,\n            width: barWidth,\n            height: barHeight,\n            color: getColor(barData)\n          });\n        }\n      });\n    });\n  }\n\n  return {\n    xScale: xScale,\n    yScale: yScale,\n    bars: bars\n  };\n};\n/**\n * Generates x/y scales & bars for horizontal grouped bar chart.\n *\n * @param {Array.<Object>} data\n * @param {Function}       getIndex\n * @param {Array.<string>} keys\n * @param {number}         minValue\n * @param {number}         maxValue\n * @param {boolean}        reverse\n * @param {number}         width\n * @param {number}         height\n * @param {Function}       getColor\n * @param {number}         [padding=0]\n * @param {number}         [innerPadding=0]\n * @return {{ xScale: Function, yScale: Function, bars: Array.<Object> }}\n */\n\n\nvar generateHorizontalGroupedBars = function generateHorizontalGroupedBars(_ref2) {\n  var data = _ref2.data,\n      getIndex = _ref2.getIndex,\n      keys = _ref2.keys,\n      minValue = _ref2.minValue,\n      maxValue = _ref2.maxValue,\n      reverse = _ref2.reverse,\n      width = _ref2.width,\n      height = _ref2.height,\n      getColor = _ref2.getColor,\n      _ref2$padding = _ref2.padding,\n      padding = _ref2$padding === undefined ? 0 : _ref2$padding,\n      _ref2$innerPadding = _ref2.innerPadding,\n      innerPadding = _ref2$innerPadding === undefined ? 0 : _ref2$innerPadding;\n  var xRange = reverse ? [width, 0] : [0, width];\n  var xScale = getGroupedScale(data, keys, minValue, maxValue, xRange);\n  var yScale = getIndexedScale(data, getIndex, [height, 0], padding);\n  var barHeight = (yScale.bandwidth() - innerPadding * (keys.length - 1)) / keys.length;\n  var xRef = xScale(0);\n\n  var getX = function getX(d) {\n    return d > 0 ? xRef : xScale(d);\n  };\n\n  var getWidth = function getWidth(d, x) {\n    return d > 0 ? xScale(d) - xRef : xRef - x;\n  };\n\n  if (reverse) {\n    getX = function getX(d) {\n      return d < 0 ? xRef : xScale(d);\n    };\n\n    getWidth = function getWidth(d, x) {\n      return d < 0 ? xScale(d) - xRef : xRef - x;\n    };\n  }\n\n  var bars = [];\n\n  if (barHeight > 0) {\n    keys.forEach(function (key, i) {\n      range(yScale.domain().length).forEach(function (index) {\n        var x = getX(data[index][key]);\n        var y = yScale(getIndex(data[index])) + barHeight * i + innerPadding * i;\n        var barWidth = getWidth(data[index][key], x);\n\n        if (barWidth > 0) {\n          var barData = {\n            id: key,\n            value: data[index][key],\n            index: index,\n            indexValue: getIndex(data[index]),\n            data: data[index]\n          };\n          bars.push({\n            key: key + '.' + barData.indexValue,\n            data: barData,\n            x: x,\n            y: y,\n            width: barWidth,\n            height: barHeight,\n            color: getColor(barData)\n          });\n        }\n      });\n    });\n  }\n\n  return {\n    xScale: xScale,\n    yScale: yScale,\n    bars: bars\n  };\n};\n/**\n * Generates x/y scales & bars for grouped bar chart.\n *\n * @param {Object} options\n * @return {{ xScale: Function, yScale: Function, bars: Array.<Object> }}\n */\n\n\nvar generateGroupedBars = function generateGroupedBars(options) {\n  return options.layout === 'vertical' ? generateVerticalGroupedBars(options) : generateHorizontalGroupedBars(options);\n};\n/**\n * Generates scale for stacked bar chart.\n *\n * @param {Array.<Object>} data\n * @param {number|string}  _minValue\n * @param {number|string}  _maxValue\n * @param {Array.<number>} range\n * @returns {Function}\n */\n\n\nvar getStackedScale = function getStackedScale(data, _minValue, _maxValue, range$$1) {\n  var allValues = flattenDepth(data, 2);\n  var minValue = _minValue;\n\n  if (minValue === 'auto') {\n    minValue = min(allValues);\n  }\n\n  var maxValue = _maxValue;\n\n  if (maxValue === 'auto') {\n    maxValue = max(allValues);\n  }\n\n  return d3Scale.scaleLinear().rangeRound(range$$1).domain([minValue, maxValue]);\n};\n/**\n * Generates x/y scales & bars for vertical stacked bar chart.\n *\n * @param {Array.<Object>} data\n * @param {Function}       getIndex\n * @param {Array.<string>} keys\n * @param {number}         minValue\n * @param {number}         maxValue\n * @param {boolean}        reverse\n * @param {number}         width\n * @param {number}         height\n * @param {Function}       getColor\n * @param {number}         [padding=0]\n * @param {number}         [innerPadding=0]\n * @return {{ xScale: Function, yScale: Function, bars: Array.<Object> }}\n */\n\n\nvar generateVerticalStackedBars = function generateVerticalStackedBars(_ref) {\n  var data = _ref.data,\n      getIndex = _ref.getIndex,\n      keys = _ref.keys,\n      minValue = _ref.minValue,\n      maxValue = _ref.maxValue,\n      reverse = _ref.reverse,\n      width = _ref.width,\n      height = _ref.height,\n      getColor = _ref.getColor,\n      _ref$padding = _ref.padding,\n      padding = _ref$padding === undefined ? 0 : _ref$padding,\n      _ref$innerPadding = _ref.innerPadding,\n      innerPadding = _ref$innerPadding === undefined ? 0 : _ref$innerPadding;\n  var stackedData = d3Shape.stack().keys(keys).offset(d3Shape.stackOffsetDiverging)(data);\n  var xScale = getIndexedScale(data, getIndex, [0, width], padding);\n  var yRange = reverse ? [0, height] : [height, 0];\n  var yScale = getStackedScale(stackedData, minValue, maxValue, yRange);\n  var bars = [];\n  var barWidth = xScale.bandwidth();\n\n  var getY = function getY(d) {\n    return yScale(d[1]);\n  };\n\n  var getHeight = function getHeight(d, y) {\n    return yScale(d[0]) - y;\n  };\n\n  if (reverse) {\n    getY = function getY(d) {\n      return yScale(d[0]);\n    };\n\n    getHeight = function getHeight(d, y) {\n      return yScale(d[1]) - y;\n    };\n  }\n\n  if (barWidth > 0) {\n    stackedData.forEach(function (stackedDataItem) {\n      xScale.domain().forEach(function (index, i) {\n        var d = stackedDataItem[i];\n        var x = xScale(getIndex(d.data));\n        var y = getY(d);\n        var barHeight = getHeight(d, y);\n\n        if (innerPadding > 0) {\n          y += innerPadding * 0.5;\n          barHeight -= innerPadding;\n        }\n\n        if (barHeight > 0) {\n          var barData = {\n            id: stackedDataItem.key,\n            value: d.data[stackedDataItem.key],\n            index: i,\n            indexValue: index,\n            data: d.data\n          };\n          bars.push({\n            key: stackedDataItem.key + '.' + index,\n            data: barData,\n            x: x,\n            y: y,\n            width: barWidth,\n            height: barHeight,\n            color: getColor(barData)\n          });\n        }\n      });\n    });\n  }\n\n  return {\n    xScale: xScale,\n    yScale: yScale,\n    bars: bars\n  };\n};\n/**\n * Generates x/y scales & bars for horizontal stacked bar chart.\n *\n * @param {Array.<Object>} data\n * @param {Function}       getIndex\n * @param {Array.<string>} keys\n * @param {number}         minValue\n * @param {number}         maxValue\n * @param {boolean}        reverse\n * @param {number}         width\n * @param {number}         height\n * @param {Function}       getColor\n * @param {number}         [padding=0]\n * @param {number}         [innerPadding=0]\n * @return {{ xScale: Function, yScale: Function, bars: Array.<Object> }}\n */\n\n\nvar generateHorizontalStackedBars = function generateHorizontalStackedBars(_ref2) {\n  var data = _ref2.data,\n      getIndex = _ref2.getIndex,\n      keys = _ref2.keys,\n      minValue = _ref2.minValue,\n      maxValue = _ref2.maxValue,\n      reverse = _ref2.reverse,\n      width = _ref2.width,\n      height = _ref2.height,\n      getColor = _ref2.getColor,\n      _ref2$padding = _ref2.padding,\n      padding = _ref2$padding === undefined ? 0 : _ref2$padding,\n      _ref2$innerPadding = _ref2.innerPadding,\n      innerPadding = _ref2$innerPadding === undefined ? 0 : _ref2$innerPadding;\n  var stackedData = d3Shape.stack().keys(keys).offset(d3Shape.stackOffsetDiverging)(data);\n  var xRange = reverse ? [width, 0] : [0, width];\n  var xScale = getStackedScale(stackedData, minValue, maxValue, xRange);\n  var yScale = getIndexedScale(data, getIndex, [height, 0], padding);\n  var bars = [];\n  var barHeight = yScale.bandwidth();\n\n  var getX = function getX(d) {\n    return xScale(d[0]);\n  };\n\n  var getWidth = function getWidth(d, x) {\n    return xScale(d[1]) - x;\n  };\n\n  if (reverse) {\n    getX = function getX(d) {\n      return xScale(d[1]);\n    };\n\n    getWidth = function getWidth(d, y) {\n      return xScale(d[0]) - y;\n    };\n  }\n\n  if (barHeight > 0) {\n    stackedData.forEach(function (stackedDataItem) {\n      yScale.domain().forEach(function (index, i) {\n        var d = stackedDataItem[i];\n        var y = yScale(getIndex(d.data));\n        var barData = {\n          id: stackedDataItem.key,\n          value: d.data[stackedDataItem.key],\n          index: i,\n          indexValue: index,\n          data: d.data\n        };\n        var x = getX(d);\n        var barWidth = getWidth(d, x);\n\n        if (innerPadding > 0) {\n          x += innerPadding * 0.5;\n          barWidth -= innerPadding;\n        }\n\n        if (barWidth > 0) {\n          bars.push({\n            key: stackedDataItem.key + '.' + index,\n            data: barData,\n            x: x,\n            y: y,\n            width: barWidth,\n            height: barHeight,\n            color: getColor(barData)\n          });\n        }\n      });\n    });\n  }\n\n  return {\n    xScale: xScale,\n    yScale: yScale,\n    bars: bars\n  };\n};\n/**\n * Generates x/y scales & bars for stacked bar chart.\n *\n * @param {Object} options\n * @return {{ xScale: Function, yScale: Function, bars: Array.<Object> }}\n */\n\n\nvar generateStackedBars = function generateStackedBars(options) {\n  return options.layout === 'vertical' ? generateVerticalStackedBars(options) : generateHorizontalStackedBars(options);\n};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar BarItem = function BarItem(_ref) {\n  var data = _ref.data,\n      x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      borderRadius = _ref.borderRadius,\n      color = _ref.color,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      label = _ref.label,\n      shouldRenderLabel = _ref.shouldRenderLabel,\n      labelColor = _ref.labelColor,\n      showTooltip = _ref.showTooltip,\n      hideTooltip = _ref.hideTooltip,\n      onClick = _ref.onClick,\n      onMouseEnter = _ref.onMouseEnter,\n      onMouseLeave = _ref.onMouseLeave,\n      tooltip = _ref.tooltip,\n      theme = _ref.theme;\n\n  var handleTooltip = function handleTooltip(e) {\n    return showTooltip(tooltip, e);\n  };\n\n  var handleMouseEnter = function handleMouseEnter(e) {\n    onMouseEnter(data, e);\n    showTooltip(tooltip, e);\n  };\n\n  var handleMouseLeave = function handleMouseLeave(e) {\n    onMouseLeave(data, e);\n    hideTooltip(e);\n  };\n\n  return React__default.createElement('g', {\n    transform: 'translate(' + x + ', ' + y + ')'\n  }, React__default.createElement('rect', {\n    width: width,\n    height: height,\n    rx: borderRadius,\n    ry: borderRadius,\n    fill: data.fill ? data.fill : color,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    onMouseEnter: handleMouseEnter,\n    onMouseMove: handleTooltip,\n    onMouseLeave: handleMouseLeave,\n    onClick: onClick\n  }), shouldRenderLabel && React__default.createElement('text', {\n    x: width / 2,\n    y: height / 2,\n    textAnchor: 'middle',\n    alignmentBaseline: 'central',\n    style: _extends({}, theme.labels.text, {\n      pointerEvents: 'none',\n      fill: labelColor\n    })\n  }, label));\n};\n\nBarItem.propTypes = {\n  data: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired,\n    indexValue: PropTypes.string.isRequired\n  }).isRequired,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  borderRadius: PropTypes.number.isRequired,\n  borderWidth: PropTypes.number.isRequired,\n  borderColor: PropTypes.string.isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  shouldRenderLabel: PropTypes.bool.isRequired,\n  labelColor: PropTypes.string.isRequired,\n  showTooltip: PropTypes.func.isRequired,\n  hideTooltip: PropTypes.func.isRequired,\n  getTooltipLabel: PropTypes.func.isRequired,\n  tooltipFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  tooltip: PropTypes.element.isRequired,\n  theme: PropTypes.shape({\n    tooltip: PropTypes.shape({}).isRequired\n  }).isRequired\n};\nvar enhance = compose(withPropsOnChange(['data', 'color', 'onClick'], function (_ref2) {\n  var data = _ref2.data,\n      color = _ref2.color,\n      _onClick = _ref2.onClick;\n  return {\n    onClick: function onClick(event) {\n      return _onClick(_extends({\n        color: color\n      }, data), event);\n    }\n  };\n}), withPropsOnChange(['data', 'color', 'theme', 'tooltip', 'getTooltipLabel', 'tooltipFormat'], function (_ref3) {\n  var data = _ref3.data,\n      color = _ref3.color,\n      theme = _ref3.theme,\n      tooltip = _ref3.tooltip,\n      getTooltipLabel = _ref3.getTooltipLabel,\n      tooltipFormat = _ref3.tooltipFormat;\n  return {\n    tooltip: React__default.createElement(core.BasicTooltip, {\n      id: getTooltipLabel(data),\n      value: data.value,\n      enableChip: true,\n      color: color,\n      theme: theme,\n      format: tooltipFormat,\n      renderContent: typeof tooltip === 'function' ? tooltip.bind(null, _extends({\n        color: color,\n        theme: theme\n      }, data)) : null\n    })\n  };\n}), pure);\nvar BarItem$1 = enhance(BarItem);\n\nvar BarPropTypes = _extends({\n  data: PropTypes.arrayOf(PropTypes.object).isRequired,\n  indexBy: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  getIndex: PropTypes.func.isRequired,\n  // computed\n  keys: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])).isRequired,\n  layers: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(['grid', 'axes', 'bars', 'markers', 'legends']), PropTypes.func])).isRequired,\n  groupMode: PropTypes.oneOf(['stacked', 'grouped']).isRequired,\n  layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  reverse: PropTypes.bool.isRequired,\n  minValue: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]).isRequired,\n  maxValue: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf(['auto'])]).isRequired,\n  padding: PropTypes.number.isRequired,\n  innerPadding: PropTypes.number.isRequired,\n  axisTop: axes.axisPropType,\n  axisRight: axes.axisPropType,\n  axisBottom: axes.axisPropType,\n  axisLeft: axes.axisPropType,\n  enableGridX: PropTypes.bool.isRequired,\n  enableGridY: PropTypes.bool.isRequired,\n  gridXValues: PropTypes.arrayOf(PropTypes.number),\n  gridYValues: PropTypes.arrayOf(PropTypes.number),\n  barComponent: PropTypes.func.isRequired,\n  enableLabel: PropTypes.bool.isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  labelFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  getLabel: PropTypes.func.isRequired,\n  // computed\n  labelSkipWidth: PropTypes.number.isRequired,\n  labelSkipHeight: PropTypes.number.isRequired,\n  labelTextColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  getLabelTextColor: PropTypes.func.isRequired,\n  // computed\n  labelLinkColor: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  getLabelLinkColor: PropTypes.func.isRequired,\n  // computed\n  borderRadius: PropTypes.number.isRequired,\n  getColor: PropTypes.func.isRequired\n}, core.defsPropTypes, {\n  borderWidth: PropTypes.number.isRequired,\n  borderColor: PropTypes.any.isRequired,\n  getBorderColor: PropTypes.func.isRequired,\n  isInteractive: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  onMouseEnter: PropTypes.func.isRequired,\n  onMouseLeave: PropTypes.func.isRequired,\n  tooltipLabel: PropTypes.func,\n  getTooltipLabel: PropTypes.func.isRequired,\n  tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  tooltip: PropTypes.func,\n  legends: PropTypes.arrayOf(PropTypes.shape(_extends({\n    dataFrom: PropTypes.oneOf(['indexes', 'keys']).isRequired\n  }, legends.LegendPropShape))).isRequired,\n  // canvas specific\n  pixelRatio: PropTypes.number.isRequired\n});\n\nvar BarDefaultProps = {\n  indexBy: 'id',\n  keys: ['value'],\n  layers: ['grid', 'axes', 'bars', 'markers', 'legends'],\n  groupMode: 'stacked',\n  layout: 'vertical',\n  reverse: false,\n  minValue: 'auto',\n  maxValue: 'auto',\n  padding: 0.1,\n  innerPadding: 0,\n  axisBottom: {},\n  axisLeft: {},\n  enableGridX: false,\n  enableGridY: true,\n  barComponent: BarItem$1,\n  enableLabel: true,\n  label: 'value',\n  labelSkipWidth: 0,\n  labelSkipHeight: 0,\n  labelLinkColor: 'theme',\n  labelTextColor: 'theme',\n  defs: [],\n  fill: [],\n  borderRadius: 0,\n  borderWidth: 0,\n  borderColor: 'inherit',\n  isInteractive: true,\n  onClick: core.noop,\n  onMouseEnter: core.noop,\n  onMouseLeave: core.noop,\n  legends: [],\n  // canvas specific\n  pixelRatio: global.window && global.window.devicePixelRatio ? global.window.devicePixelRatio : 1\n};\n\nvar enhance$1 = function enhance$1(Component) {\n  return compose(defaultProps(BarDefaultProps), core.withTheme(), core.withColors(), core.withDimensions(), core.withMotion(), withPropsOnChange(['indexBy'], function (_ref) {\n    var indexBy = _ref.indexBy;\n    return {\n      getIndex: core.getAccessorFor(indexBy)\n    };\n  }), withPropsOnChange(['labelTextColor'], function (_ref2) {\n    var labelTextColor = _ref2.labelTextColor;\n    return {\n      getLabelTextColor: core.getInheritedColorGenerator(labelTextColor, 'axis.ticks.text.fill')\n    };\n  }), withPropsOnChange(['labelLinkColor'], function (_ref3) {\n    var labelLinkColor = _ref3.labelLinkColor;\n    return {\n      getLabelLinkColor: core.getInheritedColorGenerator(labelLinkColor, 'axis.ticks.line.stroke')\n    };\n  }), withPropsOnChange(['label', 'labelFormat'], function (_ref4) {\n    var label = _ref4.label,\n        labelFormat = _ref4.labelFormat;\n    return {\n      getLabel: core.getLabelGenerator(label, labelFormat)\n    };\n  }), withPropsOnChange(['borderColor'], function (_ref5) {\n    var borderColor = _ref5.borderColor;\n    return {\n      getBorderColor: core.getInheritedColorGenerator(borderColor)\n    };\n  }), withPropsOnChange(['tooltipLabel'], function (_ref6) {\n    var tooltipLabel = _ref6.tooltipLabel;\n\n    var getTooltipLabel = function getTooltipLabel(d) {\n      return d.id + ' - ' + d.indexValue;\n    };\n\n    if (typeof tooltipLabel === 'function') {\n      getTooltipLabel = tooltipLabel;\n    }\n\n    return {\n      getTooltipLabel: getTooltipLabel\n    };\n  }), pure)(Component);\n};\n\nvar barWillEnterHorizontal = function barWillEnterHorizontal(_ref) {\n  var style = _ref.style;\n  return {\n    x: style.x.val,\n    y: style.y.val,\n    width: 0,\n    height: style.height.val\n  };\n};\n\nvar barWillEnterVertical = function barWillEnterVertical(_ref2) {\n  var style = _ref2.style;\n  return {\n    x: style.x.val,\n    y: style.y.val + style.height.val,\n    width: style.width.val,\n    height: 0\n  };\n};\n\nvar barWillLeaveHorizontal = function barWillLeaveHorizontal(springConfig) {\n  return function (_ref3) {\n    var style = _ref3.style;\n    return {\n      x: style.x,\n      y: style.y,\n      width: reactMotion.spring(0, springConfig),\n      height: style.height\n    };\n  };\n};\n\nvar barWillLeaveVertical = function barWillLeaveVertical(springConfig) {\n  return function (_ref4) {\n    var style = _ref4.style;\n    return {\n      x: style.x,\n      y: reactMotion.spring(style.y.val + style.height.val, springConfig),\n      width: style.width,\n      height: reactMotion.spring(0, springConfig)\n    };\n  };\n};\n\nvar Bar = function Bar(props) {\n  var data = props.data,\n      getIndex = props.getIndex,\n      keys = props.keys,\n      groupMode = props.groupMode,\n      layout = props.layout,\n      reverse = props.reverse,\n      minValue = props.minValue,\n      maxValue = props.maxValue,\n      margin = props.margin,\n      width = props.width,\n      height = props.height,\n      outerWidth = props.outerWidth,\n      outerHeight = props.outerHeight,\n      padding = props.padding,\n      innerPadding = props.innerPadding,\n      axisTop = props.axisTop,\n      axisRight = props.axisRight,\n      axisBottom = props.axisBottom,\n      axisLeft = props.axisLeft,\n      enableGridX = props.enableGridX,\n      enableGridY = props.enableGridY,\n      gridXValues = props.gridXValues,\n      gridYValues = props.gridYValues,\n      layers = props.layers,\n      barComponent = props.barComponent,\n      enableLabel = props.enableLabel,\n      getLabel = props.getLabel,\n      labelSkipWidth = props.labelSkipWidth,\n      labelSkipHeight = props.labelSkipHeight,\n      getLabelTextColor = props.getLabelTextColor,\n      markers = props.markers,\n      theme = props.theme,\n      getColor = props.getColor,\n      defs = props.defs,\n      fill = props.fill,\n      borderRadius = props.borderRadius,\n      borderWidth = props.borderWidth,\n      getBorderColor = props.getBorderColor,\n      animate = props.animate,\n      motionStiffness = props.motionStiffness,\n      motionDamping = props.motionDamping,\n      isInteractive = props.isInteractive,\n      getTooltipLabel = props.getTooltipLabel,\n      tooltipFormat = props.tooltipFormat,\n      tooltip = props.tooltip,\n      onClick = props.onClick,\n      onMouseEnter = props.onMouseEnter,\n      onMouseLeave = props.onMouseLeave,\n      legends$$1 = props.legends;\n  var options = {\n    layout: layout,\n    reverse: reverse,\n    data: data,\n    getIndex: getIndex,\n    keys: keys,\n    minValue: minValue,\n    maxValue: maxValue,\n    width: width,\n    height: height,\n    getColor: getColor,\n    padding: padding,\n    innerPadding: innerPadding\n  };\n  var result = groupMode === 'grouped' ? generateGroupedBars(options) : generateStackedBars(options);\n  var motionProps = {\n    animate: animate,\n    motionDamping: motionDamping,\n    motionStiffness: motionStiffness\n  };\n  var springConfig = {\n    damping: motionDamping,\n    stiffness: motionStiffness\n  };\n  var willEnter = layout === 'vertical' ? barWillEnterVertical : barWillEnterHorizontal;\n  var willLeave = layout === 'vertical' ? barWillLeaveVertical(springConfig) : barWillLeaveHorizontal(springConfig);\n\n  var shouldRenderLabel = function shouldRenderLabel(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height;\n    if (!enableLabel) return false;\n    if (labelSkipWidth > 0 && width < labelSkipWidth) return false;\n    if (labelSkipHeight > 0 && height < labelSkipHeight) return false;\n    return true;\n  };\n\n  var boundDefs = core.bindDefs(defs, result.bars, fill, {\n    dataKey: 'data',\n    targetKey: 'data.fill'\n  });\n  var legendDataForKeys = result.bars.filter(function (bar) {\n    return bar.data.index === 0;\n  }).map(function (bar) {\n    return {\n      id: bar.data.id,\n      label: bar.data.id,\n      color: bar.color,\n      fill: bar.data.fill\n    };\n  }).reverse();\n  var legendDataForIndexes = result.bars.filter(function (bar) {\n    return bar.data.id === keys[0];\n  }).map(function (bar) {\n    return {\n      id: bar.data.indexValue,\n      label: bar.data.indexValue,\n      color: bar.color,\n      fill: bar.data.fill\n    };\n  });\n  return React__default.createElement(core.Container, {\n    isInteractive: isInteractive,\n    theme: theme\n  }, function (_ref6) {\n    var showTooltip = _ref6.showTooltip,\n        hideTooltip = _ref6.hideTooltip;\n    var commonProps = {\n      borderRadius: borderRadius,\n      borderWidth: borderWidth,\n      enableLabel: enableLabel,\n      labelSkipWidth: labelSkipWidth,\n      labelSkipHeight: labelSkipHeight,\n      showTooltip: showTooltip,\n      hideTooltip: hideTooltip,\n      onClick: onClick,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      theme: theme,\n      getTooltipLabel: getTooltipLabel,\n      tooltipFormat: tooltipFormat,\n      tooltip: tooltip\n    };\n    var bars = void 0;\n\n    if (animate === true) {\n      bars = React__default.createElement(reactMotion.TransitionMotion, {\n        key: 'bars',\n        willEnter: willEnter,\n        willLeave: willLeave,\n        styles: result.bars.map(function (bar) {\n          return {\n            key: bar.key,\n            data: bar,\n            style: {\n              x: reactMotion.spring(bar.x, springConfig),\n              y: reactMotion.spring(bar.y, springConfig),\n              width: reactMotion.spring(bar.width, springConfig),\n              height: reactMotion.spring(bar.height, springConfig)\n            }\n          };\n        })\n      }, function (interpolatedStyles) {\n        return React__default.createElement('g', null, interpolatedStyles.map(function (_ref7) {\n          var key = _ref7.key,\n              style = _ref7.style,\n              bar = _ref7.data;\n\n          var baseProps = _extends({}, bar, style);\n\n          return React__default.createElement(barComponent, _extends({\n            key: key\n          }, baseProps, commonProps, {\n            shouldRenderLabel: shouldRenderLabel(baseProps),\n            width: Math.max(style.width, 0),\n            height: Math.max(style.height, 0),\n            label: getLabel(bar.data),\n            labelColor: getLabelTextColor(baseProps, theme),\n            borderColor: getBorderColor(baseProps),\n            theme: theme\n          }));\n        }));\n      });\n    } else {\n      bars = result.bars.map(function (d) {\n        return React__default.createElement(barComponent, _extends({\n          key: d.key\n        }, d, commonProps, {\n          label: getLabel(d.data),\n          shouldRenderLabel: shouldRenderLabel(d),\n          labelColor: getLabelTextColor(d, theme),\n          borderColor: getBorderColor(d),\n          theme: theme\n        }));\n      });\n    }\n\n    var layerById = {\n      grid: React__default.createElement(core.Grid, _extends({\n        key: 'grid',\n        theme: theme,\n        width: width,\n        height: height,\n        xScale: enableGridX ? result.xScale : null,\n        yScale: enableGridY ? result.yScale : null,\n        xValues: gridXValues,\n        yValues: gridYValues\n      }, motionProps)),\n      axes: React__default.createElement(axes.Axes, _extends({\n        key: 'axes',\n        xScale: result.xScale,\n        yScale: result.yScale,\n        width: width,\n        height: height,\n        theme: theme,\n        top: axisTop,\n        right: axisRight,\n        bottom: axisBottom,\n        left: axisLeft\n      }, motionProps)),\n      bars: bars,\n      markers: React__default.createElement(core.CartesianMarkers, {\n        key: 'markers',\n        markers: markers,\n        width: width,\n        height: height,\n        xScale: result.xScale,\n        yScale: result.yScale,\n        theme: theme\n      }),\n      legends: legends$$1.map(function (legend, i) {\n        var legendData = void 0;\n\n        if (legend.dataFrom === 'keys') {\n          legendData = legendDataForKeys;\n        } else if (legend.dataFrom === 'indexes') {\n          legendData = legendDataForIndexes;\n        }\n\n        if (legendData === undefined) return null;\n        return React__default.createElement(legends.BoxLegendSvg, _extends({\n          key: i\n        }, legend, {\n          containerWidth: width,\n          containerHeight: height,\n          data: legendData,\n          theme: theme\n        }));\n      })\n    };\n    return React__default.createElement(core.SvgWrapper, {\n      width: outerWidth,\n      height: outerHeight,\n      margin: margin,\n      defs: boundDefs,\n      theme: theme\n    }, layers.map(function (layer, i) {\n      if (typeof layer === 'function') {\n        return React__default.createElement(React.Fragment, {\n          key: i\n        }, layer(_extends({}, props, result)));\n      }\n\n      return layerById[layer];\n    }));\n  });\n};\n\nBar.propTypes = BarPropTypes;\nvar Bar$1 = setDisplayName('Bar')(enhance$1(Bar));\n\nvar findNodeUnderCursor = function findNodeUnderCursor(nodes, margin, x, y) {\n  return nodes.find(function (node) {\n    return core.isCursorInRect(node.x + margin.left, node.y + margin.top, node.width, node.height, x, y);\n  });\n};\n\nvar BarCanvas = function (_Component) {\n  inherits(BarCanvas, _Component);\n\n  function BarCanvas() {\n    var _temp, _this, _ret;\n\n    classCallCheck(this, BarCanvas);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleMouseHover = function (showTooltip, hideTooltip) {\n      return function (event) {\n        if (!_this.bars) return;\n        var _this$props = _this.props,\n            margin = _this$props.margin,\n            theme = _this$props.theme,\n            tooltip = _this$props.tooltip,\n            getTooltipLabel = _this$props.getTooltipLabel,\n            tooltipFormat = _this$props.tooltipFormat;\n\n        var _getRelativeCursor = core.getRelativeCursor(_this.surface, event),\n            x = _getRelativeCursor[0],\n            y = _getRelativeCursor[1];\n\n        var bar = findNodeUnderCursor(_this.bars, margin, x, y);\n\n        if (bar !== undefined) {\n          showTooltip(React__default.createElement(core.BasicTooltip, {\n            id: getTooltipLabel(bar.data),\n            value: bar.data.value,\n            enableChip: true,\n            color: bar.color,\n            theme: theme,\n            format: tooltipFormat,\n            renderContent: typeof tooltip === 'function' ? tooltip.bind(null, _extends({\n              color: bar.color\n            }, bar.data)) : null\n          }), event);\n        } else {\n          hideTooltip();\n        }\n      };\n    }, _this.handleMouseLeave = function (hideTooltip) {\n      return function () {\n        hideTooltip();\n      };\n    }, _this.handleClick = function (event) {\n      if (!_this.bars) return;\n      var _this$props2 = _this.props,\n          margin = _this$props2.margin,\n          onClick = _this$props2.onClick;\n\n      var _getRelativeCursor2 = core.getRelativeCursor(_this.surface, event),\n          x = _getRelativeCursor2[0],\n          y = _getRelativeCursor2[1];\n\n      var node = findNodeUnderCursor(_this.bars, margin, x, y);\n      if (node !== undefined) onClick(node.data, event);\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  BarCanvas.prototype.componentDidMount = function componentDidMount() {\n    this.ctx = this.surface.getContext('2d');\n    this.draw(this.props);\n  };\n\n  BarCanvas.prototype.shouldComponentUpdate = function shouldComponentUpdate(props) {\n    if (this.props.outerWidth !== props.outerWidth || this.props.outerHeight !== props.outerHeight || this.props.isInteractive !== props.isInteractive || this.props.theme !== props.theme) {\n      return true;\n    } else {\n      this.draw(props);\n      return false;\n    }\n  };\n\n  BarCanvas.prototype.componentDidUpdate = function componentDidUpdate() {\n    this.ctx = this.surface.getContext('2d');\n    this.draw(this.props);\n  };\n\n  BarCanvas.prototype.draw = function draw(props) {\n    var _this2 = this;\n\n    var data = props.data,\n        keys = props.keys,\n        getIndex = props.getIndex,\n        minValue = props.minValue,\n        maxValue = props.maxValue,\n        width = props.width,\n        height = props.height,\n        outerWidth = props.outerWidth,\n        outerHeight = props.outerHeight,\n        pixelRatio = props.pixelRatio,\n        margin = props.margin,\n        layout = props.layout,\n        reverse = props.reverse,\n        groupMode = props.groupMode,\n        padding = props.padding,\n        innerPadding = props.innerPadding,\n        axisTop = props.axisTop,\n        axisRight = props.axisRight,\n        axisBottom = props.axisBottom,\n        axisLeft = props.axisLeft,\n        theme = props.theme,\n        getColor = props.getColor,\n        legends$$1 = props.legends,\n        enableGridX = props.enableGridX,\n        enableGridY = props.enableGridY;\n    this.surface.width = outerWidth * pixelRatio;\n    this.surface.height = outerHeight * pixelRatio;\n    this.ctx.scale(pixelRatio, pixelRatio);\n    var options = {\n      layout: layout,\n      reverse: reverse,\n      data: data,\n      getIndex: getIndex,\n      keys: keys,\n      minValue: minValue,\n      maxValue: maxValue,\n      width: width,\n      height: height,\n      getColor: getColor,\n      padding: padding,\n      innerPadding: innerPadding\n    };\n    var result = groupMode === 'grouped' ? generateGroupedBars(options) : generateStackedBars(options);\n    this.bars = result.bars;\n    this.ctx.fillStyle = theme.background;\n    this.ctx.fillRect(0, 0, outerWidth, outerHeight);\n    this.ctx.translate(margin.left, margin.top);\n    this.ctx.strokeStyle = '#dddddd';\n    enableGridX && core.renderGridLinesToCanvas(this.ctx, {\n      width: width,\n      height: height,\n      scale: result.xScale,\n      axis: 'x'\n    });\n    enableGridY && core.renderGridLinesToCanvas(this.ctx, {\n      width: width,\n      height: height,\n      scale: result.yScale,\n      axis: 'y'\n    });\n    this.ctx.strokeStyle = '#dddddd';\n    var legendDataForKeys = result.bars.filter(function (bar) {\n      return bar.data.index === 0;\n    }).map(function (bar) {\n      return {\n        id: bar.data.id,\n        label: bar.data.id,\n        color: bar.color,\n        fill: bar.data.fill\n      };\n    }).reverse();\n    var legendDataForIndexes = result.bars.filter(function (bar) {\n      return bar.data.id === keys[0];\n    }).map(function (bar) {\n      return {\n        id: bar.data.indexValue,\n        label: bar.data.indexValue,\n        color: bar.color,\n        fill: bar.data.fill\n      };\n    });\n    legends$$1.forEach(function (legend) {\n      var legendData = void 0;\n\n      if (legend.dataFrom === 'keys') {\n        legendData = legendDataForKeys;\n      } else if (legend.dataFrom === 'indexes') {\n        legendData = legendDataForIndexes;\n      }\n\n      if (legendData === undefined) return null;\n      legends.renderLegendToCanvas(_this2.ctx, _extends({}, legend, {\n        data: legendData,\n        containerWidth: width,\n        containerHeight: height,\n        itemTextColor: '#999',\n        symbolSize: 16\n      }));\n    });\n    core.renderAxesToCanvas(this.ctx, {\n      xScale: result.xScale,\n      yScale: result.yScale,\n      width: width,\n      height: height,\n      top: axisTop,\n      right: axisRight,\n      bottom: axisBottom,\n      left: axisLeft,\n      theme: theme\n    });\n    result.bars.forEach(function (_ref) {\n      var x = _ref.x,\n          y = _ref.y,\n          color = _ref.color,\n          width = _ref.width,\n          height = _ref.height;\n      _this2.ctx.fillStyle = color;\n\n      _this2.ctx.fillRect(x, y, width, height);\n    });\n  };\n\n  BarCanvas.prototype.render = function render() {\n    var _this3 = this;\n\n    var _props = this.props,\n        outerWidth = _props.outerWidth,\n        outerHeight = _props.outerHeight,\n        pixelRatio = _props.pixelRatio,\n        isInteractive = _props.isInteractive,\n        theme = _props.theme;\n    return React__default.createElement(core.Container, {\n      isInteractive: isInteractive,\n      theme: theme\n    }, function (_ref2) {\n      var showTooltip = _ref2.showTooltip,\n          hideTooltip = _ref2.hideTooltip;\n      return React__default.createElement('canvas', {\n        ref: function ref(surface) {\n          _this3.surface = surface;\n        },\n        width: outerWidth * pixelRatio,\n        height: outerHeight * pixelRatio,\n        style: {\n          width: outerWidth,\n          height: outerHeight\n        },\n        onMouseEnter: _this3.handleMouseHover(showTooltip, hideTooltip),\n        onMouseMove: _this3.handleMouseHover(showTooltip, hideTooltip),\n        onMouseLeave: _this3.handleMouseLeave(hideTooltip),\n        onClick: _this3.handleClick\n      });\n    });\n  };\n\n  return BarCanvas;\n}(React.Component);\n\nBarCanvas.propTypes = BarPropTypes;\nvar BarCanvas$1 = setDisplayName('BarCanvas')(enhance$1(BarCanvas));\n\nvar ResponsiveBar = function ResponsiveBar(props) {\n  return React__default.createElement(core.ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React__default.createElement(Bar$1, _extends({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nvar ResponsiveBarCanvas = function ResponsiveBarCanvas(props) {\n  return React__default.createElement(core.ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React__default.createElement(BarCanvas$1, _extends({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexports.Bar = Bar$1;\nexports.BarCanvas = BarCanvas$1;\nexports.ResponsiveBar = ResponsiveBar;\nexports.ResponsiveBarCanvas = ResponsiveBarCanvas;\nexports.BarPropTypes = BarPropTypes;\nexports.BarDefaultProps = BarDefaultProps;","var baseExtremum = require('./_baseExtremum'),\n    baseLt = require('./_baseLt'),\n    identity = require('./identity');\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\n\n\nfunction min(array) {\n  return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;\n}\n\nmodule.exports = min;","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nmodule.exports = baseLt;","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    identity = require('./identity');\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\n\n\nfunction max(array) {\n  return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;\n}\n\nmodule.exports = max;","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;","var createRange = require('./_createRange');\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\n\n\nvar range = createRange();\nmodule.exports = range;","var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\n\n\nfunction createRange(fromRight) {\n  return function (start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    } // Ensure the sign of `-0` is preserved.\n\n\n    start = toFinite(start);\n\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n\n    step = step === undefined ? start < end ? 1 : -1 : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\n\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n\n  return result;\n}\n\nmodule.exports = baseRange;","var baseFlatten = require('./_baseFlatten'),\n    toInteger = require('./toInteger');\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\n\n\nfunction flattenDepth(array, depth) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return [];\n  }\n\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nmodule.exports = flattenDepth;","module.exports = require('./cjs/nivo-core');","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nvar Measure = _interopDefault(require('react-measure'));\n\nvar pure = _interopDefault(require('recompose/pure'));\n\nvar reactMotion = require('react-motion');\n\nvar d3Interpolate = require('d3-interpolate');\n\nvar isFunction = _interopDefault(require('lodash/isFunction'));\n\nvar d3Format = require('d3-format');\n\nvar compose = _interopDefault(require('recompose/compose'));\n\nvar withPropsOnChange = _interopDefault(require('recompose/withPropsOnChange'));\n\nvar memoize = _interopDefault(require('lodash/memoize'));\n\nvar get = _interopDefault(require('lodash/get'));\n\nvar d3Color = require('d3-color');\n\nvar last = _interopDefault(require('lodash/last'));\n\nvar isArray = _interopDefault(require('lodash/isArray'));\n\nvar d3Scale = require('d3-scale');\n\nvar d3ScaleChromatic = require('d3-scale-chromatic');\n\nvar isString = _interopDefault(require('lodash/isString'));\n\nvar setPropTypes = _interopDefault(require('recompose/setPropTypes'));\n\nvar defaultProps = _interopDefault(require('recompose/defaultProps'));\n\nvar without = _interopDefault(require('lodash/without'));\n\nvar d3Shape = require('d3-shape');\n\nvar d3Hierarchy = require('d3-hierarchy');\n\nvar withProps = _interopDefault(require('recompose/withProps'));\n\nvar isEqual = _interopDefault(require('lodash/isEqual'));\n\nvar partialRight = _interopDefault(require('lodash/partialRight'));\n\nvar merge = _interopDefault(require('lodash/merge'));\n\nvar isNumber = _interopDefault(require('lodash/isNumber'));\n\nvar d3TimeFormat = require('d3-time-format');\n\nvar shouldUpdate = _interopDefault(require('recompose/shouldUpdate'));\n\nvar isPlainObject = _interopDefault(require('lodash/isPlainObject'));\n\nvar pick = _interopDefault(require('lodash/pick'));\n\nvar set = _interopDefault(require('lodash/set'));\n\nvar noop = function noop() {};\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar objectWithoutProperties = function objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar containerStyle = {\n  position: 'relative'\n};\nvar tooltipStyle = {\n  pointerEvents: 'none',\n  position: 'absolute',\n  zIndex: 10\n};\nvar noopHandlers = {\n  showTooltip: noop,\n  hideTooltip: noop\n};\n\nvar Container = function (_Component) {\n  inherits(Container, _Component);\n\n  function Container() {\n    var _temp, _this, _ret;\n\n    classCallCheck(this, Container);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      isTooltipVisible: false,\n      tooltipContent: null,\n      position: {}\n    }, _this.showTooltip = function (content, event) {\n      var clientX = event.clientX,\n          clientY = event.clientY;\n\n      var bounds = _this.container.getBoundingClientRect();\n\n      var x = clientX - bounds.left;\n      var y = clientY - bounds.top;\n      var position = {};\n      if (x < bounds.width / 2) position.left = x + 20;else position.right = bounds.width - x + 20;\n      if (y < bounds.height / 2) position.top = y - 12;else position.bottom = bounds.height - y - 12;\n\n      _this.setState({\n        isTooltipVisible: true,\n        tooltipContent: content,\n        position: position\n      });\n    }, _this.hideTooltip = function () {\n      _this.setState({\n        isTooltipVisible: false,\n        tooltipContent: null\n      });\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  Container.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        children = _props.children,\n        isInteractive = _props.isInteractive,\n        theme = _props.theme;\n    var _state = this.state,\n        isTooltipVisible = _state.isTooltipVisible,\n        tooltipContent = _state.tooltipContent,\n        position = _state.position;\n    if (!isInteractive) return children(noopHandlers);\n    return React__default.createElement('div', {\n      style: containerStyle,\n      ref: function ref(container) {\n        _this2.container = container;\n      }\n    }, children({\n      showTooltip: this.showTooltip,\n      hideTooltip: this.hideTooltip\n    }), isTooltipVisible && React__default.createElement('div', {\n      style: _extends({}, tooltipStyle, position, theme.tooltip)\n    }, tooltipContent));\n  };\n\n  return Container;\n}(React.Component);\n\nContainer.propTypes = {\n  children: PropTypes.func.isRequired,\n  isInteractive: PropTypes.bool.isRequired,\n  theme: PropTypes.object.isRequired\n};\nContainer.defaultProps = {\n  isInteractive: true\n};\n\nvar ResponsiveWrapper = function (_Component) {\n  inherits(ResponsiveWrapper, _Component);\n\n  function ResponsiveWrapper() {\n    var _temp, _this, _ret;\n\n    classCallCheck(this, ResponsiveWrapper);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.state = {\n      dimensions: {\n        width: -1,\n        height: -1\n      }\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  ResponsiveWrapper.prototype.render = function render() {\n    var _this2 = this;\n\n    var _state$dimensions = this.state.dimensions,\n        width = _state$dimensions.width,\n        height = _state$dimensions.height;\n    var shouldRender = width > 0 && height > 0;\n    return React__default.createElement(Measure, {\n      bounds: true,\n      onResize: function onResize(contentRect) {\n        _this2.setState({\n          dimensions: contentRect.bounds\n        });\n      }\n    }, function (_ref) {\n      var measureRef = _ref.measureRef;\n      return React__default.createElement('div', {\n        ref: measureRef,\n        style: {\n          width: '100%',\n          height: '100%'\n        }\n      }, shouldRender && _this2.props.children({\n        width: width,\n        height: height\n      }));\n    });\n  };\n\n  return ResponsiveWrapper;\n}(React.Component);\n\nResponsiveWrapper.propTypes = {\n  children: PropTypes.func.isRequired\n};\n\nvar LinearGradient = function LinearGradient(_ref) {\n  var id = _ref.id,\n      colors = _ref.colors;\n  return React__default.createElement('linearGradient', {\n    id: id,\n    x1: 0,\n    x2: 0,\n    y1: 0,\n    y2: 1\n  }, colors.map(function (_ref2) {\n    var offset = _ref2.offset,\n        color = _ref2.color,\n        opacity = _ref2.opacity;\n    return React__default.createElement('stop', {\n      key: offset,\n      offset: offset + '%',\n      stopColor: color,\n      stopOpacity: opacity !== undefined ? opacity : 1\n    });\n  }));\n};\n\nLinearGradient.propTypes = {\n  id: PropTypes.string.isRequired,\n  colors: PropTypes.arrayOf(PropTypes.shape({\n    offset: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired\n  })).isRequired\n};\n\nvar linearGradientDef = function linearGradientDef(id, colors) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return _extends({\n    id: id,\n    type: 'linearGradient',\n    colors: colors\n  }, options);\n};\n\nvar gradientTypes = {\n  linearGradient: LinearGradient\n};\nvar PatternDots = pure(function (_ref) {\n  var id = _ref.id,\n      background = _ref.background,\n      color = _ref.color,\n      size = _ref.size,\n      padding = _ref.padding,\n      stagger = _ref.stagger;\n  var fullSize = size + padding;\n  var radius = size / 2;\n  var halfPadding = padding / 2;\n\n  if (stagger === true) {\n    fullSize = size * 2 + padding * 2;\n  }\n\n  return React__default.createElement('pattern', {\n    id: id,\n    width: fullSize,\n    height: fullSize,\n    patternUnits: 'userSpaceOnUse'\n  }, React__default.createElement('rect', {\n    width: fullSize,\n    height: fullSize,\n    fill: background\n  }), React__default.createElement('circle', {\n    cx: halfPadding + radius,\n    cy: halfPadding + radius,\n    r: radius,\n    fill: color\n  }), stagger && React__default.createElement('circle', {\n    cx: padding * 1.5 + size + radius,\n    cy: padding * 1.5 + size + radius,\n    r: radius,\n    fill: color\n  }));\n});\nPatternDots.propTypes = {\n  id: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  background: PropTypes.string.isRequired,\n  size: PropTypes.number.isRequired,\n  padding: PropTypes.number.isRequired,\n  stagger: PropTypes.bool.isRequired\n};\nPatternDots.defaultProps = {\n  color: '#000000',\n  background: '#ffffff',\n  size: 4,\n  padding: 4,\n  stagger: false\n};\n\nvar patternDotsDef = function patternDotsDef(id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return _extends({\n    id: id,\n    type: 'patternDots'\n  }, options);\n};\n\nvar TWO_PI = Math.PI * 2;\n\nvar degreesToRadians = function degreesToRadians(degrees) {\n  return degrees * Math.PI / 180;\n};\n\nvar radiansToDegrees = function radiansToDegrees(radians) {\n  return 180 * radians / Math.PI;\n};\n\nvar midAngle = function midAngle(arc) {\n  return arc.startAngle + (arc.endAngle - arc.startAngle) / 2;\n};\n\nvar positionFromAngle = function positionFromAngle(angle, distance) {\n  return {\n    x: Math.cos(angle) * distance,\n    y: Math.sin(angle) * distance\n  };\n};\n/**\n * Normalize given angle (degrees) in the 0~360 range.\n *\n * @param {number} angle\n *\n * @return {number}\n */\n\n\nvar absoluteAngleDegrees = function absoluteAngleDegrees(angle) {\n  var absAngle = angle % 360;\n\n  if (absAngle < 0) {\n    absAngle += 360;\n  }\n\n  return absAngle;\n};\n\nvar absoluteAngleRadians = function absoluteAngleRadians(angle) {\n  return angle - TWO_PI * Math.floor((angle + Math.PI) / TWO_PI);\n};\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n *\n * @param {number}  ox                   - circle x origin\n * @param {number}  oy                   - circle y origin\n * @param {number}  radius               - circle radius\n * @param {number}  startAngle           - arc start angle\n * @param {number}  endAngle             - arc end angle\n * @param {boolean} [includeCenter=true] - if true, include the center\n *\n * @return {{ points: *[][], x: number, y: number, width: number, height: number }}\n */\n\n\nvar computeArcBoundingBox = function computeArcBoundingBox(ox, oy, radius, startAngle, endAngle) {\n  var includeCenter = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n  var points = [];\n  var p0 = positionFromAngle(degreesToRadians(startAngle), radius);\n  points.push([p0.x, p0.y]);\n  var p1 = positionFromAngle(degreesToRadians(endAngle), radius);\n  points.push([p1.x, p1.y]);\n\n  for (var angle = Math.round(Math.min(startAngle, endAngle)); angle <= Math.round(Math.max(startAngle, endAngle)); angle++) {\n    if (angle % 90 === 0) {\n      var p = positionFromAngle(degreesToRadians(angle), radius);\n      points.push([p.x, p.y]);\n    }\n  }\n\n  points = points.map(function (_ref) {\n    var x = _ref[0],\n        y = _ref[1];\n    return [ox + x, oy + y];\n  });\n  if (includeCenter === true) points.push([ox, oy]);\n  var xs = points.map(function (_ref2) {\n    var x = _ref2[0];\n    return x;\n  });\n  var ys = points.map(function (_ref3) {\n    var y = _ref3[1];\n    return y;\n  });\n  var x0 = Math.min.apply(Math, xs);\n  var x1 = Math.max.apply(Math, xs);\n  var y0 = Math.min.apply(Math, ys);\n  var y1 = Math.max.apply(Math, ys);\n  return {\n    points: points,\n    x: x0,\n    y: y0,\n    width: x1 - x0,\n    height: y1 - y0\n  };\n};\n\nvar textPropsByEngine = {\n  svg: {\n    align: {\n      left: 'start',\n      center: 'middle',\n      right: 'end'\n    },\n    baseline: {\n      top: 'before-edge',\n      center: 'central',\n      bottom: 'after-edge'\n    }\n  },\n  canvas: {\n    align: {\n      left: 'left',\n      center: 'center',\n      right: 'right'\n    },\n    baseline: {\n      top: 'top',\n      center: 'middle',\n      bottom: 'bottom'\n    }\n  }\n};\n/**\n * @param {number} radius\n * @param {number} angle          angle (radians)\n * @param {number} [rotation=0]   label rotation (degrees)\n * @param {string} [engine='svg'] one of: 'svg', 'canvas'\n * @return {{ x: number, y: number, rotate: number, align: string, baseline: string }}\n */\n\nvar getPolarLabelProps = function getPolarLabelProps(radius, angle, rotation) {\n  var engine = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'svg';\n  var textProps = textPropsByEngine[engine];\n\n  var _positionFromAngle = positionFromAngle(angle - Math.PI / 2, radius),\n      x = _positionFromAngle.x,\n      y = _positionFromAngle.y;\n\n  var rotate = radiansToDegrees(angle);\n  var align = textProps.align.center;\n  var baseline = textProps.baseline.bottom;\n\n  if (rotation > 0) {\n    align = textProps.align.right;\n    baseline = textProps.baseline.center;\n  } else if (rotation < 0) {\n    align = textProps.align.left;\n    baseline = textProps.baseline.center;\n  } // reverse labels after 180°\n\n\n  if (rotation !== 0 && rotate > 180) {\n    rotate -= 180;\n    align = align === textProps.align.right ? textProps.align.left : textProps.align.right;\n  }\n\n  rotate += rotation;\n  return {\n    x: x,\n    y: y,\n    rotate: rotate,\n    align: align,\n    baseline: baseline\n  };\n};\n\nvar PatternLines = pure(function (_ref) {\n  var id = _ref.id,\n      _spacing = _ref.spacing,\n      _rotation = _ref.rotation,\n      background = _ref.background,\n      color = _ref.color,\n      lineWidth = _ref.lineWidth;\n  var rotation = Math.round(_rotation) % 360;\n  var spacing = Math.abs(_spacing);\n  if (rotation > 180) rotation = rotation - 360;else if (rotation > 90) rotation = rotation - 180;else if (rotation < -180) rotation = rotation + 360;else if (rotation < -90) rotation = rotation + 180;\n  var width = spacing;\n  var height = spacing;\n  var path = void 0;\n\n  if (rotation === 0) {\n    path = '\\n                M 0 0 L ' + width + ' 0\\n                M 0 ' + height + ' L ' + width + ' ' + height + '\\n            ';\n  } else if (rotation === 90) {\n    path = '\\n                M 0 0 L 0 ' + height + '\\n                M ' + width + ' 0 L ' + width + ' ' + height + '\\n            ';\n  } else {\n    width = Math.abs(spacing / Math.sin(degreesToRadians(rotation)));\n    height = spacing / Math.sin(degreesToRadians(90 - rotation));\n\n    if (rotation > 0) {\n      path = '\\n                    M 0 ' + -height + ' L ' + width * 2 + ' ' + height + '\\n                    M ' + -width + ' ' + -height + ' L ' + width + ' ' + height + '\\n                    M ' + -width + ' 0 L ' + width + ' ' + height * 2 + '\\n                ';\n    } else {\n      path = '\\n                    M ' + -width + ' ' + height + ' L ' + width + ' ' + -height + '\\n                    M ' + -width + ' ' + height * 2 + ' L ' + width * 2 + ' ' + -height + '\\n                    M 0 ' + height * 2 + ' L ' + width * 2 + ' 0\\n                ';\n    }\n  }\n\n  return React__default.createElement('pattern', {\n    id: id,\n    width: width,\n    height: height,\n    patternUnits: 'userSpaceOnUse'\n  }, React__default.createElement('rect', {\n    width: width,\n    height: height,\n    fill: background,\n    stroke: 'rgba(255, 0, 0, 0.1)',\n    strokeWidth: 0\n  }), React__default.createElement('path', {\n    d: path,\n    strokeWidth: lineWidth,\n    stroke: color,\n    strokeLinecap: 'square'\n  }));\n});\nPatternLines.propTypes = {\n  id: PropTypes.string.isRequired,\n  spacing: PropTypes.number.isRequired,\n  rotation: PropTypes.number.isRequired,\n  background: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  lineWidth: PropTypes.number.isRequired\n};\nPatternLines.defaultProps = {\n  spacing: 5,\n  rotation: 0,\n  color: '#000000',\n  background: '#ffffff',\n  lineWidth: 2\n};\n\nvar patternLinesDef = function patternLinesDef(id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return _extends({\n    id: id,\n    type: 'patternLines'\n  }, options);\n};\n\nvar PatternSquares = pure(function (_ref) {\n  var id = _ref.id,\n      background = _ref.background,\n      color = _ref.color,\n      size = _ref.size,\n      padding = _ref.padding,\n      stagger = _ref.stagger;\n  var fullSize = size + padding;\n  var halfPadding = padding / 2;\n\n  if (stagger === true) {\n    fullSize = size * 2 + padding * 2;\n  }\n\n  return React__default.createElement('pattern', {\n    id: id,\n    width: fullSize,\n    height: fullSize,\n    patternUnits: 'userSpaceOnUse'\n  }, React__default.createElement('rect', {\n    width: fullSize,\n    height: fullSize,\n    fill: background\n  }), React__default.createElement('rect', {\n    x: halfPadding,\n    y: halfPadding,\n    width: size,\n    height: size,\n    fill: color\n  }), stagger && React__default.createElement('rect', {\n    x: padding * 1.5 + size,\n    y: padding * 1.5 + size,\n    width: size,\n    height: size,\n    fill: color\n  }));\n});\nPatternSquares.propTypes = {\n  id: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  background: PropTypes.string.isRequired,\n  size: PropTypes.number.isRequired,\n  padding: PropTypes.number.isRequired,\n  stagger: PropTypes.bool.isRequired\n};\nPatternSquares.defaultProps = {\n  color: '#000000',\n  background: '#ffffff',\n  size: 4,\n  padding: 4,\n  stagger: false\n};\n\nvar patternSquaresDef = function patternSquaresDef(id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return _extends({\n    id: id,\n    type: 'patternSquares'\n  }, options);\n};\n\nvar patternTypes = {\n  patternDots: PatternDots,\n  patternLines: PatternLines,\n  patternSquares: PatternSquares\n};\n\nvar defsMapping = _extends({}, gradientTypes, patternTypes);\n\nvar Defs = pure(function (_ref) {\n  var definitions = _ref.defs;\n  if (!definitions || definitions.length < 1) return null;\n  return React__default.createElement('defs', null, definitions.map(function (_ref2) {\n    var type = _ref2.type,\n        def = objectWithoutProperties(_ref2, ['type']);\n    if (defsMapping[type]) return React__default.createElement(defsMapping[type], _extends({\n      key: def.id\n    }, def));\n    return null;\n  }));\n});\nDefs.propTypes = {\n  defs: PropTypes.arrayOf(PropTypes.shape({\n    type: PropTypes.oneOf(Object.keys(defsMapping)).isRequired,\n    id: PropTypes.string.isRequired\n  }))\n};\nvar axisThemePropType = PropTypes.shape({\n  domain: PropTypes.shape({\n    line: PropTypes.shape({\n      stroke: PropTypes.string.isRequired,\n      strokeWidth: PropTypes.number.isRequired,\n      strokeDasharray: PropTypes.string\n    }).isRequired\n  }).isRequired,\n  ticks: PropTypes.shape({\n    line: PropTypes.shape({\n      stroke: PropTypes.string.isRequired,\n      strokeWidth: PropTypes.number.isRequired,\n      strokeDasharray: PropTypes.string\n    }).isRequired,\n    text: PropTypes.shape({\n      fill: PropTypes.string.isRequired,\n      fontSize: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired,\n  legend: PropTypes.shape({\n    text: PropTypes.shape({\n      fill: PropTypes.string.isRequired,\n      fontSize: PropTypes.number.isRequired\n    }).isRequired\n  }).isRequired\n});\nvar gridThemePropType = PropTypes.shape({\n  line: PropTypes.shape({\n    stroke: PropTypes.string.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n    strokeDasharray: PropTypes.string\n  }).isRequired\n});\nvar legendsThemePropType = PropTypes.shape({\n  text: PropTypes.shape({\n    fill: PropTypes.string.isRequired,\n    fontSize: PropTypes.number.isRequired\n  }).isRequired\n});\nvar labelsThemePropType = PropTypes.shape({\n  text: PropTypes.shape({\n    fill: PropTypes.string.isRequired,\n    fontSize: PropTypes.number.isRequired\n  }).isRequired\n});\nvar dotsThemePropType = PropTypes.shape({\n  text: PropTypes.shape({\n    fill: PropTypes.string.isRequired,\n    fontSize: PropTypes.number.isRequired\n  }).isRequired\n});\nvar themePropType = PropTypes.shape({\n  background: PropTypes.string.isRequired,\n  axis: axisThemePropType.isRequired,\n  grid: gridThemePropType.isRequired,\n  legends: legendsThemePropType.isRequired,\n  labels: labelsThemePropType.isRequired,\n  dots: dotsThemePropType.isRequired\n});\nvar defaultTextColor = '#333333';\nvar defaultFontSize = 11;\nvar defaultTheme = {\n  background: 'transparent',\n  axis: {\n    domain: {\n      line: {\n        stroke: 'transparent',\n        strokeWidth: 1\n      }\n    },\n    ticks: {\n      line: {\n        stroke: '#777',\n        strokeWidth: 1\n      },\n      text: {\n        fill: defaultTextColor,\n        fontSize: defaultFontSize\n      }\n    },\n    legend: {\n      text: {\n        fill: defaultTextColor,\n        fontSize: defaultFontSize\n      }\n    }\n  },\n  grid: {\n    line: {\n      stroke: '#ddd',\n      strokeWidth: 1\n    }\n  },\n  legends: {\n    text: {\n      fill: defaultTextColor,\n      fontSize: defaultFontSize\n    }\n  },\n  labels: {\n    text: {\n      fill: defaultTextColor,\n      fontSize: defaultFontSize\n    }\n  },\n  markers: {\n    lineColor: '#000',\n    lineStrokeWidth: 1,\n    textColor: defaultTextColor,\n    fontSize: defaultFontSize\n  },\n  dots: {\n    text: {\n      fill: defaultTextColor,\n      fontSize: defaultFontSize\n    }\n  },\n  tooltip: {\n    container: {\n      background: 'white',\n      color: 'inherit',\n      fontSize: 'inherit',\n      borderRadius: '2px',\n      boxShadow: '0 1px 2px rgba(0, 0, 0, 0.25)',\n      padding: '5px 9px'\n    },\n    basic: {\n      whiteSpace: 'pre',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    table: {},\n    tableCell: {\n      padding: '3px 5px'\n    }\n  }\n};\n\nvar SvgWrapper = function SvgWrapper(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      margin = _ref.margin,\n      defs = _ref.defs,\n      children = _ref.children,\n      theme = _ref.theme;\n  return React__default.createElement('svg', {\n    xmlns: 'http://www.w3.org/2000/svg',\n    role: 'img',\n    width: width,\n    height: height\n  }, React__default.createElement(Defs, {\n    defs: defs\n  }), React__default.createElement('rect', {\n    width: width,\n    height: height,\n    fill: theme.background\n  }), React__default.createElement('g', {\n    transform: 'translate(' + margin.left + ',' + margin.top + ')'\n  }, children));\n};\n\nSvgWrapper.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  margin: PropTypes.shape({\n    top: PropTypes.number.isRequired,\n    left: PropTypes.number.isRequired\n  }).isRequired,\n  defs: PropTypes.array,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  theme: themePropType.isRequired\n}; // credit to Tanner Linsey from this issue on react motion repository:\n\nvar enhancedSpring = function enhancedSpring(value, config) {\n  if (typeof value !== 'number') {\n    return {\n      value: value,\n      config: config,\n      interpolator: config && config.interpolator ? config.interpolator : d3Interpolate.interpolate\n    };\n  }\n\n  return reactMotion.spring(value, config);\n};\n\nvar SmartMotion = function (_PureComponent) {\n  inherits(SmartMotion, _PureComponent);\n\n  function SmartMotion() {\n    var _temp, _this, _ret;\n\n    classCallCheck(this, SmartMotion);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.oldValues = {}, _this.newInters = {}, _this.currentStepValues = {}, _this.stepValues = {}, _this.stepInterpolators = {}, _temp), possibleConstructorReturn(_this, _ret);\n  }\n\n  SmartMotion.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props = this.props,\n        style = _props.style,\n        children = _props.children,\n        rest = objectWithoutProperties(_props, ['style', 'children']);\n    var resolvedStyle = style(enhancedSpring);\n\n    for (var key in resolvedStyle) {\n      if ( // If key is a non-numeric interpolation\n      resolvedStyle[key] && resolvedStyle[key].interpolator) {\n        // Make sure the steps start at 0\n        this.currentStepValues[key] = this.currentStepValues[key] || 0;\n\n        if ( // And the value has changed\n        typeof this.newInters[key] === 'undefined' || resolvedStyle[key].value !== this.newInters[key].value) {\n          // Save the new value\n          this.newInters[key] = resolvedStyle[key]; // Increment the stepInterValue for this key by 1\n\n          this.stepValues[key] = this.currentStepValues[key] + 1; // Set up the new interpolator\n\n          this.stepInterpolators[key] = this.newInters[key].interpolator(this.oldValues[key], this.newInters[key].value);\n        } // Return the spring with the destination stepValue and spring config\n\n\n        resolvedStyle[key] = reactMotion.spring(this.stepValues[key], this.newInters[key].config); // console.log(resolvedStyle[key])\n      }\n    }\n\n    return React__default.createElement(reactMotion.Motion, _extends({}, rest, {\n      style: resolvedStyle\n    }), function (values) {\n      var newValues = {};\n\n      for (var _key2 in values) {\n        if (_this2.stepValues[_key2]) {\n          // Save the currentStepValue\n          _this2.currentStepValues[_key2] = values[_key2]; // Figure the percentage\n\n          var percentage = _this2.currentStepValues[_key2] - _this2.stepValues[_key2] + 1; // Save the current value and replace the value in the interpolated object\n\n          _this2.oldValues[_key2] = newValues[_key2] = _this2.stepInterpolators[_key2](percentage);\n        }\n      }\n\n      return children(_extends({}, values, newValues));\n    });\n  };\n\n  return SmartMotion;\n}(React.PureComponent);\n\nSmartMotion.propTypes = {\n  children: PropTypes.func.isRequired,\n  style: PropTypes.func.isRequired\n};\n\nvar DotsItemSymbol = function DotsItemSymbol(_ref) {\n  var size = _ref.size,\n      color = _ref.color,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor;\n  return React__default.createElement('circle', {\n    r: size / 2,\n    fill: color,\n    stroke: borderColor,\n    strokeWidth: borderWidth,\n    style: {\n      pointerEvents: 'none'\n    }\n  });\n};\n\nDotsItemSymbol.propTypes = {\n  size: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  borderWidth: PropTypes.number.isRequired,\n  borderColor: PropTypes.string.isRequired\n};\nvar DotsItemSymbol$1 = pure(DotsItemSymbol);\n\nvar DotsItem = function DotsItem(_ref) {\n  var x = _ref.x,\n      y = _ref.y,\n      symbol = _ref.symbol,\n      size = _ref.size,\n      color = _ref.color,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      label = _ref.label,\n      labelTextAnchor = _ref.labelTextAnchor,\n      labelYOffset = _ref.labelYOffset,\n      theme = _ref.theme;\n  return React__default.createElement('g', {\n    transform: 'translate(' + x + ', ' + y + ')',\n    style: {\n      pointerEvents: 'none'\n    }\n  }, React__default.createElement(symbol, {\n    size: size,\n    color: color,\n    borderWidth: borderWidth,\n    borderColor: borderColor\n  }), label && React__default.createElement('text', {\n    textAnchor: labelTextAnchor,\n    y: labelYOffset,\n    style: theme.dots.text\n  }, label));\n};\n\nDotsItem.propTypes = {\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  size: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  borderWidth: PropTypes.number.isRequired,\n  borderColor: PropTypes.string.isRequired,\n  symbol: PropTypes.func.isRequired,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  labelTextAnchor: PropTypes.oneOf(['start', 'middle', 'end']),\n  labelYOffset: PropTypes.number.isRequired,\n  theme: PropTypes.shape({\n    dots: dotsThemePropType.isRequired\n  }).isRequired\n};\nvar DotsItemDefaultProps = {\n  symbol: DotsItemSymbol$1,\n  // label\n  labelTextAnchor: 'middle',\n  labelYOffset: -12\n};\nDotsItem.defaultProps = DotsItemDefaultProps;\nvar DotsItem$1 = pure(DotsItem);\n\nvar Chip = function Chip(_ref) {\n  var size = _ref.size,\n      color = _ref.color,\n      style = _ref.style;\n  return React__default.createElement('span', {\n    style: _extends({\n      display: 'block',\n      width: size,\n      height: size,\n      background: color\n    }, style)\n  });\n};\n\nChip.propTypes = {\n  size: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  style: PropTypes.object.isRequired\n};\nChip.defaultProps = {\n  size: 12,\n  style: {}\n};\nvar Chip$1 = pure(Chip);\nvar chipStyle = {\n  marginRight: 7\n};\n\nvar BasicTooltip = function BasicTooltip(props) {\n  var id = props.id,\n      _value = props.value,\n      format = props.format,\n      enableChip = props.enableChip,\n      color = props.color,\n      theme = props.theme,\n      renderContent = props.renderContent;\n  var content = void 0;\n\n  if (typeof renderContent === 'function') {\n    content = renderContent();\n  } else {\n    var value = _value;\n\n    if (format !== undefined && value !== undefined) {\n      value = format(value);\n    }\n\n    content = React__default.createElement('div', {\n      style: theme.tooltip.basic\n    }, enableChip && React__default.createElement(Chip$1, {\n      color: color,\n      style: chipStyle\n    }), value !== undefined ? React__default.createElement('span', null, id, ': ', React__default.createElement('strong', null, isNaN(value) ? String(value) : value)) : id);\n  }\n\n  return React__default.createElement('div', {\n    style: theme.tooltip.container\n  }, content);\n};\n\nBasicTooltip.propTypes = {\n  id: PropTypes.node.isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  enableChip: PropTypes.bool.isRequired,\n  color: PropTypes.string,\n  format: PropTypes.func,\n  renderContent: PropTypes.func,\n  theme: PropTypes.shape({\n    tooltip: PropTypes.shape({\n      container: PropTypes.object.isRequired,\n      basic: PropTypes.object.isRequired\n    }).isRequired\n  }).isRequired\n};\nBasicTooltip.defaultProps = {\n  enableChip: false\n};\nvar enhance = compose(withPropsOnChange(['format'], function (_ref) {\n  var format = _ref.format;\n  if (!format || isFunction(format)) return {\n    format: format\n  };\n  return {\n    format: d3Format.format(format)\n  };\n}), pure);\nvar BasicTooltip$1 = enhance(BasicTooltip);\nvar tableStyle = {\n  width: '100%',\n  borderCollapse: 'collapse'\n};\n\nvar TableTooltip = function TableTooltip(_ref) {\n  var title = _ref.title,\n      rows = _ref.rows,\n      theme = _ref.theme,\n      renderContent = _ref.renderContent;\n  if (!rows.length) return null;\n  var content = void 0;\n\n  if (typeof renderContent === 'function') {\n    content = renderContent();\n  } else {\n    content = React__default.createElement('div', null, title && title, React__default.createElement('table', {\n      style: _extends({}, tableStyle, theme.tooltip.table)\n    }, React__default.createElement('tbody', null, rows.map(function (row, i) {\n      return React__default.createElement('tr', {\n        key: i\n      }, row.map(function (column, j) {\n        return React__default.createElement('td', {\n          key: j,\n          style: theme.tooltip.tableCell\n        }, column);\n      }));\n    }))));\n  }\n\n  return React__default.createElement('div', {\n    style: theme.tooltip.container\n  }, content);\n};\n\nTableTooltip.propTypes = {\n  title: PropTypes.node,\n  rows: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.node)).isRequired,\n  theme: PropTypes.shape({\n    tooltip: PropTypes.shape({\n      container: PropTypes.object.isRequired,\n      table: PropTypes.object.isRequired,\n      tableCell: PropTypes.object.isRequired\n    }).isRequired\n  }).isRequired,\n  renderContent: PropTypes.func\n};\nTableTooltip.defaultProps = {};\nvar TableTooltip$1 = pure(TableTooltip);\n/**\n * Memoize both color generator & color generator result.\n */\n\nvar memoizedColorModifier = memoize(function (method, _amount) {\n  var amount = parseFloat(_amount);\n  return memoize(function (d) {\n    return d3Color.rgb(d.color)[method](amount) // eslint-disable-line no-unexpected-multiline\n    .toString();\n  }, function (d) {\n    return d.color;\n  });\n}, function (method, amount) {\n  return method + '.' + amount;\n});\n\nvar noneGenerator = function noneGenerator() {\n  return 'none';\n};\n\nvar inheritGenerator = function inheritGenerator(d) {\n  return d.color;\n};\n/**\n * @param {string|Function} instruction\n * @param {string}          [themeKey]\n * @return {Function}\n */\n\n\nvar getInheritedColorGenerator = function getInheritedColorGenerator(instruction, themeKey) {\n  if (instruction === 'none') return noneGenerator;\n  if (isFunction(instruction)) return instruction;\n\n  if (instruction === 'theme') {\n    if (!themeKey) {\n      throw new Error('Cannot use \\'theme\\' directive without providing \\'themeKey\\'');\n    }\n\n    return function (d, theme) {\n      return get(theme, themeKey);\n    };\n  }\n\n  if (instruction === 'inherit') return inheritGenerator;\n  var inheritMatches = instruction.match(/inherit:(darker|brighter)\\(([0-9.]+)\\)/);\n\n  if (inheritMatches) {\n    var method = inheritMatches[1];\n    var amount = inheritMatches[2];\n    return memoizedColorModifier(method, amount);\n  }\n\n  return function () {\n    return instruction;\n  };\n};\n/**\n * Decompose a color for use with react-motion.\n *\n * @param {string} _color\n * @param {Object} [_config]\n * @return {Object}\n */\n\n\nvar colorMotionSpring = function colorMotionSpring(_color, _config) {\n  var color = d3Color.rgb(_color);\n  if (!_config) return {\n    colorR: color.r,\n    colorG: color.g,\n    colorB: color.b\n  };\n  var config = Object.assign({}, _config, {\n    precision: 1\n  });\n  return {\n    colorR: reactMotion.spring(color.r, config),\n    colorG: reactMotion.spring(color.g, config),\n    colorB: reactMotion.spring(color.b, config)\n  };\n};\n/**\n * Re-assemble interpolated color components for easy use.\n *\n * @param {number} colorR\n * @param {number} colorG\n * @param {number} colorB\n * @return {string}\n */\n\n\nvar getInterpolatedColor = function getInterpolatedColor(_ref) {\n  var colorR = _ref.colorR,\n      colorG = _ref.colorG,\n      colorB = _ref.colorB;\n  return 'rgb(' + Math.round(Math.max(colorR, 0)) + ',' + Math.round(Math.max(colorG, 0)) + ',' + Math.round(Math.max(colorB, 0)) + ')';\n};\n\nvar quantizeColorScales = {\n  nivo: ['#d76445', '#f47560', '#e8c1a0', '#97e3d5', '#61cdbb', '#00b0a7'],\n  // Diverging\n  BrBG: last(d3ScaleChromatic.schemeBrBG),\n  PRGn: last(d3ScaleChromatic.schemePRGn),\n  PiYG: last(d3ScaleChromatic.schemePiYG),\n  PuOr: last(d3ScaleChromatic.schemePuOr),\n  RdBu: last(d3ScaleChromatic.schemeRdBu),\n  RdGy: last(d3ScaleChromatic.schemeRdGy),\n  RdYlBu: last(d3ScaleChromatic.schemeRdYlBu),\n  RdYlGn: last(d3ScaleChromatic.schemeRdYlGn),\n  spectral: last(d3ScaleChromatic.schemeSpectral),\n  // Sequential (Single Hue)\n  blues: last(d3ScaleChromatic.schemeBlues),\n  greens: last(d3ScaleChromatic.schemeGreens),\n  greys: last(d3ScaleChromatic.schemeGreys),\n  oranges: last(d3ScaleChromatic.schemeOranges),\n  purples: last(d3ScaleChromatic.schemePurples),\n  reds: last(d3ScaleChromatic.schemeReds),\n  // Sequential (Multi-Hue)\n  BuGn: last(d3ScaleChromatic.schemeBuGn),\n  BuPu: last(d3ScaleChromatic.schemeBuPu),\n  GnBu: last(d3ScaleChromatic.schemeGnBu),\n  OrRd: last(d3ScaleChromatic.schemeOrRd),\n  PuBuGn: last(d3ScaleChromatic.schemePuBuGn),\n  PuBu: last(d3ScaleChromatic.schemePuBu),\n  PuRd: last(d3ScaleChromatic.schemePuRd),\n  RdPu: last(d3ScaleChromatic.schemeRdPu),\n  YlGnBu: last(d3ScaleChromatic.schemeYlGnBu),\n  YlGn: last(d3ScaleChromatic.schemeYlGn),\n  YlOrBr: last(d3ScaleChromatic.schemeYlOrBr),\n  YlOrRd: last(d3ScaleChromatic.schemeYlOrRd)\n};\nvar quantizeColorScalesKeys = Object.keys(quantizeColorScales);\n\nvar guessQuantizeColorScale = function guessQuantizeColorScale(colors) {\n  // colors is already a valid scale\n  if (isFunction(colors)) {\n    if (!isFunction(colors.domain)) {\n      throw new Error('Provided colors should be a valid quantize scale providing a \\'domain()\\' function');\n    }\n\n    return colors;\n  }\n\n  if (quantizeColorScales[colors]) {\n    // use predefined d3 quantize color scale\n    return d3Scale.scaleQuantize().range(quantizeColorScales[colors]);\n  } // user defined colors\n\n\n  if (isArray(colors)) return d3Scale.scaleQuantize().range(colors);\n  throw new Error('Unable to guess quantize color scale from \\'' + colors + '\\',\\nmust be a function or one of:\\n\\'' + quantizeColorScalesKeys.join('\\', \\'') + '\\'');\n}; // used for ordinal color scales\n\n\nvar colorSchemes = {\n  nivo: ['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5'],\n  // categorical\n  category10: d3ScaleChromatic.schemeCategory10,\n  accent: d3ScaleChromatic.schemeAccent,\n  dark2: d3ScaleChromatic.schemeDark2,\n  paired: d3ScaleChromatic.schemePaired,\n  pastel1: d3ScaleChromatic.schemePastel1,\n  pastel2: d3ScaleChromatic.schemePastel2,\n  set1: d3ScaleChromatic.schemeSet1,\n  set2: d3ScaleChromatic.schemeSet2,\n  set3: d3ScaleChromatic.schemeSet3,\n  // diverging\n  brown_blueGreen: last(d3ScaleChromatic.schemeBrBG),\n  purpleRed_green: last(d3ScaleChromatic.schemePRGn),\n  pink_yellowGreen: last(d3ScaleChromatic.schemePiYG),\n  purple_orange: last(d3ScaleChromatic.schemePuOr),\n  red_blue: last(d3ScaleChromatic.schemeRdBu),\n  red_grey: last(d3ScaleChromatic.schemeRdGy),\n  red_yellow_blue: last(d3ScaleChromatic.schemeRdYlBu),\n  red_yellow_green: last(d3ScaleChromatic.schemeRdYlGn),\n  spectral: last(d3ScaleChromatic.schemeSpectral),\n  // sequential single hue\n  blues: last(d3ScaleChromatic.schemeBlues),\n  greens: last(d3ScaleChromatic.schemeGreens),\n  greys: last(d3ScaleChromatic.schemeGreys),\n  oranges: last(d3ScaleChromatic.schemeOranges),\n  purples: last(d3ScaleChromatic.schemePurples),\n  reds: last(d3ScaleChromatic.schemeReds),\n  // sequential multi hue\n  blue_green: last(d3ScaleChromatic.schemeBuGn),\n  blue_purple: last(d3ScaleChromatic.schemeBuPu),\n  green_blue: last(d3ScaleChromatic.schemeGnBu),\n  orange_red: last(d3ScaleChromatic.schemeOrRd),\n  purple_blue_green: last(d3ScaleChromatic.schemePuBuGn),\n  purple_blue: last(d3ScaleChromatic.schemePuBu),\n  purple_red: last(d3ScaleChromatic.schemePuRd),\n  red_purple: last(d3ScaleChromatic.schemeRdPu),\n  yellow_green_blue: last(d3ScaleChromatic.schemeYlGnBu),\n  yellow_green: last(d3ScaleChromatic.schemeYlGn),\n  yellow_orange_brown: last(d3ScaleChromatic.schemeYlOrBr),\n  yellow_orange_red: last(d3ScaleChromatic.schemeYlOrRd)\n};\nvar colorSchemeIds = ['nivo', // categorical\n'category10', 'accent', 'dark2', 'paired', 'pastel1', 'pastel2', 'set1', 'set2', 'set3', // diverging\n'brown_blueGreen', 'purpleRed_green', 'pink_yellowGreen', 'purple_orange', 'red_blue', 'red_grey', 'red_yellow_blue', 'red_yellow_green', 'spectral', // sequential single hue\n'blues', 'greens', 'greys', 'oranges', 'purples', 'reds', // sequential multi hue\n'blue_green', 'blue_purple', 'green_blue', 'orange_red', 'purple_blue_green', 'purple_blue', 'purple_red', 'red_purple', 'yellow_green_blue', 'yellow_green', 'yellow_orange_brown', 'yellow_orange_red']; // used for sequential color scales\n\nvar colorInterpolators = {\n  // diverging\n  brown_blueGreen: d3ScaleChromatic.interpolateBrBG,\n  purpleRed_green: d3ScaleChromatic.interpolatePRGn,\n  pink_yellowGreen: d3ScaleChromatic.interpolatePiYG,\n  purple_orange: d3ScaleChromatic.interpolatePuOr,\n  red_blue: d3ScaleChromatic.interpolateRdBu,\n  red_grey: d3ScaleChromatic.interpolateRdGy,\n  red_yellow_blue: d3ScaleChromatic.interpolateRdYlBu,\n  red_yellow_green: d3ScaleChromatic.interpolateRdYlGn,\n  spectral: d3ScaleChromatic.interpolateSpectral,\n  // sequential single hue\n  blues: d3ScaleChromatic.interpolateBlues,\n  greens: d3ScaleChromatic.interpolateGreens,\n  greys: d3ScaleChromatic.interpolateGreys,\n  oranges: d3ScaleChromatic.interpolateOranges,\n  purples: d3ScaleChromatic.interpolatePurples,\n  reds: d3ScaleChromatic.interpolateReds,\n  // sequential multi hue\n  viridis: d3ScaleChromatic.interpolateViridis,\n  inferno: d3ScaleChromatic.interpolateInferno,\n  magma: d3ScaleChromatic.interpolateMagma,\n  plasma: d3ScaleChromatic.interpolatePlasma,\n  warm: d3ScaleChromatic.interpolateWarm,\n  cool: d3ScaleChromatic.interpolateCool,\n  cubehelixDefault: d3ScaleChromatic.interpolateCubehelixDefault,\n  blue_green: d3ScaleChromatic.interpolateBuGn,\n  blue_purple: d3ScaleChromatic.interpolateBuPu,\n  green_blue: d3ScaleChromatic.interpolateGnBu,\n  orange_red: d3ScaleChromatic.interpolateOrRd,\n  purple_blue_green: d3ScaleChromatic.interpolatePuBuGn,\n  purple_blue: d3ScaleChromatic.interpolatePuBu,\n  purple_red: d3ScaleChromatic.interpolatePuRd,\n  red_purple: d3ScaleChromatic.interpolateRdPu,\n  yellow_green_blue: d3ScaleChromatic.interpolateYlGnBu,\n  yellow_green: d3ScaleChromatic.interpolateYlGn,\n  yellow_orange_brown: d3ScaleChromatic.interpolateYlOrBr,\n  yellow_orange_red: d3ScaleChromatic.interpolateYlOrRd,\n  // cyclical\n  rainbow: d3ScaleChromatic.interpolateRainbow,\n  sinebow: d3ScaleChromatic.interpolateSinebow\n};\nvar colorInterpolatorIds = [// diverging\n'brown_blueGreen', 'purpleRed_green', 'pink_yellowGreen', 'purple_orange', 'red_blue', 'red_grey', 'red_yellow_blue', 'red_yellow_green', 'spectral', // sequential single hue\n'blues', 'greens', 'greys', 'oranges', 'purples', 'reds', // sequential multi hue\n'viridis', 'inferno', 'magma', 'plasma', 'warm', 'cool', 'cubehelixDefault', 'blue_green', 'blue_purple', 'green_blue', 'orange_red', 'purple_blue_green', 'purple_blue', 'purple_red', 'red_purple', 'yellow_green_blue', 'yellow_green', 'yellow_orange_brown', 'yellow_orange_red', // cyclical\n'rainbow', 'sinebow'];\nvar ordinalColorScales = {\n  category10: d3Scale.scaleOrdinal(d3ScaleChromatic.schemeCategory10),\n  accent: d3Scale.scaleOrdinal(d3ScaleChromatic.schemeAccent),\n  dark2: d3Scale.scaleOrdinal(d3ScaleChromatic.schemeDark2),\n  paired: d3Scale.scaleOrdinal(d3ScaleChromatic.schemePaired),\n  pastel1: d3Scale.scaleOrdinal(d3ScaleChromatic.schemePastel1),\n  pastel2: d3Scale.scaleOrdinal(d3ScaleChromatic.schemePastel2),\n  set1: d3Scale.scaleOrdinal(d3ScaleChromatic.schemeSet1),\n  set2: d3Scale.scaleOrdinal(d3ScaleChromatic.schemeSet2),\n  set3: d3Scale.scaleOrdinal(d3ScaleChromatic.schemeSet3)\n};\n\nvar nivoCategoricalColors = function nivoCategoricalColors() {\n  return d3Scale.scaleOrdinal(['#e8c1a0', '#f47560', '#f1e15b', '#e8a838', '#61cdbb', '#97e3d5']);\n};\n\nvar dataColor = function dataColor(d) {\n  return d.color || d.data.color;\n};\n\nvar getColorRange = function getColorRange(instruction) {\n  if (instruction === 'data') return dataColor;\n  if (instruction === 'nivo') return nivoCategoricalColors();\n  if (isFunction(instruction)) return instruction;\n  if (ordinalColorScales[instruction]) return ordinalColorScales[instruction];\n  if (isArray(instruction)) return d3Scale.scaleOrdinal(instruction);\n  return function () {\n    return instruction;\n  };\n};\n\nvar getColorScale = function getColorScale(colors, dataScale) {\n  if (isString(colors)) {\n    var scheme = colorSchemes[colors];\n\n    if (scheme !== undefined) {\n      var scale = d3Scale.scaleOrdinal(scheme);\n      scale.type = 'ordinal';\n      return scale;\n    }\n\n    if (dataScale !== undefined && colors.indexOf('seq:') === 0) {\n      var interpolator = colorInterpolators[colors.slice(4)];\n\n      if (interpolator !== undefined) {\n        var _scale = d3Scale.scaleSequential(interpolator).domain(dataScale.domain());\n\n        _scale.type = 'sequential';\n        return _scale;\n      }\n    }\n  }\n\n  if (isArray(colors)) {\n    var _scale2 = d3Scale.scaleOrdinal(colors);\n\n    _scale2.type = 'ordinal';\n    return _scale2;\n  } // just use provided value,\n  // all elements will have identical color\n\n\n  return function () {\n    return colors;\n  };\n};\n\nvar getColorsGenerator = function getColorsGenerator(colors, colorBy) {\n  // skip range, color should be bound to data\n  if (isFunction(colorBy)) return colorBy;\n  var scale = void 0;\n\n  var getColorId = function getColorId(d) {\n    return get(d, colorBy);\n  };\n\n  if (isString(colors) && colorSchemes[colors] !== undefined) {\n    scale = d3Scale.scaleOrdinal(colorSchemes[colors]);\n    scale.type = 'ordinal';\n  } else if (isArray(colors)) {\n    // user defined color range\n    scale = d3Scale.scaleOrdinal(colors);\n    scale.type = 'ordinal';\n  } else {\n    // just use provided value,\n    // all elements will have identical color\n    return function () {\n      return colors;\n    };\n  }\n\n  var colorGenerator = function colorGenerator(d) {\n    return scale(getColorId(d));\n  };\n\n  colorGenerator.type = scale.type;\n  return colorGenerator;\n};\n/**\n * This HOC watch colors related props change\n * and returns the corresponding color generator function.\n * Using it prevent from having a new ref each time\n * we pass through the component, useful for shallow comparison.\n */\n\n\nvar withColors = function withColors() {\n  var _defaultProps, _setPropTypes;\n\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$colorsKey = _ref.colorsKey,\n      colorsKey = _ref$colorsKey === undefined ? 'colors' : _ref$colorsKey,\n      _ref$colorByKey = _ref.colorByKey,\n      colorByKey = _ref$colorByKey === undefined ? 'colorBy' : _ref$colorByKey,\n      _ref$destKey = _ref.destKey,\n      destKey = _ref$destKey === undefined ? 'getColor' : _ref$destKey,\n      _ref$defaultColors = _ref.defaultColors,\n      defaultColors = _ref$defaultColors === undefined ? 'nivo' : _ref$defaultColors,\n      _ref$defaultColorBy = _ref.defaultColorBy,\n      defaultColorBy = _ref$defaultColorBy === undefined ? 'id' : _ref$defaultColorBy;\n\n  return compose(defaultProps((_defaultProps = {}, _defaultProps[colorsKey] = defaultColors, _defaultProps[colorByKey] = defaultColorBy, _defaultProps)), setPropTypes((_setPropTypes = {}, _setPropTypes[colorsKey] = PropTypes.any.isRequired, _setPropTypes[colorByKey] = PropTypes.oneOfType([PropTypes.string, PropTypes.func]), _setPropTypes)), withPropsOnChange([colorsKey, colorByKey], function (props) {\n    var _ref2;\n\n    return _ref2 = {}, _ref2[destKey] = getColorsGenerator(props[colorsKey], props[colorByKey]), _ref2;\n  }));\n};\n\nvar quantizeColorScalePropType = PropTypes.oneOfType([PropTypes.oneOf(quantizeColorScalesKeys), PropTypes.func, PropTypes.arrayOf(PropTypes.string)]);\nvar curvePropMapping = {\n  basis: d3Shape.curveBasis,\n  basisClosed: d3Shape.curveBasisClosed,\n  basisOpen: d3Shape.curveBasisOpen,\n  bundle: d3Shape.curveBundle,\n  cardinal: d3Shape.curveCardinal,\n  cardinalClosed: d3Shape.curveCardinalClosed,\n  cardinalOpen: d3Shape.curveCardinalOpen,\n  catmullRom: d3Shape.curveCatmullRom,\n  catmullRomClosed: d3Shape.curveCatmullRomClosed,\n  catmullRomOpen: d3Shape.curveCatmullRomOpen,\n  linear: d3Shape.curveLinear,\n  linearClosed: d3Shape.curveLinearClosed,\n  monotoneX: d3Shape.curveMonotoneX,\n  monotoneY: d3Shape.curveMonotoneY,\n  natural: d3Shape.curveNatural,\n  step: d3Shape.curveStep,\n  stepAfter: d3Shape.curveStepAfter,\n  stepBefore: d3Shape.curveStepBefore\n};\nvar curvePropKeys = Object.keys(curvePropMapping);\nvar curvePropType = PropTypes.oneOf(curvePropKeys);\nvar closedCurvePropKeys = curvePropKeys.filter(function (c) {\n  return c.endsWith('Closed');\n});\nvar closedCurvePropType = PropTypes.oneOf(closedCurvePropKeys); // Safe curves to be used with d3 area shape generator\n\nvar areaCurvePropKeys = without(curvePropKeys, 'bundle', 'basisClosed', 'basisOpen', 'cardinalClosed', 'cardinalOpen', 'catmullRomClosed', 'catmullRomOpen', 'linearClosed');\nvar areaCurvePropType = PropTypes.oneOf(areaCurvePropKeys); // Safe curves to be used with d3 line shape generator\n\nvar lineCurvePropKeys = without(curvePropKeys, 'bundle', 'basisClosed', 'basisOpen', 'cardinalClosed', 'cardinalOpen', 'catmullRomClosed', 'catmullRomOpen', 'linearClosed');\nvar lineCurvePropType = PropTypes.oneOf(lineCurvePropKeys);\n/**\n * Returns curve interpolator from given identifier.\n *\n * @param {string} id - Curve interpolator identifier\n * @return {Function}\n */\n\nvar curveFromProp = function curveFromProp(id) {\n  var curveInterpolator = curvePropMapping[id];\n\n  if (!curveInterpolator) {\n    throw new TypeError('\\'' + id + '\\', is not a valid curve interpolator identifier.');\n  }\n\n  return curvePropMapping[id];\n};\n\nvar defsPropTypes = {\n  defs: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired\n  })).isRequired,\n  fill: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    match: PropTypes.oneOfType([PropTypes.oneOf(['*']), PropTypes.object, PropTypes.func]).isRequired\n  })).isRequired\n};\nvar stackOrderPropMapping = {\n  ascending: d3Shape.stackOrderAscending,\n  descending: d3Shape.stackOrderDescending,\n  insideOut: d3Shape.stackOrderInsideOut,\n  none: d3Shape.stackOrderNone,\n  reverse: d3Shape.stackOrderReverse\n};\nvar stackOrderPropKeys = Object.keys(stackOrderPropMapping);\nvar stackOrderPropType = PropTypes.oneOf(stackOrderPropKeys);\n\nvar stackOrderFromProp = function stackOrderFromProp(prop) {\n  return stackOrderPropMapping[prop];\n};\n\nvar stackOffsetPropMapping = {\n  expand: d3Shape.stackOffsetExpand,\n  diverging: d3Shape.stackOffsetDiverging,\n  none: d3Shape.stackOffsetNone,\n  silhouette: d3Shape.stackOffsetSilhouette,\n  wiggle: d3Shape.stackOffsetWiggle\n};\nvar stackOffsetPropKeys = Object.keys(stackOffsetPropMapping);\nvar stackOffsetPropType = PropTypes.oneOf(stackOffsetPropKeys);\n\nvar stackOffsetFromProp = function stackOffsetFromProp(prop) {\n  return stackOffsetPropMapping[prop];\n};\n\nvar treeMapTilePropMapping = {\n  binary: d3Hierarchy.treemapBinary,\n  dice: d3Hierarchy.treemapDice,\n  slice: d3Hierarchy.treemapSlice,\n  sliceDice: d3Hierarchy.treemapSliceDice,\n  squarify: d3Hierarchy.treemapSquarify,\n  resquarify: d3Hierarchy.treemapResquarify\n};\nvar treeMapTilePropKeys = Object.keys(treeMapTilePropMapping);\nvar treeMapTilePropType = PropTypes.oneOf(treeMapTilePropKeys);\n\nvar treeMapTileFromProp = function treeMapTileFromProp(prop) {\n  return treeMapTilePropMapping[prop];\n};\n\nvar scalePropType = PropTypes.shape({\n  type: PropTypes.string.isRequired,\n  domain: PropTypes.array.isRequired,\n  range: PropTypes.array.isRequired\n});\nvar marginPropType = PropTypes.shape({\n  top: PropTypes.number,\n  right: PropTypes.number,\n  bottom: PropTypes.number,\n  left: PropTypes.number\n}).isRequired;\nvar motionPropTypes = {\n  animate: PropTypes.bool.isRequired,\n  motionStiffness: PropTypes.number.isRequired,\n  motionDamping: PropTypes.number.isRequired\n};\nvar blendModePropType = PropTypes.oneOf(['normal', 'multiply', 'screen', 'overlay', 'darken', 'lighten', 'color-dodge', 'color-burn', 'hard-light', 'soft-light', 'difference', 'exclusion', 'hue', 'saturation', 'color', 'luminosity']);\n/**\n * This HOC transform d3 curve interpolation identifier\n * to its corresponding interpolator.\n */\n\nvar withCurve = function withCurve() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$srcKey = _ref.srcKey,\n      srcKey = _ref$srcKey === undefined ? 'curve' : _ref$srcKey,\n      _ref$destKey = _ref.destKey,\n      destKey = _ref$destKey === undefined ? 'curveInterpolator' : _ref$destKey;\n\n  return withProps(function (props) {\n    var _ref2;\n\n    return _ref2 = {}, _ref2[destKey] = curveFromProp(props[srcKey]), _ref2;\n  });\n}; // motion\n\n\nvar defaultAnimate = true;\nvar defaultMotionStiffness = 90;\nvar defaultMotionDamping = 13; // colors\n\nvar defaultCategoricalColors = nivoCategoricalColors;\nvar defaultColorRange = d3Scale.scaleOrdinal(d3ScaleChromatic.schemeSet3); // margin\n\nvar defaultMargin = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n};\n/**\n * This HOC watch width, height & margin props change\n * and returns new width/height plus outer dimensions.\n * Using it prevent from having a new ref each time\n * we pass through the component, useful for shallow comparison.\n * It also add required propTypes & set default margin.\n */\n\nvar withDimensions = function withDimensions() {\n  return compose(defaultProps({\n    margin: defaultMargin\n  }), setPropTypes({\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    margin: marginPropType\n  }), withPropsOnChange(function (props, nextProps) {\n    return props.width !== nextProps.width || props.height !== nextProps.height || !isEqual(props.margin, nextProps.margin);\n  }, function (props) {\n    var margin = Object.assign({}, defaultMargin, props.margin);\n    return {\n      margin: margin,\n      width: props.width - margin.left - margin.right,\n      height: props.height - margin.top - margin.bottom,\n      outerWidth: props.width,\n      outerHeight: props.height\n    };\n  }));\n};\n\nvar getLabelGenerator = function getLabelGenerator(_label, labelFormat) {\n  var getRawLabel = isFunction(_label) ? _label : function (d) {\n    return get(d, _label);\n  };\n  var formatter = void 0;\n\n  if (labelFormat) {\n    formatter = isFunction(labelFormat) ? labelFormat : d3Format.format(labelFormat);\n  }\n\n  if (formatter) return function (d) {\n    return formatter(getRawLabel(d));\n  };\n  return getRawLabel;\n};\n\nvar getAccessorFor = function getAccessorFor(directive) {\n  return isFunction(directive) ? directive : function (d) {\n    return d[directive];\n  };\n};\n\nvar getAccessorOrValue = function getAccessorOrValue(value) {\n  return isFunction(value) ? value : function () {\n    return value;\n  };\n};\n/**\n * This HOC watch hierarchical data props change\n * and returns the corresponding summed hierarchy.\n * Using it prevent from having a new ref each time\n * we pass through the component, useful for shallow comparison.\n */\n\n\nvar withHierarchy = function withHierarchy() {\n  var _defaultProps, _setPropTypes;\n\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$srcKey = _ref.srcKey,\n      srcKey = _ref$srcKey === undefined ? 'root' : _ref$srcKey,\n      _ref$destKey = _ref.destKey,\n      destKey = _ref$destKey === undefined ? 'root' : _ref$destKey,\n      _ref$valueKey = _ref.valueKey,\n      valueKey = _ref$valueKey === undefined ? 'value' : _ref$valueKey,\n      _ref$valueDefault = _ref.valueDefault,\n      valueDefault = _ref$valueDefault === undefined ? 'value' : _ref$valueDefault;\n\n  return compose(defaultProps((_defaultProps = {}, _defaultProps[valueKey] = valueDefault, _defaultProps)), setPropTypes((_setPropTypes = {}, _setPropTypes[srcKey] = PropTypes.object.isRequired, _setPropTypes[valueKey] = PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired, _setPropTypes)), withPropsOnChange([srcKey, valueKey], function (props) {\n    var _ref2;\n\n    return _ref2 = {}, _ref2[destKey] = d3Hierarchy.hierarchy(props[srcKey]).sum(getAccessorFor(props[valueKey])), _ref2;\n  }));\n};\n\nvar withMotion = function withMotion() {\n  return compose(setPropTypes(motionPropTypes), defaultProps({\n    animate: defaultAnimate,\n    motionDamping: defaultMotionDamping,\n    motionStiffness: defaultMotionStiffness\n  }), withPropsOnChange(['motionDamping', 'motionStiffness'], function (_ref) {\n    var motionDamping = _ref.motionDamping,\n        motionStiffness = _ref.motionStiffness;\n    return {\n      boundSpring: partialRight(reactMotion.spring, {\n        damping: motionDamping,\n        stiffness: motionStiffness\n      })\n    };\n  }));\n};\n/**\n * This HOC watch theme prop change\n * and returns it deeply merged with default theme.\n * Using it prevent from having a new ref each time\n * we pass through the component, useful for shallow comparison.\n */\n\n\nvar withTheme = function withTheme() {\n  var _setPropTypes;\n\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref$srcKey = _ref.srcKey,\n      srcKey = _ref$srcKey === undefined ? 'theme' : _ref$srcKey,\n      _ref$destKey = _ref.destKey,\n      destKey = _ref$destKey === undefined ? 'theme' : _ref$destKey;\n\n  return compose(setPropTypes((_setPropTypes = {}, _setPropTypes[srcKey] = PropTypes.object, _setPropTypes)), withPropsOnChange([srcKey], function (props) {\n    var _ref2;\n\n    return _ref2 = {}, _ref2[destKey] = merge({}, defaultTheme, props[srcKey]), _ref2;\n  }));\n};\n\nvar horizontalPositions = ['top', 'bottom'];\nvar verticalPositions = ['left', 'right'];\n/**\n * @param {Object} scale\n *\n * @return {Object} centered scale\n */\n\nvar centerScale = function centerScale(scale) {\n  var bandwidth = scale.bandwidth();\n  if (bandwidth === 0) return scale;\n  var offset = bandwidth / 2;\n\n  if (scale.round()) {\n    offset = Math.round(offset);\n  }\n\n  return function (d) {\n    return scale(d) + offset;\n  };\n};\n/**\n * @param {Object} scale\n * @param {number} [tickCount]\n *\n * @return {Array.<number|string>}\n */\n\n\nvar getScaleValues = function getScaleValues(scale, tickCount) {\n  if (scale.ticks) return scale.ticks(tickCount);\n  return scale.domain();\n};\n/**\n * @typedef {Object} AxisTick\n * @param {number} x\n * @param {number} y\n * @param {number} lineX\n * @param {number} lineY\n * @param {number} textX\n * @param {number} textY\n */\n\n/**\n * @param {number}                       width\n * @param {number}                       height\n * @param {string}                       _position\n * @param {Object}                       scale\n * @param {number|Array.<string|number>} [_tickValues]\n * @param {number}                       [tickSize=5]\n * @param {number}                       [tickPadding=5]\n * @param {number}                       [tickRotation=0]\n * @parem {string}                       [engine='svg']\n *\n * @return {{ x: number, y: number, ticks: Array.<AxisTick>, textAlign: string, textBaseline: string }}\n */\n\n\nvar computeAxisTicks = function computeAxisTicks(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      _position = _ref.position,\n      scale = _ref.scale,\n      _tickValues = _ref.tickValues,\n      _ref$tickSize = _ref.tickSize,\n      tickSize = _ref$tickSize === undefined ? 5 : _ref$tickSize,\n      _ref$tickPadding = _ref.tickPadding,\n      tickPadding = _ref$tickPadding === undefined ? 5 : _ref$tickPadding,\n      _ref$tickRotation = _ref.tickRotation,\n      tickRotation = _ref$tickRotation === undefined ? 0 : _ref$tickRotation,\n      _ref$engine = _ref.engine,\n      engine = _ref$engine === undefined ? 'svg' : _ref$engine;\n  var tickValues = isArray(_tickValues) ? _tickValues : undefined;\n  var tickCount = isNumber(_tickValues) ? _tickValues : undefined;\n  var values = tickValues || getScaleValues(scale, tickCount);\n  var textProps = textPropsByEngine[engine];\n  var orient = _position;\n  var position = scale.bandwidth ? centerScale(scale) : scale;\n  var line = {\n    lineX: 0,\n    lineY: 0\n  };\n  var text = {\n    textX: 0,\n    textY: 0\n  };\n  var x = 0;\n  var y = 0;\n  var translate = void 0;\n  var textAlign = textProps.align.center;\n  var textBaseline = textProps.baseline.center;\n\n  if (horizontalPositions.includes(orient)) {\n    translate = function translate(d) {\n      return {\n        x: position(d),\n        y: 0\n      };\n    };\n\n    line.lineY = tickSize * (orient === 'bottom' ? 1 : -1);\n    text.textY = (tickSize + tickPadding) * (orient === 'bottom' ? 1 : -1);\n\n    if (orient === 'bottom') {\n      y = height;\n      textBaseline = textProps.baseline.top;\n    } else {\n      textBaseline = textProps.baseline.bottom;\n    }\n\n    if (tickRotation === 0) {\n      textAlign = textProps.align.center;\n    } else if (orient === 'bottom' && tickRotation < 0 || orient === 'top' && tickRotation > 0) {\n      textAlign = textProps.align.right;\n      textBaseline = textProps.baseline.center;\n    } else if (orient === 'bottom' && tickRotation > 0 || orient === 'top' && tickRotation < 0) {\n      textAlign = textProps.align.left;\n      textBaseline = textProps.baseline.center;\n    }\n  } else if (verticalPositions.includes(orient)) {\n    translate = function translate(d) {\n      return {\n        x: 0,\n        y: position(d)\n      };\n    };\n\n    line.lineX = tickSize * (orient === 'right' ? 1 : -1);\n    text.textX = (tickSize + tickPadding) * (orient === 'right' ? 1 : -1);\n\n    if (orient === 'right') {\n      x = width;\n      textAlign = textProps.align.left;\n    } else {\n      textAlign = textProps.align.right;\n    }\n  }\n\n  var ticks = values.map(function (value) {\n    return _extends({\n      key: value,\n      value: value\n    }, translate(value), line, text);\n  });\n  return {\n    x: x,\n    y: y,\n    ticks: ticks,\n    textAlign: textAlign,\n    textBaseline: textBaseline\n  };\n};\n/**\n * @param {number} width\n * @param {number} height\n * @param {Object} scale\n * @param {string} axis\n *\n * @return {Array.<Object>}\n */\n\n\nvar computeGridLines = function computeGridLines(_ref2) {\n  var width = _ref2.width,\n      height = _ref2.height,\n      scale = _ref2.scale,\n      axis = _ref2.axis,\n      _ref2$values = _ref2.values,\n      values = _ref2$values === undefined ? getScaleValues(scale) : _ref2$values;\n  var position = scale.bandwidth ? centerScale(scale) : scale;\n  var lines = void 0;\n\n  if (axis === 'x') {\n    lines = values.map(function (v) {\n      return {\n        key: '' + v,\n        x1: position(v),\n        x2: position(v),\n        y1: 0,\n        y2: height\n      };\n    });\n  } else if (axis === 'y') {\n    lines = values.map(function (v) {\n      return {\n        key: '' + v,\n        x1: 0,\n        x2: width,\n        y1: position(v),\n        y2: position(v)\n      };\n    });\n  }\n\n  return lines;\n};\n\nvar AxisTick = function (_Component) {\n  inherits(AxisTick, _Component);\n\n  function AxisTick() {\n    classCallCheck(this, AxisTick);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  AxisTick.prototype.render = function render() {\n    var _props = this.props,\n        _value = _props.value,\n        x = _props.x,\n        y = _props.y,\n        opacity = _props.opacity,\n        rotate = _props.rotate,\n        format = _props.format,\n        lineX = _props.lineX,\n        lineY = _props.lineY,\n        _onClick = _props.onClick,\n        textX = _props.textX,\n        textY = _props.textY,\n        textBaseline = _props.textBaseline,\n        textAnchor = _props.textAnchor,\n        theme = _props.theme;\n    var value = _value;\n\n    if (format !== undefined) {\n      value = format(value);\n    }\n\n    var gStyle = {\n      opacity: opacity\n    };\n\n    if (_onClick) {\n      gStyle['cursor'] = 'pointer';\n    }\n\n    return React__default.createElement('g', _extends({\n      transform: 'translate(' + x + ',' + y + ')'\n    }, _onClick ? {\n      onClick: function onClick(e) {\n        return _onClick(e, value);\n      }\n    } : {}, {\n      style: gStyle\n    }), React__default.createElement('line', {\n      x1: 0,\n      x2: lineX,\n      y1: 0,\n      y2: lineY,\n      style: theme.axis.ticks.line\n    }), React__default.createElement('text', {\n      alignmentBaseline: textBaseline,\n      textAnchor: textAnchor,\n      transform: 'translate(' + textX + ',' + textY + ') rotate(' + rotate + ')',\n      style: theme.axis.ticks.text\n    }, value));\n  };\n\n  return AxisTick;\n}(React.Component);\n\nAxisTick.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]).isRequired,\n  format: PropTypes.func,\n  x: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  lineX: PropTypes.number.isRequired,\n  lineY: PropTypes.number.isRequired,\n  textX: PropTypes.number.isRequired,\n  textY: PropTypes.number.isRequired,\n  textBaseline: PropTypes.string.isRequired,\n  textAnchor: PropTypes.string.isRequired,\n  opacity: PropTypes.number.isRequired,\n  rotate: PropTypes.number.isRequired,\n  onClick: PropTypes.func,\n  theme: PropTypes.shape({\n    axis: axisThemePropType.isRequired\n  }).isRequired\n};\nAxisTick.defaultProps = {\n  opacity: 1,\n  rotate: 0\n};\nvar axisPositions = ['top', 'right', 'bottom', 'left'];\nvar legendPositions = ['start', 'center', 'end'];\nvar axisPropType = PropTypes.shape({\n  orient: PropTypes.oneOf(axisPositions),\n  tickValues: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]))]),\n  tickSize: PropTypes.number,\n  tickPadding: PropTypes.number,\n  tickRotation: PropTypes.number,\n  format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  legend: PropTypes.node,\n  legendPosition: PropTypes.oneOf(legendPositions),\n  legendOffset: PropTypes.number\n});\n\nvar willEnter = function willEnter() {\n  return {\n    opacity: 0,\n    x: 0,\n    y: 0\n  };\n};\n\nvar willLeave = function willLeave(springConfig) {\n  return function (_ref) {\n    var _ref$style = _ref.style,\n        x = _ref$style.x,\n        y = _ref$style.y;\n    return {\n      opacity: reactMotion.spring(0, springConfig),\n      x: reactMotion.spring(x.val, springConfig),\n      y: reactMotion.spring(y.val, springConfig)\n    };\n  };\n};\n\nvar Axis = function Axis(_ref2) {\n  var scale = _ref2.scale,\n      width = _ref2.width,\n      height = _ref2.height,\n      _position = _ref2.position,\n      tickValues = _ref2.tickValues,\n      tickSize = _ref2.tickSize,\n      tickPadding = _ref2.tickPadding,\n      tickRotation = _ref2.tickRotation,\n      format = _ref2.format,\n      _legend = _ref2.legend,\n      legendPosition = _ref2.legendPosition,\n      legendOffset = _ref2.legendOffset,\n      theme = _ref2.theme,\n      animate = _ref2.animate,\n      motionStiffness = _ref2.motionStiffness,\n      motionDamping = _ref2.motionDamping,\n      onClick = _ref2.onClick;\n\n  var _computeAxisTicks = computeAxisTicks({\n    width: width,\n    height: height,\n    scale: scale,\n    position: _position,\n    tickValues: tickValues,\n    tickSize: tickSize,\n    tickPadding: tickPadding,\n    tickRotation: tickRotation\n  }),\n      x = _computeAxisTicks.x,\n      y = _computeAxisTicks.y,\n      ticks = _computeAxisTicks.ticks,\n      textAlign = _computeAxisTicks.textAlign,\n      textBaseline = _computeAxisTicks.textBaseline;\n\n  var isHorizontal = ['top', 'bottom'].includes(_position);\n  var isVertical = !isHorizontal;\n  var legend = null;\n\n  if (_legend !== undefined) {\n    var legendX = 0;\n    var legendY = 0;\n    var legendRotation = 0;\n    var textAnchor = void 0;\n\n    if (isVertical) {\n      legendRotation = -90;\n      legendX = legendOffset;\n\n      if (legendPosition === 'start') {\n        textAnchor = 'start';\n        legendY = height;\n      } else if (legendPosition === 'center') {\n        textAnchor = 'middle';\n        legendY = height / 2;\n      } else if (legendPosition === 'end') {\n        textAnchor = 'end';\n      }\n    } else {\n      legendY = legendOffset;\n\n      if (legendPosition === 'start') {\n        textAnchor = 'start';\n      } else if (legendPosition === 'center') {\n        textAnchor = 'middle';\n        legendX = width / 2;\n      } else if (legendPosition === 'end') {\n        textAnchor = 'end';\n        legendX = width;\n      }\n    }\n\n    legend = React__default.createElement('text', {\n      transform: 'translate(' + legendX + ', ' + legendY + ') rotate(' + legendRotation + ')',\n      textAnchor: textAnchor,\n      style: theme.axis.legend.text\n    }, _legend);\n  }\n\n  var tickElements = void 0;\n\n  if (!animate) {\n    tickElements = React__default.createElement('g', null, ticks.map(function (tick) {\n      return React__default.createElement(AxisTick, _extends({\n        key: tick.key,\n        value: tick.key,\n        format: format,\n        lineX: tick.lineX,\n        lineY: tick.lineY,\n        rotate: tickRotation,\n        textX: tick.textX,\n        textY: tick.textY,\n        textBaseline: textBaseline,\n        textAnchor: textAlign,\n        theme: theme,\n        x: tick.x,\n        y: tick.y\n      }, onClick ? {\n        onClick: onClick\n      } : {}));\n    }));\n  } else {\n    var springConfig = {\n      stiffness: motionStiffness,\n      damping: motionDamping\n    };\n    tickElements = React__default.createElement(reactMotion.TransitionMotion, {\n      willEnter: willEnter,\n      willLeave: willLeave(springConfig),\n      styles: ticks.map(function (tick) {\n        return {\n          key: '' + tick.key,\n          data: tick,\n          style: {\n            opacity: reactMotion.spring(1, springConfig),\n            x: reactMotion.spring(tick.x, springConfig),\n            y: reactMotion.spring(tick.y, springConfig)\n          }\n        };\n      })\n    }, function (interpolatedStyles) {\n      return React__default.createElement('g', null, interpolatedStyles.map(function (_ref3) {\n        var key = _ref3.key,\n            style = _ref3.style,\n            tick = _ref3.data;\n        return React__default.createElement(AxisTick, _extends({\n          key: key,\n          value: key,\n          format: format,\n          lineX: tick.lineX,\n          lineY: tick.lineY,\n          rotate: tickRotation,\n          textX: tick.textX,\n          textY: tick.textY,\n          textBaseline: textBaseline,\n          textAnchor: textAlign,\n          theme: theme\n        }, onClick ? {\n          onClick: onClick\n        } : {}, style));\n      }));\n    });\n  }\n\n  return React__default.createElement('g', {\n    transform: 'translate(' + x + ',' + y + ')'\n  }, legend, tickElements, React__default.createElement('line', {\n    style: theme.axis.domain.line,\n    x1: 0,\n    x2: isHorizontal ? width : 0,\n    y1: 0,\n    y2: isHorizontal ? 0 : height\n  }));\n};\n\nAxis.propTypes = _extends({\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  position: PropTypes.oneOf(axisPositions).isRequired,\n  scale: PropTypes.func.isRequired,\n  tickValues: PropTypes.oneOfType([PropTypes.number, PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)]))]),\n  tickSize: PropTypes.number.isRequired,\n  tickPadding: PropTypes.number.isRequired,\n  tickRotation: PropTypes.number.isRequired,\n  format: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  legend: PropTypes.node,\n  legendPosition: PropTypes.oneOf(legendPositions).isRequired,\n  legendOffset: PropTypes.number.isRequired,\n  theme: PropTypes.shape({\n    axis: axisThemePropType.isRequired\n  }).isRequired,\n  onClick: PropTypes.func\n}, motionPropTypes);\nAxis.defaultProps = {\n  tickSize: 5,\n  tickPadding: 5,\n  tickRotation: 0,\n  legendPosition: 'end',\n  legendOffset: 0\n};\nvar enhance$1 = compose(withMotion(), withPropsOnChange(['format', 'scale'], function (_ref4) {\n  var format = _ref4.format,\n      scale = _ref4.scale;\n\n  if (!format || isFunction(format)) {\n    return {\n      format: format\n    };\n  } else if (scale.type === 'time') {\n    var f = d3TimeFormat.timeFormat(format);\n    return {\n      format: function format(d) {\n        return f(new Date(d));\n      }\n    };\n  } else {\n    return {\n      format: d3Format.format(format)\n    };\n  }\n}), pure);\nvar Axis$1 = enhance$1(Axis);\nvar horizontalPositions$1 = ['top', 'bottom'];\nvar verticalPositions$1 = ['left', 'right'];\nvar positions = [].concat(horizontalPositions$1, verticalPositions$1);\n\nvar Axes = function Axes(_ref) {\n  var xScale = _ref.xScale,\n      yScale = _ref.yScale,\n      width = _ref.width,\n      height = _ref.height,\n      top = _ref.top,\n      right = _ref.right,\n      bottom = _ref.bottom,\n      left = _ref.left,\n      theme = _ref.theme,\n      animate = _ref.animate,\n      motionStiffness = _ref.motionStiffness,\n      motionDamping = _ref.motionDamping;\n  var axes = {\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left\n  };\n  return React__default.createElement('g', null, positions.map(function (position) {\n    var axis = axes[position];\n    if (!axis) return null;\n    var scale = horizontalPositions$1.includes(position) ? xScale : yScale;\n    return React__default.createElement(Axis$1, _extends({\n      theme: theme\n    }, axis, {\n      key: position,\n      width: width,\n      height: height,\n      position: position,\n      scale: scale,\n      animate: animate,\n      motionDamping: motionDamping,\n      motionStiffness: motionStiffness\n    }));\n  }));\n};\n\nAxes.propTypes = _extends({\n  xScale: PropTypes.func.isRequired,\n  yScale: PropTypes.func.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  top: axisPropType,\n  right: axisPropType,\n  bottom: axisPropType,\n  left: axisPropType,\n  theme: PropTypes.shape({\n    axis: axisThemePropType.isRequired\n  }).isRequired\n}, motionPropTypes);\nvar Axes$1 = shouldUpdate(function (props, nextProps) {\n  return props.xScale !== nextProps.xScale || props.yScale !== nextProps.yScale || props.width !== nextProps.width || props.height !== nextProps.height || props.theme !== nextProps.theme || props.animate !== nextProps.animate || props.motionDamping !== nextProps.motionDamping || props.motionStiffness !== nextProps.motionStiffness || !isEqual(props.top, nextProps.top) || !isEqual(props.right, nextProps.right) || !isEqual(props.bottom, nextProps.bottom) || !isEqual(props.left, nextProps.left);\n})(Axes);\n\nvar GridLine = function GridLine(props) {\n  return React__default.createElement('line', props);\n};\n\nGridLine.propTypes = {\n  x1: PropTypes.number.isRequired,\n  x2: PropTypes.number.isRequired,\n  y1: PropTypes.number.isRequired,\n  y2: PropTypes.number.isRequired\n};\nGridLine.defaultProps = {\n  x1: 0,\n  x2: 0,\n  y1: 0,\n  y2: 0\n};\n\nvar GridLines = function (_Component) {\n  inherits(GridLines, _Component);\n\n  function GridLines(props) {\n    classCallCheck(this, GridLines);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.willEnter = _this.willEnter.bind(_this);\n    _this.willLeave = _this.willLeave.bind(_this);\n    return _this;\n  }\n\n  GridLines.prototype.willEnter = function willEnter(_ref) {\n    var style = _ref.style;\n    var type = this.props.type;\n    return {\n      opacity: 0,\n      x1: type === 'x' ? 0 : style.x1.val,\n      x2: type === 'x' ? 0 : style.x2.val,\n      y1: type === 'y' ? 0 : style.y1.val,\n      y2: type === 'y' ? 0 : style.y2.val\n    };\n  };\n\n  GridLines.prototype.willLeave = function willLeave(_ref2) {\n    var style = _ref2.style;\n    var _props = this.props,\n        motionStiffness = _props.motionStiffness,\n        motionDamping = _props.motionDamping;\n    var springConfig = {\n      stiffness: motionStiffness,\n      damping: motionDamping\n    };\n    return {\n      opacity: reactMotion.spring(0, springConfig),\n      x1: reactMotion.spring(style.x1.val, springConfig),\n      x2: reactMotion.spring(style.x2.val, springConfig),\n      y1: reactMotion.spring(style.y1.val, springConfig),\n      y2: reactMotion.spring(style.y2.val, springConfig)\n    };\n  };\n\n  GridLines.prototype.render = function render() {\n    var _props2 = this.props,\n        lines = _props2.lines,\n        animate = _props2.animate,\n        motionStiffness = _props2.motionStiffness,\n        motionDamping = _props2.motionDamping,\n        theme = _props2.theme;\n\n    if (!animate) {\n      return React__default.createElement('g', null, lines.map(function (line) {\n        return React__default.createElement(GridLine, _extends({\n          key: line.key\n        }, line, theme.grid.line));\n      }));\n    }\n\n    var springConfig = {\n      stiffness: motionStiffness,\n      damping: motionDamping\n    };\n    return React__default.createElement(reactMotion.TransitionMotion, {\n      willEnter: this.willEnter,\n      willLeave: this.willLeave,\n      styles: lines.map(function (line) {\n        return {\n          key: line.key,\n          style: {\n            opacity: reactMotion.spring(1, springConfig),\n            x1: reactMotion.spring(line.x1 || 0, springConfig),\n            x2: reactMotion.spring(line.x2 || 0, springConfig),\n            y1: reactMotion.spring(line.y1 || 0, springConfig),\n            y2: reactMotion.spring(line.y2 || 0, springConfig)\n          }\n        };\n      })\n    }, function (interpolatedStyles) {\n      return React__default.createElement('g', null, interpolatedStyles.map(function (interpolatedStyle) {\n        var key = interpolatedStyle.key,\n            style = interpolatedStyle.style;\n        return React__default.createElement(GridLine, _extends({\n          key: key\n        }, theme.grid.line, style));\n      }));\n    });\n  };\n\n  return GridLines;\n}(React.Component);\n\nGridLines.propTypes = {\n  type: PropTypes.oneOf(['x', 'y']).isRequired,\n  lines: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.string.isRequired,\n    x1: PropTypes.number,\n    x2: PropTypes.number,\n    y1: PropTypes.number,\n    y2: PropTypes.number\n  })).isRequired,\n  theme: PropTypes.object.isRequired,\n  animate: PropTypes.bool.isRequired,\n  motionStiffness: PropTypes.number.isRequired,\n  motionDamping: PropTypes.number.isRequired\n};\n\nvar Grid = function Grid(_ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      xScale = _ref.xScale,\n      yScale = _ref.yScale,\n      xValues = _ref.xValues,\n      yValues = _ref.yValues,\n      theme = _ref.theme,\n      animate = _ref.animate,\n      motionStiffness = _ref.motionStiffness,\n      motionDamping = _ref.motionDamping;\n  var xLines = xScale ? computeGridLines({\n    width: width,\n    height: height,\n    scale: xScale,\n    axis: 'x',\n    values: xValues\n  }) : false;\n  var yLines = yScale ? computeGridLines({\n    width: width,\n    height: height,\n    scale: yScale,\n    axis: 'y',\n    values: yValues\n  }) : false;\n  return React__default.createElement('g', null, xLines && React__default.createElement(GridLines, {\n    type: 'x',\n    lines: xLines,\n    theme: theme,\n    animate: animate,\n    motionStiffness: motionStiffness,\n    motionDamping: motionDamping\n  }), yLines && React__default.createElement(GridLines, {\n    type: 'y',\n    lines: yLines,\n    theme: theme,\n    animate: animate,\n    motionStiffness: motionStiffness,\n    motionDamping: motionDamping\n  }));\n};\n\nGrid.propTypes = _extends({\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  xScale: PropTypes.func,\n  yScale: PropTypes.func,\n  xValues: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n  yValues: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])),\n  theme: PropTypes.object.isRequired\n}, motionPropTypes);\nGrid.defaultProps = {\n  // motion\n  animate: true,\n  motionStiffness: defaultMotionStiffness,\n  motionDamping: defaultMotionDamping\n};\nvar Grid$1 = pure(Grid);\n/**\n *\n * @param {string} axis\n * @param {number} width\n * @param {number} height\n * @param {string} position\n * @param {number} offsetX\n * @param {number} offsetY\n * @param {string} orientation\n * @return {{ x: number, y: number, textAnchor: string }}\n */\n\nvar computeLabel = function computeLabel(_ref) {\n  var axis = _ref.axis,\n      width = _ref.width,\n      height = _ref.height,\n      position = _ref.position,\n      offsetX = _ref.offsetX,\n      offsetY = _ref.offsetY,\n      orientation = _ref.orientation;\n  var x = 0;\n  var y = 0;\n  var rotation = orientation === 'vertical' ? -90 : 0;\n  var textAnchor = 'start';\n\n  if (axis === 'x') {\n    switch (position) {\n      case 'top-left':\n        x = -offsetX;\n        y = offsetY;\n        textAnchor = 'end';\n        break;\n\n      case 'top':\n        y = -offsetY;\n\n        if (orientation === 'horizontal') {\n          textAnchor = 'middle';\n        } else {\n          textAnchor = 'start';\n        }\n\n        break;\n\n      case 'top-right':\n        x = offsetX;\n        y = offsetY;\n\n        if (orientation === 'horizontal') {\n          textAnchor = 'start';\n        } else {\n          textAnchor = 'end';\n        }\n\n        break;\n\n      case 'right':\n        x = offsetX;\n        y = height / 2;\n\n        if (orientation === 'horizontal') {\n          textAnchor = 'start';\n        } else {\n          textAnchor = 'middle';\n        }\n\n        break;\n\n      case 'bottom-right':\n        x = offsetX;\n        y = height - offsetY;\n        textAnchor = 'start';\n        break;\n\n      case 'bottom':\n        y = height + offsetY;\n\n        if (orientation === 'horizontal') {\n          textAnchor = 'middle';\n        } else {\n          textAnchor = 'end';\n        }\n\n        break;\n\n      case 'bottom-left':\n        y = height - offsetY;\n        x = -offsetX;\n\n        if (orientation === 'horizontal') {\n          textAnchor = 'end';\n        } else {\n          textAnchor = 'start';\n        }\n\n        break;\n\n      case 'left':\n        x = -offsetX;\n        y = height / 2;\n\n        if (orientation === 'horizontal') {\n          textAnchor = 'end';\n        } else {\n          textAnchor = 'middle';\n        }\n\n        break;\n    }\n  } else {\n    switch (position) {\n      case 'top-left':\n        x = offsetX;\n        y = -offsetY;\n        textAnchor = 'start';\n        break;\n\n      case 'top':\n        x = width / 2;\n        y = -offsetY;\n\n        if (orientation === 'horizontal') {\n          textAnchor = 'middle';\n        } else {\n          textAnchor = 'start';\n        }\n\n        break;\n\n      case 'top-right':\n        x = width - offsetX;\n        y = -offsetY;\n\n        if (orientation === 'horizontal') {\n          textAnchor = 'end';\n        } else {\n          textAnchor = 'start';\n        }\n\n        break;\n\n      case 'right':\n        x = width + offsetX;\n\n        if (orientation === 'horizontal') {\n          textAnchor = 'start';\n        } else {\n          textAnchor = 'middle';\n        }\n\n        break;\n\n      case 'bottom-right':\n        x = width - offsetX;\n        y = offsetY;\n        textAnchor = 'end';\n        break;\n\n      case 'bottom':\n        x = width / 2;\n        y = offsetY;\n\n        if (orientation === 'horizontal') {\n          textAnchor = 'middle';\n        } else {\n          textAnchor = 'end';\n        }\n\n        break;\n\n      case 'bottom-left':\n        x = offsetX;\n        y = offsetY;\n\n        if (orientation === 'horizontal') {\n          textAnchor = 'start';\n        } else {\n          textAnchor = 'end';\n        }\n\n        break;\n\n      case 'left':\n        x = -offsetX;\n\n        if (orientation === 'horizontal') {\n          textAnchor = 'end';\n        } else {\n          textAnchor = 'middle';\n        }\n\n        break;\n    }\n  }\n\n  return {\n    x: x,\n    y: y,\n    rotation: rotation,\n    textAnchor: textAnchor\n  };\n};\n\nvar CartesianMarkersItem = function CartesianMarkersItem(_ref2) {\n  var width = _ref2.width,\n      height = _ref2.height,\n      axis = _ref2.axis,\n      scale = _ref2.scale,\n      value = _ref2.value,\n      theme = _ref2.theme,\n      lineStyle = _ref2.lineStyle,\n      textStyle = _ref2.textStyle,\n      legend = _ref2.legend,\n      legendPosition = _ref2.legendPosition,\n      legendOffsetX = _ref2.legendOffsetX,\n      legendOffsetY = _ref2.legendOffsetY,\n      legendOrientation = _ref2.legendOrientation;\n  var x = 0;\n  var x2 = 0;\n  var y = 0;\n  var y2 = 0;\n\n  if (axis === 'y') {\n    y = scale(value);\n    x2 = width;\n  } else {\n    x = scale(value);\n    y2 = height;\n  }\n\n  var legendNode = null;\n\n  if (legend) {\n    var legendProps = computeLabel({\n      axis: axis,\n      width: width,\n      height: height,\n      position: legendPosition,\n      offsetX: legendOffsetX,\n      offsetY: legendOffsetY,\n      orientation: legendOrientation\n    });\n    legendNode = React__default.createElement('text', {\n      transform: 'translate(' + legendProps.x + ', ' + legendProps.y + ') rotate(' + legendProps.rotation + ')',\n      textAnchor: legendProps.textAnchor,\n      alignmentBaseline: 'central',\n      style: textStyle\n    }, legend);\n  }\n\n  return React__default.createElement('g', {\n    transform: 'translate(' + x + ', ' + y + ')'\n  }, React__default.createElement('line', {\n    x1: 0,\n    x2: x2,\n    y1: 0,\n    y2: y2,\n    stroke: theme.markers.lineColor,\n    strokeWidth: theme.markers.lineStrokeWidth,\n    style: lineStyle\n  }), legendNode);\n};\n\nCartesianMarkersItem.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  axis: PropTypes.oneOf(['x', 'y']).isRequired,\n  scale: PropTypes.func.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  lineStyle: PropTypes.object,\n  textStyle: PropTypes.object,\n  legend: PropTypes.string,\n  legendPosition: PropTypes.oneOf(['top-left', 'top', 'top-right', 'right', 'bottom-right', 'bottom', 'bottom-left', 'left']),\n  legendOffsetX: PropTypes.number.isRequired,\n  legendOffsetY: PropTypes.number.isRequired,\n  legendOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  theme: PropTypes.shape({\n    markers: PropTypes.shape({\n      textColor: PropTypes.string.isRequired,\n      fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n    }).isRequired\n  }).isRequired\n};\nCartesianMarkersItem.defaultProps = {\n  legendPosition: 'top-right',\n  legendOffsetX: 14,\n  legendOffsetY: 14,\n  legendOrientation: 'horizontal'\n};\nvar CartesianMarkersItem$1 = pure(CartesianMarkersItem);\n\nvar CartesianMarkers = function CartesianMarkers(_ref) {\n  var markers = _ref.markers,\n      width = _ref.width,\n      height = _ref.height,\n      xScale = _ref.xScale,\n      yScale = _ref.yScale,\n      theme = _ref.theme;\n  if (!markers || markers.length === 0) return null;\n  return React__default.createElement('g', null, markers.map(function (marker, i) {\n    return React__default.createElement(CartesianMarkersItem$1, _extends({\n      key: i\n    }, marker, {\n      width: width,\n      height: height,\n      scale: marker.axis === 'y' ? yScale : xScale,\n      theme: theme\n    }));\n  }));\n};\n\nCartesianMarkers.propTypes = {\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  xScale: PropTypes.func.isRequired,\n  yScale: PropTypes.func.isRequired,\n  theme: PropTypes.shape({\n    markers: PropTypes.shape({\n      lineColor: PropTypes.string.isRequired,\n      lineStrokeWidth: PropTypes.number.isRequired,\n      textColor: PropTypes.string.isRequired,\n      fontSize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired\n    }).isRequired\n  }).isRequired,\n  markers: PropTypes.arrayOf(PropTypes.shape({\n    axis: PropTypes.oneOf(['x', 'y']).isRequired,\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    lineStyle: PropTypes.object,\n    textStyle: PropTypes.object\n  }))\n};\nvar CartesianMarkers$1 = pure(CartesianMarkers);\n/**\n * Computes distance between two points.\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\n\nvar getDistance = function getDistance(x1, y1, x2, y2) {\n  var deltaX = x2 - x1;\n  var deltaY = y2 - y1;\n  deltaX *= deltaX;\n  deltaY *= deltaY;\n  return Math.sqrt(deltaX + deltaY);\n};\n/**\n * Computes angle (radians) between two points.\n *\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n * @return {number}\n */\n\n\nvar getAngle = function getAngle(x1, y1, x2, y2) {\n  var angle = Math.atan2(y2 - y1, x2 - x1) - Math.PI / 2;\n  return angle > 0 ? angle : Math.PI * 2 + angle;\n};\n/**\n * Check if cursor is in given rectangle.\n *\n * @param {number} x\n * @param {number} y\n * @param {number} width\n * @param {number} height\n * @param {number} cursorX\n * @param {number} cursorY\n * @return {boolean}\n */\n\n\nvar isCursorInRect = function isCursorInRect(x, y, width, height, cursorX, cursorY) {\n  return x <= cursorX && cursorX <= x + width && y <= cursorY && cursorY <= y + height;\n};\n/**\n * Check if cursor is in given ring.\n *\n * @param {number} centerX\n * @param {number} centerY\n * @param {number} radius\n * @param {number} innerRadius\n * @param {number} cursorX\n * @param {number} cursorY\n * @return {boolean}\n */\n\n\nvar isCursorInRing = function isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY) {\n  var distance = getDistance(cursorX, cursorY, centerX, centerY);\n  return distance < radius && distance > innerRadius;\n};\n/**\n * Search for an arc being under cursor.\n *\n * @param {number}         centerX\n * @param {number}         centerY\n * @param {number}         radius\n * @param {number}         innerRadius\n * @param {Array.<Object>} arcs\n * @param {number}         cursorX\n * @param {number}         cursorY\n * @return {*}\n */\n\n\nvar getHoveredArc = function getHoveredArc(centerX, centerY, radius, innerRadius, arcs, cursorX, cursorY) {\n  if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) return null;\n  var cursorAngle = getAngle(cursorX, cursorY, centerX, centerY);\n  return arcs.find(function (_ref) {\n    var startAngle = _ref.startAngle,\n        endAngle = _ref.endAngle;\n    return cursorAngle >= startAngle && cursorAngle < endAngle;\n  });\n};\n\nvar getRelativeCursor = function getRelativeCursor(el, event) {\n  var clientX = event.clientX,\n      clientY = event.clientY;\n  var bounds = el.getBoundingClientRect();\n  return [clientX - bounds.left, clientY - bounds.top];\n};\n\nvar horizontalPositions$2 = ['top', 'bottom'];\nvar positions$1 = ['top', 'right', 'bottom', 'left'];\n\nvar renderAxisToCanvas = function renderAxisToCanvas(ctx, _ref) {\n  var width = _ref.width,\n      height = _ref.height,\n      position = _ref.position,\n      scale = _ref.scale,\n      _ref$tickSize = _ref.tickSize,\n      tickSize = _ref$tickSize === undefined ? 5 : _ref$tickSize,\n      _ref$tickPadding = _ref.tickPadding,\n      tickPadding = _ref$tickPadding === undefined ? 5 : _ref$tickPadding,\n      _ref$tickRotation = _ref.tickRotation,\n      tickRotation = _ref$tickRotation === undefined ? 0 : _ref$tickRotation,\n      format = _ref.format,\n      theme = _ref.theme;\n\n  var _computeAxisTicks = computeAxisTicks({\n    width: width,\n    height: height,\n    position: position,\n    scale: scale,\n    tickSize: tickSize,\n    tickPadding: tickPadding,\n    tickRotation: tickRotation,\n    engine: 'canvas'\n  }),\n      x = _computeAxisTicks.x,\n      y = _computeAxisTicks.y,\n      ticks = _computeAxisTicks.ticks,\n      textAlign = _computeAxisTicks.textAlign,\n      textBaseline = _computeAxisTicks.textBaseline;\n\n  ctx.save();\n  ctx.translate(x, y);\n  ctx.textAlign = textAlign;\n  ctx.textBaseline = textBaseline;\n  ctx.font = theme.axis.ticks.text.fontSize + 'px sans-serif';\n  ticks.forEach(function (tick) {\n    ctx.lineWidth = theme.axis.ticks.line.strokeWidth;\n    ctx.strokeStyle = theme.axis.ticks.line.stroke;\n    ctx.beginPath();\n    ctx.moveTo(tick.x, tick.y);\n    ctx.lineTo(tick.x + tick.lineX, tick.y + tick.lineY);\n    ctx.stroke();\n    var value = format !== undefined ? format(tick.value) : tick.value;\n    ctx.save();\n    ctx.translate(tick.x + tick.textX, tick.y + tick.textY);\n    ctx.rotate(degreesToRadians(tickRotation));\n    ctx.fillStyle = theme.axis.ticks.text.fill;\n    ctx.fillText(value, 0, 0);\n    ctx.restore();\n  });\n  ctx.restore();\n};\n\nvar renderAxesToCanvas = function renderAxesToCanvas(ctx, _ref2) {\n  var xScale = _ref2.xScale,\n      yScale = _ref2.yScale,\n      width = _ref2.width,\n      height = _ref2.height,\n      top = _ref2.top,\n      right = _ref2.right,\n      bottom = _ref2.bottom,\n      left = _ref2.left,\n      theme = _ref2.theme;\n  var axes = {\n    top: top,\n    right: right,\n    bottom: bottom,\n    left: left\n  };\n  positions$1.map(function (position) {\n    if (!axes[position]) return null;\n    var axis = axes[position];\n    var scale = horizontalPositions$2.includes(position) ? xScale : yScale;\n    renderAxisToCanvas(ctx, _extends({}, axis, {\n      width: width,\n      height: height,\n      position: position,\n      scale: scale,\n      theme: theme\n    }));\n  });\n};\n/**\n * @param {CanvasRenderingContext2D} ctx\n * @param {number}                   width\n * @param {number}                   height\n * @param {number}                   scale\n * @param {('x'|'y')}                axis\n */\n\n\nvar renderGridLinesToCanvas = function renderGridLinesToCanvas(ctx, _ref3) {\n  var width = _ref3.width,\n      height = _ref3.height,\n      scale = _ref3.scale,\n      axis = _ref3.axis;\n  var lines = computeGridLines({\n    width: width,\n    height: height,\n    scale: scale,\n    axis: axis\n  });\n  lines.forEach(function (line) {\n    ctx.beginPath();\n    ctx.moveTo(line.x1, line.y1);\n    ctx.lineTo(line.x2, line.y2);\n    ctx.stroke();\n  });\n};\n\nvar gradientKeys = Object.keys(gradientTypes);\nvar patternKeys = Object.keys(patternTypes);\n/**\n * Check a node matches given def predicate.\n *\n * @param {string|Function|Object} predicate\n * @param {Object}                 node\n * @param {string}                 [dataKey] - Optional path to access node data\n * @returns {boolean}\n */\n\nvar isMatchingDef = function isMatchingDef(predicate, node, dataKey) {\n  if (predicate === '*') {\n    return true;\n  } else if (isFunction(predicate)) {\n    return predicate(node);\n  } else if (isPlainObject(predicate)) {\n    var data = dataKey ? get(node, dataKey) : node;\n    return isEqual(pick(data, Object.keys(predicate)), predicate);\n  }\n\n  return false;\n};\n/**\n * Compute SVG defs.\n *\n * @param {Array.<Object>} defs               - Base SVG defs configs\n * @param {Array.<Object>} nodes              - Data nodes to apply defs on\n * @param {Array.<Object>} rules              - Rules used to conditionally apply defs on data nodes\n * @param {string}         [dataKey]          - Path to node data, used for rule object query based predicate\n * @param {string}         [colorKey='color'] - Node color path, required when inheritance is involved\n * @param {string}         [targetKey='fill'] - Node target property to apply def ID on\n * @returns {Array}\n */\n\n\nvar bindDefs = function bindDefs(defs, nodes, rules) {\n  var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      dataKey = _ref.dataKey,\n      _ref$colorKey = _ref.colorKey,\n      colorKey = _ref$colorKey === undefined ? 'color' : _ref$colorKey,\n      _ref$targetKey = _ref.targetKey,\n      targetKey = _ref$targetKey === undefined ? 'fill' : _ref$targetKey;\n\n  var boundDefs = []; // will hold generated variation ids,\n  // to avoid generating multiple identical defs\n\n  var generatedIds = {};\n\n  if (defs.length && nodes.length) {\n    // first, add base defs\n    boundDefs = [].concat(defs);\n    nodes.forEach(function (node) {\n      var _loop = function _loop(i) {\n        var _rules$i = rules[i],\n            id = _rules$i.id,\n            match = _rules$i.match;\n\n        if (isMatchingDef(match, node, dataKey)) {\n          var def = defs.find(function (_ref2) {\n            var defId = _ref2.id;\n            return defId === id;\n          });\n\n          if (def) {\n            if (patternKeys.includes(def.type)) {\n              if (def.background === 'inherit' || def.color === 'inherit') {\n                var nodeColor = get(node, colorKey);\n                var background = def.background;\n                var color = def.color;\n                var inheritedId = id;\n\n                if (def.background === 'inherit') {\n                  inheritedId = inheritedId + '.bg.' + nodeColor;\n                  background = nodeColor;\n                }\n\n                if (def.color === 'inherit') {\n                  inheritedId = inheritedId + '.fg.' + nodeColor;\n                  color = nodeColor;\n                }\n\n                set(node, targetKey, 'url(#' + inheritedId + ')');\n\n                if (!generatedIds[inheritedId]) {\n                  boundDefs.push(_extends({}, def, {\n                    id: inheritedId,\n                    background: background,\n                    color: color\n                  }));\n                  generatedIds[inheritedId] = 1;\n                }\n              } else {\n                // do not generate new def as there's no inheritance involved\n                set(node, targetKey, 'url(#' + id + ')');\n              }\n            } else if (gradientKeys.includes(def.type)) {\n              var allColors = def.colors.map(function (_ref3) {\n                var color = _ref3.color;\n                return color;\n              });\n\n              if (allColors.includes('inherit')) {\n                var _nodeColor = get(node, colorKey);\n\n                var _inheritedId = id;\n\n                var inheritedDef = _extends({}, def, {\n                  colors: def.colors.map(function (colorStop, i) {\n                    if (colorStop.color !== 'inherit') return colorStop;\n                    _inheritedId = _inheritedId + '.' + i + '.' + _nodeColor;\n                    return _extends({}, colorStop, {\n                      color: colorStop.color === 'inherit' ? _nodeColor : colorStop.color\n                    });\n                  })\n                });\n\n                inheritedDef.id = _inheritedId;\n                set(node, targetKey, 'url(#' + _inheritedId + ')');\n\n                if (!generatedIds[_inheritedId]) {\n                  boundDefs.push(inheritedDef);\n                  generatedIds[_inheritedId] = 1;\n                }\n              } else {\n                // do not generate new def as there's no inheritance involved\n                set(node, targetKey, 'url(#' + id + ')');\n              }\n            }\n          } // break loop on first match\n\n\n          return 'break';\n        }\n      };\n\n      for (var i = 0; i < rules.length; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === 'break') break;\n      }\n    });\n  }\n\n  return boundDefs;\n};\n\nexports.Container = Container;\nexports.ResponsiveWrapper = ResponsiveWrapper;\nexports.SvgWrapper = SvgWrapper;\nexports.SmartMotion = SmartMotion;\nexports.noop = noop;\nexports.DotsItem = DotsItem$1;\nexports.DotsItemDefaultProps = DotsItemDefaultProps;\nexports.gradientTypes = gradientTypes;\nexports.LinearGradient = LinearGradient;\nexports.linearGradientDef = linearGradientDef;\nexports.patternTypes = patternTypes;\nexports.PatternDots = PatternDots;\nexports.patternDotsDef = patternDotsDef;\nexports.PatternLines = PatternLines;\nexports.patternLinesDef = patternLinesDef;\nexports.PatternSquares = PatternSquares;\nexports.patternSquaresDef = patternSquaresDef;\nexports.defsMapping = defsMapping;\nexports.Defs = Defs;\nexports.BasicTooltip = BasicTooltip$1;\nexports.Chip = Chip$1;\nexports.TableTooltip = TableTooltip$1;\nexports.Axis = Axis$1;\nexports.Axes = Axes$1;\nexports.Grid = Grid$1;\nexports.CartesianMarkers = CartesianMarkers$1;\nexports.CartesianMarkersItem = CartesianMarkersItem$1;\nexports.withColors = withColors;\nexports.withCurve = withCurve;\nexports.withDimensions = withDimensions;\nexports.withHierarchy = withHierarchy;\nexports.withMotion = withMotion;\nexports.withTheme = withTheme;\nexports.getLabelGenerator = getLabelGenerator;\nexports.getAccessorFor = getAccessorFor;\nexports.getAccessorOrValue = getAccessorOrValue;\nexports.scalePropType = scalePropType;\nexports.marginPropType = marginPropType;\nexports.motionPropTypes = motionPropTypes;\nexports.blendModePropType = blendModePropType;\nexports.quantizeColorScalePropType = quantizeColorScalePropType;\nexports.curvePropMapping = curvePropMapping;\nexports.curvePropKeys = curvePropKeys;\nexports.curvePropType = curvePropType;\nexports.closedCurvePropKeys = closedCurvePropKeys;\nexports.closedCurvePropType = closedCurvePropType;\nexports.areaCurvePropKeys = areaCurvePropKeys;\nexports.areaCurvePropType = areaCurvePropType;\nexports.lineCurvePropKeys = lineCurvePropKeys;\nexports.lineCurvePropType = lineCurvePropType;\nexports.curveFromProp = curveFromProp;\nexports.defsPropTypes = defsPropTypes;\nexports.stackOrderPropMapping = stackOrderPropMapping;\nexports.stackOrderPropKeys = stackOrderPropKeys;\nexports.stackOrderPropType = stackOrderPropType;\nexports.stackOrderFromProp = stackOrderFromProp;\nexports.stackOffsetPropMapping = stackOffsetPropMapping;\nexports.stackOffsetPropKeys = stackOffsetPropKeys;\nexports.stackOffsetPropType = stackOffsetPropType;\nexports.stackOffsetFromProp = stackOffsetFromProp;\nexports.treeMapTilePropMapping = treeMapTilePropMapping;\nexports.treeMapTilePropKeys = treeMapTilePropKeys;\nexports.treeMapTilePropType = treeMapTilePropType;\nexports.treeMapTileFromProp = treeMapTileFromProp;\nexports.colorSchemes = colorSchemes;\nexports.colorSchemeIds = colorSchemeIds;\nexports.colorInterpolators = colorInterpolators;\nexports.colorInterpolatorIds = colorInterpolatorIds;\nexports.nivoCategoricalColors = nivoCategoricalColors;\nexports.getColorRange = getColorRange;\nexports.getColorScale = getColorScale;\nexports.getColorsGenerator = getColorsGenerator;\nexports.getInheritedColorGenerator = getInheritedColorGenerator;\nexports.colorMotionSpring = colorMotionSpring;\nexports.getInterpolatedColor = getInterpolatedColor;\nexports.quantizeColorScales = quantizeColorScales;\nexports.quantizeColorScalesKeys = quantizeColorScalesKeys;\nexports.guessQuantizeColorScale = guessQuantizeColorScale;\nexports.TWO_PI = TWO_PI;\nexports.degreesToRadians = degreesToRadians;\nexports.radiansToDegrees = radiansToDegrees;\nexports.midAngle = midAngle;\nexports.positionFromAngle = positionFromAngle;\nexports.absoluteAngleDegrees = absoluteAngleDegrees;\nexports.absoluteAngleRadians = absoluteAngleRadians;\nexports.computeArcBoundingBox = computeArcBoundingBox;\nexports.getPolarLabelProps = getPolarLabelProps;\nexports.getRelativeCursor = getRelativeCursor;\nexports.getDistance = getDistance;\nexports.getAngle = getAngle;\nexports.isCursorInRect = isCursorInRect;\nexports.isCursorInRing = isCursorInRing;\nexports.getHoveredArc = getHoveredArc;\nexports.renderAxisToCanvas = renderAxisToCanvas;\nexports.renderAxesToCanvas = renderAxesToCanvas;\nexports.renderGridLinesToCanvas = renderGridLinesToCanvas;\nexports.isMatchingDef = isMatchingDef;\nexports.bindDefs = bindDefs;\nexports.textPropsByEngine = textPropsByEngine;\nexports.axisThemePropType = axisThemePropType;\nexports.gridThemePropType = gridThemePropType;\nexports.legendsThemePropType = legendsThemePropType;\nexports.labelsThemePropType = labelsThemePropType;\nexports.dotsThemePropType = dotsThemePropType;\nexports.themePropType = themePropType;\nexports.defaultTheme = defaultTheme;\nexports.defaultAnimate = defaultAnimate;\nexports.defaultMotionStiffness = defaultMotionStiffness;\nexports.defaultMotionDamping = defaultMotionDamping;\nexports.defaultCategoricalColors = defaultCategoricalColors;\nexports.defaultColorRange = defaultColorRange;\nexports.defaultMargin = defaultMargin;"],"sourceRoot":""}
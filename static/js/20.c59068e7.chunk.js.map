{"version":3,"sources":["actions/api/logs.js","constants/api/logs.js","components/project/Modals/LogsModal/LogsShowing.js","actions/api/import.js","constants/api/import.js","actions/modals/projects.js","actions/modals/folders.js","components/home/Modals/ModalForm/index.js","components/home/Modals/FolderModal/CreateModal.js","components/home/Modals/FolderModal/EditModal.js","components/home/Modals/FolderModal/DeleteModal.js","components/home/Modals/FolderModal/index.js","components/home/Modals/ProjectModal/CreateModal.js","components/home/Modals/ModalFormProject/index.js","components/home/Modals/ProjectModal/EditModal.js","components/home/Modals/ProjectModal/DeleteModal.js","components/home/Modals/ProjectModal/index.js","components/home/Modals/InvitationModal/AcceptModal.js","components/home/Modals/InvitationModal/index.js","components/home/Modals/index.js","components/home/FoldersContainer/ProjectsItem.js","components/home/FoldersContainer/ProjectsContainer.js","components/home/FoldersContainer/FoldersItem.js","components/home/FoldersContainer/index.js","components/home/LikesContainer/ProjectsItem.js","components/home/LikesContainer/index.js","components/home/index.js","routes/home/index.js","actions/api/projects.js","actions/api/boards.js","actions/api/folders.js","components/lib/ExpansionPanel/index.js","actions/modals/invitations.js","actions/modals/logs.js","actions/api/export.js","constants/api/export.js"],"names":["fetchGetLogs","id","n","type","fetch","url","concat","params","method","queryParams","page","LogsShowing","props","_this","Object","classCallCheck","this","_super","call","state","logs","hasMoreItems","loading","oldDate","moment","isFetching","first","projectId","handleClose","bind","assertThisInitialized","fetchPage","setState","_this2","then","prevState","newLogs","JSON","parse","stringify","Boolean","body","length","tmpDate","forEach","l","logDate","created_at","isBefore","push","catch","e","toggleShowLogs","_this3","_this$props","classes","isModal","selectedLanguage","userId","locale","title","react_default","a","createElement","Typography_default","className","heading","language","home","activity","loader","key","items","name","msg","img","react","log","style","backgroundColor","message","info","obj","i","m","image","str","truncateString","leftBlock","display","flexDirection","width","alt","customIcon","src","BlankProfile","description","dangerouslySetInnerHTML","__html","rightBlock","date","fromNow","loadingItem","alignItems","justifyContent","minWidth","minHeight","CircularProgress","position","activities","overflowY","height","overflowX","ref","scrollParentRef","react_infinite_scroller_default","pageStart","loadMore","hasMore","getScrollParent","threshold","useWindow","Dialog","open","onClose","clickClose","onExited","contentStyle","padding","container","margin","noActivities","Component","connect","modal","selectedProject","user","auth","dispatch","bindActionCreators","withStyles","theme","flex","maxWidth","color","fontWeight","fontSize","typography","pxToRem","marginTop","borderTop","textAlign","float","marginLeft","border-radius","__webpack_require__","d","__webpack_exports__","import_fetchImportBoard","import_fetchImportProject","fetchImportBoard","fileName","project_id","file_name","fetchImportProject","toggleCreateProjectForm","folderId","TOGGLE_CREATE_MODAL_PROJECT","payload","toggleEditProjectForm","TOGGLE_EDIT_MODAL_PROJECT","toggleDeleteProjectForm","TOGGLE_DELETE_MODAL_PROJECT","toggleCreateFolderForm","TOGGLE_CREATE_MODAL_FOLDER","toggleEditFolderForm","TOGGLE_EDIT_MODAL_FOLDER","toggleDeleteFolderForm","TOGGLE_DELETE_MODAL_FOLDER","ModalForm","oldValue","onSubmit","nameChange","event","stopPropagation","value","footer","PrimaryButton","onClick","toUpperCase","Form","TextField","onChange","fullWidth","label","required","autoFocus","app","CreateModal","handleCloseFolder","handleCreateSubmit","preventDefault","newName","trim","fetchCreateFolder","response","ok","notifySuccess","notifyError","Modals_ModalForm","EditModal","handleEditSubmit","folder","fetchUpdateFolder","ownProps","oneFolder","DeleteForm","handleSubmit","fetchDeleteFolder","marginRight","hideClose","folderCreating","folders","folderEditing","folderDeleting","_ref","FolderModal_CreateModal","FolderModal_EditModal","DeleteModal","handleCloseProject","projectTotal","maxProjects","fetchCreateProject","folder_id","projects","selectedFolder","projectCount","Number","filter","f","oldFolder","folderChange","target","project","newFolder","fetchUpdateProject","old_folder_id","new_folder_id","_this$props2","ModalFormProject","oneProjectFormModal","allFolders","fetchDeleteProject","modals","projectDeleted","deleteProject","no","yes","sureDeleteProject","defaultProps","projectCreating","projectEditing","projectDeleting","ProjectModal_CreateModal","ProjectModal_EditModal","ProjectModal_DeleteModal","AcceptModal","handleCloseAccept","toggleAcceptInvitationForm","fetchAcceptInvitation","invitationId","submit","onEnter","handleEnter","FormControl_default","InputLabel_default","htmlFor","Select_default","input","Input_default","map","MenuItem_default","invitations","selectedInvitation","invitationAccepting","InvitationModal_AcceptModal","Modals","FolderModal","ProjectModal","InvitationModal","ProjectsItem","makeFavorite","handleEditProject","handleDeleteProject","fetchUpdateFavorite","boardCount","react_beautiful_dnd_esm","draggableId","provided","snapshot","assign","innerRef","draggableProps","dragHandleProps","isDragging","Grid_default","direction","root","FileCopy_default","fileIcon","Link","to","textDecoration","Tooltip_default","placement","subtitle","oneBoard","boards","grow","role","editName","Edit_default","icon","Divider_default","iconDivider","DeleteOutlined_default","is_favorite","removeFavorites","Favorite_default","heartIcon","addToFavorites","FavoriteBorder_default","dragOn","boardCountByProject","alignSelf","cursor","&:hover","marginBottom","flexGrow","dropdownIcon","iconFav","projectsByFolder","o","FoldersContainer_ProjectsItem","favorite","FoldersItem","handleCreateProject","handleEditFolder","handleDeleteFolder","handleExpand","expanded","canNotRemoveFolder","droppableId","providedTask","snapshotTask","droppableProps","droppablePlaceholder","ExpansionPanel","summaryStyle","isDraggingOver","summary","projectContainer","Folder_default","folderIcon","createProject","onKeyPress","addIcon","Add_default","editFolder","deleteFolder","item","FoldersContainer_ProjectsContainer","emptyText","empty","placeholder","projectCountByFolder","FoldersContainer","onDragEnd","result","source","destination","defaultFolder","find","FoldersContainer_FoldersItem","isHovering","showActivity","changeHoverProject","onSelect","selected","langDict","overTitle","titleFav","hideActivity","History_default","projectActivity","handleSelectProject","favoriteProjects","LikesContainer_ProjectsItem","warning","noFavoriteProjects","allProjects","Home","handleAddFolder","handleAddProject","handleDownloadProjects","handleUploadProject","fetchExportProjectsUser","status","element","document","json","file","Blob","href","URL","createObjectURL","download","appendChild","click","fileReader","FileReader","readAsText","files","onload","console","uploadComplete","hoverId","home_Modals","justify","Button_default","size","addFolderButton","addFolderText","addFolder","addProject","CloudDownload_default","downloadProjects","accept","component","CloudUpload_default","uploadProjects","home_FoldersContainer","LikesContainer","noProjectSelected","paddingBottom","borderColor","border","borderRadius","unselectAll","Promise","all","fetchGetFolders","fetchGetProjects","fetchGetBoards","responses","fetchGetProject","FETCH_GET_PROJECT","FETCH_GET_ALL_PROJECTS","FETCH_CREATE_PROJECT","FETCH_DELETE_PROJECT","FETCH_UPDATE_PROJECT","fetchUpdateProjectOrder","FETCH_UPDATE_PROJECT_ORDER","FETCH_UPDATE_PROJECT_FAVORITE","fetchGithubConnect","FETCH_GITHUB_CONNECT","githubConfirmation","FETCH_GITHUB_CONFIRMATION","fetchGithubRepo","FETCH_GITHUB_REPO","fetchProjectRepo","FETCH_PROJECT_REPO","fetchGithubRemove","FETCH_GITHUB_REMOVE","fetchProjectRepoAssign","FETCH_PROJECT_REPO_ASSIGN","fetchProjectRepoUnassign","repoId","FETCH_PROJECT_REPO_UNASSIGN","fetchGetTasksProject","FETCH_TASKS_PROJECT_BETWEEN_DATES","_Users_carlosjouanne_Desktop_T2_2021_2_S4_Grupo1_Web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fetchCreateBoard","FETCH_CREATE_BOARD","fetchGetProjectBoards","FETCH_GET_ALL_PROJECT_BOARDS","FETCH_GET_ALL_BOARDS","fetchUpdateBoard","FETCH_UPDATE_BOARD","fetchDeleteBoard","FETCH_DELETE_BOARD","fetchGetReportedTasksBoard","FETCH_REPORTED_TASKS_BETWEEN_DATES","fetchGetTasksBoard","FETCH_TASKS_BETWEEN_DATES","_constants_api_folders__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_ALL_FOLDERS","FETCH_CREATE_FOLDER","FETCH_DELETE_FOLDER","FETCH_UPDATE_FOLDER","children","headerColor","_Users_carlosjouanne_Desktop_T2_2021_2_S4_Grupo1_Web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","_material_ui_core_ExpansionPanel__WEBPACK_IMPORTED_MODULE_3___default","materialPanel","_material_ui_core_ExpansionPanelSummary__WEBPACK_IMPORTED_MODULE_4___default","expandIcon","_material_ui_icons_ExpandMore__WEBPACK_IMPORTED_MODULE_7___default","materialRoot","content","marterialeExpanded","_material_ui_core_Divider__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_ExpansionPanelDetails__WEBPACK_IMPORTED_MODULE_5___default","maxHeight","boxShadow","toggleSendInvitationForm","toggleEditInvitationForm","_constants_modals_invitations__WEBPACK_IMPORTED_MODULE_0__","TOGGLE_ACCEPT_MODAL_INVITATION","TOGGLE_SEND_MODAL_INVITATION","TOGGLE_EDIT_MODAL_INVITATION","_constants_modals_logs__WEBPACK_IMPORTED_MODULE_0__","TOGGLE_SHOW_MODAL_LOGS","LAST_HOVER_PROJECT","export_fetchExportBoard","export_fetchExportProject","export_fetchExportProjectsUser","fetchExportBoard","boardId","board_id","fetchExportProject"],"mappings":"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","file":"static/js/20.c59068e7.chunk.js","sourcesContent":["import {\n  FETCH_GET_ALL_N_LOGS,\n} from '../../constants/api/logs';\n\nconst fetchGetLogs = (id, n) => ({\n  type: FETCH_GET_ALL_N_LOGS,\n  fetch: true,\n  url: `/projects/${id}/records`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    page: n,\n  },\n});\n\nexport default fetchGetLogs;\n","/* eslint-disable import/prefer-default-export */\nexport const FETCH_GET_ALL_N_LOGS = 'FETCH_GET_ALL_N_LOGS';\n","import React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport moment from 'moment';\nimport 'moment/locale/es';\n\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport { truncateString } from '../../../../utils';\n\nimport Dialog from '../../../lib/Dialog';\nimport CircularProgress from '../../../lib/CircularProgress';\n\nimport toggleShowLogs from '../../../../actions/modals/logs';\nimport fetchGetLogs from '../../../../actions/api/logs';\nimport BlankProfile from '../../../../assets/blankprofile.png';\nimport language from '../../../../constants/language';\n\n/* eslint-disable react/no-unused-state, no-unused-vars, max-len, react/no-did-update-set-state */\nconst styles = theme => ({\n  container: {\n    container: {\n      backgroundColor: 'white',\n      flex: 1,\n      maxWidth: '50%',\n    },\n  },\n  title: {\n    color: '#2a3d41',\n    fontWeight: 'bold',\n    fontSize: 16,\n    margin: '20px 0px',\n  },\n  heading: {\n    color: '#2a3d41',\n    fontSize: theme.typography.pxToRem(19),\n    fontWeight: 'bold',\n    margin: 0,\n    marginTop: 4,\n  },\n  log: {\n    borderTop: '1px solid #ccc',\n    width: '95%',\n    minWidth: '360px',\n    margin: 0,\n    padding: 20,\n  },\n  info: {\n    margin: 0,\n  },\n  loading: {\n    textAlign: 'center',\n    color: '#2a3d41',\n    fontSize: theme.typography.pxToRem(12),\n    marginTop: 10,\n  },\n  rightBlock: {\n    display: 'inline-block',\n    float: 'right',\n  },\n  leftBlock: {\n    display: 'inline-block',\n    color: '#2a3d41',\n  },\n  img: {\n    display: 'inline-block',\n  },\n  name: {\n    fontSize: theme.typography.pxToRem(14),\n    fontWeight: 'bold',\n    display: 'inline-block',\n    marginTop: 3,\n    marginLeft: 10,\n  },\n  description: {\n    fontSize: theme.typography.pxToRem(12),\n  },\n  date: {\n    color: '#2a3d41',\n    fontSize: theme.typography.pxToRem(11),\n  },\n  customIcon: {\n    height: '24px',\n    width: '24px',\n    display: 'block',\n    'border-radius': '50%',\n  },\n});\n\nclass LogsShowing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logs: [],\n      hasMoreItems: true,\n      loading: true,\n      oldDate: moment(),\n      isFetching: false,\n      first: true,\n      projectId: '',\n    };\n    this.handleClose = this.handleClose.bind(this);\n    this.fetchPage = this.fetchPage.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ projectId: this.props.projectId });\n    this.fetchPage(1);\n  }\n\n  componentDidUpdate() {\n    if (this.state.projectId !== this.props.projectId) {\n      this.setState({\n        projectId: this.props.projectId,\n        logs: [],\n        hasMoreItems: true,\n        loading: true,\n        oldDate: moment(),\n        isFetching: false,\n        first: true,\n      });\n      this.fetchPage(1);\n    }\n  }\n\n  fetchPage(n) {\n    this.setState({ isFetching: true });\n    this.props.fetchGetLogs(this.props.projectId, n).then((logs) => {\n      this.setState((prevState) => {\n        const newLogs = JSON.parse(JSON.stringify(prevState.logs));\n        const hasMoreItems = Boolean(logs.body.length);\n        const loading = prevState.loading ? !prevState.loading : prevState.loading;\n        const first = prevState.first ? !prevState.first : prevState.first;\n        const { oldDate } = prevState;\n        let tmpDate = prevState.oldDate;\n        logs.body.forEach((l) => {\n          const logDate = moment(l.created_at);\n          if (logDate.isBefore(oldDate)) {\n            newLogs.push(l);\n          }\n          if (logDate.isBefore(tmpDate)) {\n            tmpDate = logDate;\n          }\n        });\n        return {\n          logs: newLogs, hasMoreItems, loading, oldDate: tmpDate, first,\n        };\n      });\n      this.setState({ isFetching: false });\n    }).catch(e => this.setState({ isFetching: false }));\n  }\n\n  handleClose() {\n    this.props.toggleShowLogs();\n  }\n\n  render() {\n    const {\n      classes,\n      isModal,\n      selectedLanguage,\n      userId,\n    } = this.props;\n    moment.locale(selectedLanguage);\n    const title = (\n      <Typography className={classes.heading}>\n        {language[selectedLanguage].home.activity}\n      </Typography>\n    );\n    const loader = (\n      <Typography key=\"loading\" className={classes.loading}>\n        {language[selectedLanguage].home.loading}...\n      </Typography>\n    );\n    const items = [];\n    this.state.logs.forEach((l) => {\n      let name = '';\n      let msg = '';\n      let img = '';\n      items.push(\n        <Fragment key={l.created_at}>\n          <div\n            className={classes.log}\n            style={{ backgroundColor: l.message[0].id === userId ? '#ea5941B0' : 'white' }}\n          >\n            <div className={classes.info}>\n              {\n                l.message.forEach((obj, i) => {\n                  let m = obj;\n                  if (m in language[selectedLanguage].activity) {\n                    m = language[selectedLanguage].activity[m];\n                  }\n                  if (i === 0) {\n                    name += m.name;\n                    img += m.image;\n                  } else {\n                    const str = typeof m === 'object' ? `<b>${truncateString(m.name, 40)}</b>` : m;\n                    msg += str;\n                    msg += ' ';\n                  }\n                })\n              }\n              <div className={classes.leftBlock}>\n                <div style={{ display: 'flex', flexDirection: 'row', width: '100%' }}>\n                  {(!img || img === 'null')\n                  && (\n                    <img alt=\"\" className={classes.customIcon} src={BlankProfile} />\n                  )}\n                  {(img && img !== 'null')\n                  && (\n                    <img alt=\"\" className={classes.customIcon} src={img} />\n                  )}\n                  <Typography className={classes.name}>{truncateString(name, 40)}</Typography>\n                </div>\n                <Typography className={classes.description} dangerouslySetInnerHTML={{ __html: msg }} />\n              </div>\n              <div className={classes.rightBlock}>\n                <Typography className={classes.date}>{moment(l.created_at).fromNow()}</Typography>\n              </div>\n            </div>\n          </div>\n        </Fragment>,\n      );\n    });\n    const loadingItem = (\n      <div style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minWidth: 200,\n        minHeight: 100,\n      }}\n      >\n        <CircularProgress style={{ position: 'unset' }} />\n      </div>\n    );\n    const activities = (\n      <div\n        style={{ overflowY: 'scroll', height: '80vh', overflowX: 'hidden' }}\n        ref={(ref) => { this.scrollParentRef = ref; }}\n      >\n        <InfiniteScroll\n          pageStart={1}\n          loadMore={this.fetchPage}\n          hasMore={!this.state.isFetching && this.state.hasMoreItems}\n          getScrollParent={() => this.scrollParentRef}\n          threshold={10}\n          useWindow\n        >\n          <div>\n            {items}\n          </div>\n          { this.state.isFetching && loader }\n        </InfiniteScroll>\n      </div>\n    );\n    if (this.state.first) {\n      return (\n        <Fragment>\n          { isModal\n            ? (\n              <Dialog\n                open\n                title={title}\n                onClose={this.handleClose}\n                clickClose={this.handleClose}\n                onExited={this.handleClose}\n                contentStyle={{ padding: 0 }}\n              >\n                <div>{loadingItem}</div>\n              </Dialog>\n            )\n            : (\n              <Fragment>\n                <Typography className={classes.title}>\n                  {language[selectedLanguage].home.activity}:\n                </Typography>\n                <div className={classes.container}>\n                  {loadingItem}\n                </div>\n              </Fragment>\n            )\n          }\n        </Fragment>\n      );\n    }\n    return (\n      <Fragment>\n        { isModal\n          ? (\n            <Dialog\n              open\n              title={title}\n              onClose={this.handleClose}\n              clickClose={this.handleClose}\n              onExited={this.handleClose}\n              contentStyle={{ padding: 0 }}\n            >\n              {\n              this.state.logs.length > 0\n              && (\n                <div>{activities}</div>\n              )\n              }\n              {\n                !this.state.logs.length\n                && <Typography style={{ margin: 10 }}>{language[selectedLanguage].home.noActivities}.</Typography>\n                }\n            </Dialog>\n          )\n          : (\n            <Fragment>\n              <Typography className={classes.title}>\n                {language[selectedLanguage].home.activity}:\n              </Typography>\n              <div className={classes.container}>\n                {activities}\n              </div>\n            </Fragment>\n          )\n          }\n      </Fragment>\n    );\n  }\n}\nLogsShowing.propTypes = {\n  classes: PropTypes.object.isRequired,\n  toggleShowLogs: PropTypes.func.isRequired,\n  fetchGetLogs: PropTypes.func.isRequired,\n  projectId: PropTypes.string.isRequired,\n  isModal: PropTypes.bool.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n  userId: PropTypes.string.isRequired,\n};\nconst mapStateToProps = (state) => {\n  return {\n    projectId: state.modal.logs.selectedProject,\n    selectedLanguage: state.user.language,\n    userId: state.auth.id,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    toggleShowLogs,\n    fetchGetLogs,\n  }, dispatch);\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LogsShowing));\n","import {\n  FETCH_IMPORT_BOARD,\n  FETCH_IMPORT_PROYECT,\n} from '../../constants/api/import';\n\n\nexport const fetchImportBoard = (body, fileName, projectId) => ({\n  type: FETCH_IMPORT_BOARD,\n  fetch: true,\n  url: '/import/board',\n  params: {\n    method: 'POST',\n    body,\n  },\n  queryParams: {\n    project_id: projectId,\n    file_name: fileName\n  },\n});\n\nexport const fetchImportProject = (body, fileName) => ({\n  type: FETCH_IMPORT_PROYECT,\n  fetch: true,\n  url: `/import/project`,\n  params: {\n    method: 'POST',\n    body,\n  },\n  queryParams: {\n    file_name: fileName\n  },\n});\n\n// export const fetchImportProjectBoardsUser = (data, fileName) => ({\n//   type: FETCH_IMPORT_PROYECT_BOARDS_USER,\n//   fetch: true,\n//   url: `/import/projects`,\n//   params: {\n//     method: 'POST',\n//     data,\n//   },\n//   queryParams: {\n//     file_name: fileName\n//   },\n// });\n","export const FETCH_IMPORT_BOARD = 'FETCH_IMPORT_BOARD';\nexport const FETCH_IMPORT_PROYECT = 'FETCH_IMPORT_PROYECT';\n","import {\n  TOGGLE_CREATE_MODAL_PROJECT,\n  TOGGLE_EDIT_MODAL_PROJECT,\n  TOGGLE_DELETE_MODAL_PROJECT,\n} from '../../constants/modals/projects';\n\nexport const toggleCreateProjectForm = folderId => ({\n  type: TOGGLE_CREATE_MODAL_PROJECT,\n  payload: {\n    body: {\n      folderId,\n    },\n  },\n});\n\nexport const toggleEditProjectForm = (id, folderId) => ({\n  type: TOGGLE_EDIT_MODAL_PROJECT,\n  payload: {\n    body: {\n      id,\n      folderId,\n    },\n  },\n});\n\nexport const toggleDeleteProjectForm = (id, folderId) => ({\n  type: TOGGLE_DELETE_MODAL_PROJECT,\n  payload: {\n    body: {\n      id,\n      folderId,\n    },\n  },\n});\n","import {\n  TOGGLE_CREATE_MODAL_FOLDER,\n  TOGGLE_EDIT_MODAL_FOLDER,\n  TOGGLE_DELETE_MODAL_FOLDER,\n} from '../../constants/modals/folders';\n\nexport const toggleCreateFolderForm = () => ({\n  type: TOGGLE_CREATE_MODAL_FOLDER,\n  payload: {\n    body: {\n\n    },\n  },\n});\n\nexport const toggleEditFolderForm = id => ({\n  type: TOGGLE_EDIT_MODAL_FOLDER,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const toggleDeleteFolderForm = id => ({\n  type: TOGGLE_DELETE_MODAL_FOLDER,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '../../../lib/Dialog';\nimport Form from '../../../lib/Form';\nimport TextField from '../../../lib/TextField';\nimport PrimaryButton from '../../../lib/Button/PrimaryButton';\n\nclass ModalForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.oldValue,\n    };\n    this.onClose = this.onClose.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.nameChange = this.nameChange.bind(this);\n  }\n\n  onClose(event) {\n    if (event) event.stopPropagation();\n    this.props.onClose();\n  }\n\n  onSubmit(event) {\n    if (event) event.stopPropagation();\n    this.props.onSubmit(event, this.state.name);\n  }\n\n  nameChange(value) {\n    this.setState({ name: value });\n  }\n\n  render() {\n    const { isFetching, title } = this.props;\n    const { name } = this.state;\n    const footer = (\n      <div>\n        <PrimaryButton\n          type=\"submit\"\n          onClick={this.onSubmit}\n          loading={isFetching}\n        >\n          {title.toUpperCase()}\n        </PrimaryButton>\n      </div>\n    );\n    return (\n      <Dialog\n        open\n        title={title}\n        footer={footer}\n        onClose={this.onClose}\n        clickClose={this.onClose}\n      >\n        <Form\n          onSubmit={this.onSubmit}\n        >\n          <TextField\n            onChange={this.nameChange}\n            type=\"name\"\n            name={name}\n            value={name}\n            fullWidth\n            label=\"Name\"\n            required\n            id=\"name\"\n            autoFocus\n          />\n        </Form>\n      </Dialog>\n    );\n  }\n}\n\nModalForm.propTypes = {\n  oldValue: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isFetching: state.app.isFetching,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalForm);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ModalForm from '../ModalForm';\n\nimport { notifySuccess, notifyError } from '../../../../actions/notification';\n\nimport { toggleCreateFolderForm } from '../../../../actions/modals/folders';\n\nimport { fetchCreateFolder } from '../../../../actions/api/folders';\n\nclass CreateModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCloseFolder = this.handleCloseFolder.bind(this);\n    this.handleCreateSubmit = this.handleCreateSubmit.bind(this);\n  }\n\n  handleCloseFolder() {\n    this.props.toggleCreateFolderForm();\n  }\n\n  handleCreateSubmit(event, value) {\n    if (event) event.preventDefault();\n    const newName = value.trim();\n    if (newName !== '') {\n      this.props.fetchCreateFolder({ name: newName })\n        .then((response) => {\n          if (response.ok) {\n            this.handleCloseFolder();\n            this.props.notifySuccess('Folder created');\n          }\n        });\n    } else {\n      this.props.notifyError('Name field cannot be empty');\n    }\n  }\n\n  render() {\n    return (\n      <ModalForm\n        oldValue=\"\"\n        title=\"Create Folder\"\n        onSubmit={this.handleCreateSubmit}\n        onClose={this.handleCloseFolder}\n      />\n    );\n  }\n}\n\nCreateModal.propTypes = {\n  toggleCreateFolderForm: PropTypes.func.isRequired,\n  fetchCreateFolder: PropTypes.func.isRequired,\n  notifyError: PropTypes.any.isRequired,\n  notifySuccess: PropTypes.any.isRequired,\n};\n\nconst mapStateToProps = () => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    toggleCreateFolderForm,\n    fetchCreateFolder,\n    notifySuccess,\n    notifyError,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateModal);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ModalForm from '../ModalForm';\n\nimport { notifySuccess, notifyError } from '../../../../actions/notification';\n\nimport { toggleEditFolderForm } from '../../../../actions/modals/folders';\nimport { fetchUpdateFolder } from '../../../../actions/api/folders';\n\nimport { oneFolder } from '../../../../selectors/folders';\n\nclass EditModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCloseFolder = this.handleCloseFolder.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n  }\n\n  handleCloseFolder() {\n    this.props.toggleEditFolderForm();\n  }\n\n  handleEditSubmit(event, value) {\n    if (event) event.preventDefault();\n    const { folder } = this.props;\n    const newName = value.trim();\n    if (newName !== '' && folder.name !== newName) {\n      this.props.fetchUpdateFolder(folder.id, { name: newName })\n        .then((response) => {\n          if (response.ok) {\n            this.handleCloseFolder();\n            this.props.notifySuccess('Folder updated');\n          }\n        });\n    } else {\n      this.props.notifyError('Field name cannot be empty');\n    }\n  }\n\n  render() {\n    const { folder } = this.props;\n    return (\n      <ModalForm\n        oldValue={folder.name}\n        title=\"Edit Folder\"\n        onSubmit={this.handleEditSubmit}\n        onClose={this.handleCloseFolder}\n      />\n    );\n  }\n}\n\nEditModal.propTypes = {\n  toggleEditFolderForm: PropTypes.func.isRequired,\n  fetchUpdateFolder: PropTypes.func.isRequired,\n  folder: PropTypes.any.isRequired,\n  notifyError: PropTypes.any.isRequired,\n  notifySuccess: PropTypes.any.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    folder: oneFolder(ownProps, state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    toggleEditFolderForm,\n    fetchUpdateFolder,\n    notifySuccess,\n    notifyError,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditModal);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '../../../lib/Dialog';\nimport Form from '../../../lib/Form';\nimport PrimaryButton from '../../../lib/Button/PrimaryButton';\n\nimport { notifySuccess } from '../../../../actions/notification';\nimport { fetchDeleteFolder } from '../../../../actions/api/folders';\n\nimport { oneFolder } from '../../../../selectors/folders';\nimport { toggleDeleteFolderForm } from '../../../../actions/modals/folders';\n\nclass DeleteForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCloseFolder = this.handleCloseFolder.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseFolder() {\n    this.props.toggleDeleteFolderForm();\n  }\n\n  handleSubmit(event) {\n    if (event) event.preventDefault();\n    const { folder } = this.props;\n    this.handleCloseFolder();\n    this.props.fetchDeleteFolder(folder.id)\n      .then((response) => {\n        if (response.ok) {\n          this.props.notifySuccess('Folder deleted');\n        }\n      });\n  }\n\n  render() {\n    const { isFetching, folder } = this.props;\n    const title = `Delete Folder ${folder.name}`;\n    const footer = (\n      <div style={{ flex: 1, display: 'flex' }}>\n        <div style={{ flex: 1 }} />\n        <PrimaryButton\n          type=\"submit\"\n          onClick={this.handleCloseFolder}\n          style={{ marginRight: 10 }}\n        >\n\n          No\n        </PrimaryButton>\n        <PrimaryButton\n          type=\"submit\"\n          onClick={this.handleSubmit}\n          loading={isFetching}\n        >\n\n          Yes\n        </PrimaryButton>\n      </div>\n    );\n    return (\n      <Dialog\n        open\n        title={title}\n        footer={footer}\n        onClose={this.handleCloseFolder}\n        clickClose={this.handleCloseFolder}\n        hideClose\n      >\n        <Form\n          onSubmit={this.handleSubmit}\n        >\n          <Typography>\n\n            Are you sure you want to delete folder &quot;\n            {folder.name}\n\n            &quot;?\n          </Typography>\n        </Form>\n      </Dialog>\n    );\n  }\n}\n\nDeleteForm.propTypes = {\n  isFetching: PropTypes.bool.isRequired,\n  fetchDeleteFolder: PropTypes.func.isRequired,\n  toggleDeleteFolderForm: PropTypes.func.isRequired,\n  folder: PropTypes.object.isRequired,\n  notifySuccess: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isFetching: state.app.isFetching,\n    folder: oneFolder(ownProps, state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    toggleDeleteFolderForm,\n    fetchDeleteFolder,\n    notifySuccess,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteForm);\n","import React, { Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport CreateModal from './CreateModal';\nimport EditModal from './EditModal';\nimport DeleteModal from './DeleteModal';\n\nconst ModalContainer = ({ folderCreating, folderEditing, folderDeleting }) => {\n  return (\n    <Fragment>\n      { folderCreating && <CreateModal /> }\n      { folderEditing && <EditModal /> }\n      { folderDeleting && <DeleteModal /> }\n    </Fragment>\n  );\n};\n\nModalContainer.propTypes = {\n  folderCreating: PropTypes.bool.isRequired,\n  folderEditing: PropTypes.bool.isRequired,\n  folderDeleting: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    folderCreating: state.modal.folders.folderCreating,\n    folderEditing: state.modal.folders.folderEditing,\n    folderDeleting: state.modal.folders.folderDeleting,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalContainer);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ModalForm from '../ModalForm';\n\nimport { notifySuccess, notifyError } from '../../../../actions/notification';\n\nimport { toggleCreateProjectForm } from '../../../../actions/modals/projects';\n\nimport { fetchCreateProject } from '../../../../actions/api/projects';\n\nimport { projectCount } from '../../../../selectors/folders';\n\nclass CreateModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCloseProject = this.handleCloseProject.bind(this);\n    this.handleCreateSubmit = this.handleCreateSubmit.bind(this);\n  }\n\n  handleCloseProject() {\n    this.props.toggleCreateProjectForm();\n  }\n\n  handleCreateSubmit(event, value) {\n    if (event) event.preventDefault();\n    const { folderId, projectTotal, maxProjects } = this.props;\n    const newName = value.trim();\n    if (newName !== '') {\n      if (projectTotal < maxProjects) {\n        this.props.fetchCreateProject({ name: newName, folder_id: folderId })\n          .then((response) => {\n            if (response.ok) {\n              this.handleCloseProject();\n              this.props.notifySuccess('Project created');\n            }\n          });\n      } else {\n        this.props.notifyError('Project limit reached');\n      }\n    } else {\n      this.props.notifyError('Field name cannot be empty');\n    }\n  }\n\n  render() {\n    return (\n      <ModalForm\n        oldValue=\"\"\n        title=\"Create Project\"\n        onSubmit={this.handleCreateSubmit}\n        onClose={this.handleCloseProject}\n      />\n    );\n  }\n}\n\nCreateModal.propTypes = {\n  folderId: PropTypes.string.isRequired,\n  toggleCreateProjectForm: PropTypes.func.isRequired,\n  fetchCreateProject: PropTypes.func.isRequired,\n  notifyError: PropTypes.any.isRequired,\n  notifySuccess: PropTypes.any.isRequired,\n  projectTotal: PropTypes.number.isRequired,\n  maxProjects: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    folderId: state.modal.projects.selectedFolder,\n    projectTotal: projectCount(ownProps, state),\n    maxProjects: Number(state.auth.maxProjects),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    toggleCreateProjectForm,\n    fetchCreateProject,\n    notifySuccess,\n    notifyError,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateModal);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '../../../lib/Dialog';\nimport Form from '../../../lib/Form';\nimport TextField from '../../../lib/TextField';\nimport PrimaryButton from '../../../lib/Button/PrimaryButton';\n\nclass ModalForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.oldValue,\n      folder: props.folders.filter(f => f.id === props.oldFolder)[0].name,\n    };\n    this.onClose = this.onClose.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.nameChange = this.nameChange.bind(this);\n    this.folderChange = this.folderChange.bind(this);\n  }\n\n  onClose(event) {\n    if (event) event.stopPropagation();\n    this.props.onClose();\n  }\n\n  onSubmit(event) {\n    if (event) event.stopPropagation();\n    this.props.onSubmit(event, { name: this.state.name, folder: this.state.folder });\n  }\n\n  nameChange(value) {\n    this.setState({ name: value });\n  }\n\n  folderChange(event) {\n    this.setState({ folder: event.target.value });\n  }\n\n  render() {\n    const { isFetching, title } = this.props;\n    const { name } = this.state;\n    const footer = (\n      <div>\n        <PrimaryButton\n          type=\"submit\"\n          onClick={this.onSubmit}\n          loading={isFetching}\n        >\n          {title.toUpperCase()}\n        </PrimaryButton>\n      </div>\n    );\n    return (\n      <Dialog\n        open\n        title={title}\n        footer={footer}\n        onClose={this.onClose}\n        clickClose={this.onClose}\n      >\n        <Form\n          onSubmit={this.onSubmit}\n        >\n          <TextField\n            onChange={this.nameChange}\n            type=\"name\"\n            name={name}\n            value={name}\n            fullWidth\n            label=\"Name\"\n            required\n            id=\"name\"\n            autoFocus\n          />\n        </Form>\n      </Dialog>\n    );\n  }\n}\n\nModalForm.propTypes = {\n  oldValue: PropTypes.string.isRequired,\n  oldFolder: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  folders: PropTypes.array.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isFetching: state.app.isFetching,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalForm);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ModalForm from '../ModalFormProject';\n\nimport { notifySuccess, notifyError } from '../../../../actions/notification';\n\nimport { toggleEditProjectForm } from '../../../../actions/modals/projects';\nimport { fetchUpdateProject } from '../../../../actions/api/projects';\n\nimport { oneProjectFormModal } from '../../../../selectors/projects';\nimport { allFolders } from '../../../../selectors/folders';\n\nclass EditModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCloseProject = this.handleCloseProject.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n  }\n\n  handleCloseProject() {\n    this.props.toggleEditProjectForm();\n  }\n\n  handleEditSubmit(event, value) {\n    if (event) event.preventDefault();\n    const { project, folders } = this.props;\n    const { name, folder } = value;\n    const newName = name.trim();\n    const newFolder = folders.filter(f => f.name === folder)[0].id;\n    if (newName !== '') {\n      if (newName !== project.name || newFolder !== project.folder_id) {\n        this.props.fetchUpdateProject(project.id, {\n          name: newName,\n          old_folder_id: project.folder_id,\n          new_folder_id: newFolder,\n        }).then((response) => {\n          if (response.ok) {\n            this.handleCloseProject();\n            this.props.notifySuccess('Project updated');\n          }\n        });\n      } else {\n        this.props.notifyError('No changes detected');\n      }\n    } else {\n      this.props.notifyError('Field name cannot be empty');\n    }\n  }\n\n  render() {\n    const { folders, project } = this.props;\n    return (\n      <ModalForm\n        oldValue={project.name}\n        oldFolder={project.folder_id}\n        title=\"Edit Project\"\n        onSubmit={this.handleEditSubmit}\n        onClose={this.handleCloseProject}\n        folders={folders}\n      />\n    );\n  }\n}\n\nEditModal.propTypes = {\n  toggleEditProjectForm: PropTypes.func.isRequired,\n  fetchUpdateProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  folders: PropTypes.array.isRequired,\n  notifyError: PropTypes.any.isRequired,\n  notifySuccess: PropTypes.any.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    project: oneProjectFormModal(ownProps, state),\n    folders: allFolders(ownProps, state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    toggleEditProjectForm,\n    fetchUpdateProject,\n    notifySuccess,\n    notifyError,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditModal);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '../../../lib/Dialog';\nimport Form from '../../../lib/Form';\nimport PrimaryButton from '../../../lib/Button/PrimaryButton';\n\nimport { notifySuccess } from '../../../../actions/notification';\nimport { fetchDeleteProject } from '../../../../actions/api/projects';\n\nimport { oneProjectFormModal } from '../../../../selectors/projects';\nimport { toggleDeleteProjectForm } from '../../../../actions/modals/projects';\n\nimport language from '../../../../constants/language';\n\nclass DeleteForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCloseProject = this.handleCloseProject.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleCloseProject() {\n    this.props.toggleDeleteProjectForm();\n  }\n\n  handleSubmit(event) {\n    if (event) event.preventDefault();\n    const { folder, selectedLanguage } = this.props;\n    this.handleCloseProject();\n    this.props.fetchDeleteProject(folder.id)\n      .then((response) => {\n        if (response.ok) {\n          this.props.notifySuccess(language[selectedLanguage].modals.projectDeleted);\n        }\n      });\n  }\n\n  render() {\n    const { isFetching, folder, selectedLanguage } = this.props;\n    const title = `${language[selectedLanguage].modals.deleteProject} ${folder.name}`;\n    const footer = (\n      <div style={{ flex: 1, display: 'flex' }}>\n        <div style={{ flex: 1 }} />\n        <PrimaryButton\n          type=\"submit\"\n          onClick={this.handleCloseProject}\n          style={{ marginRight: 10 }}\n        >\n\n          {language[selectedLanguage].modals.no}\n        </PrimaryButton>\n        <PrimaryButton\n          type=\"submit\"\n          onClick={this.handleSubmit}\n          loading={isFetching}\n        >\n\n          {language[selectedLanguage].modals.yes}\n        </PrimaryButton>\n      </div>\n    );\n    return (\n      <Dialog\n        open\n        title={title}\n        footer={footer}\n        onClose={this.handleCloseProject}\n        clickClose={this.handleCloseProject}\n        hideClose\n      >\n        <Form\n          onSubmit={this.handleSubmit}\n        >\n          <Typography>\n\n            {language[selectedLanguage].modals.sureDeleteProject} &quot;\n            {folder.name}\n\n            &quot;?\n          </Typography>\n        </Form>\n      </Dialog>\n    );\n  }\n}\n\nDeleteForm.propTypes = {\n  isFetching: PropTypes.bool,\n  fetchDeleteProject: PropTypes.func.isRequired,\n  toggleDeleteProjectForm: PropTypes.func.isRequired,\n  folder: PropTypes.object.isRequired,\n  notifySuccess: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nDeleteForm.defaultProps = {\n  isFetching: false,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isFetching: state.app.isFetching,\n    folder: oneProjectFormModal(ownProps, state),\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    toggleDeleteProjectForm,\n    fetchDeleteProject,\n    notifySuccess,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteForm);\n","import React, { Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport CreateModal from './CreateModal';\nimport EditModal from './EditModal';\nimport DeleteModal from './DeleteModal';\n\nconst ModalContainer = ({ projectCreating, projectEditing, projectDeleting }) => {\n  return (\n    <Fragment>\n      { projectCreating && <CreateModal /> }\n      { projectEditing && <EditModal /> }\n      { projectDeleting && <DeleteModal /> }\n    </Fragment>\n  );\n};\n\nModalContainer.propTypes = {\n  projectCreating: PropTypes.bool.isRequired,\n  projectEditing: PropTypes.bool.isRequired,\n  projectDeleting: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    projectCreating: state.modal.projects.projectCreating,\n    projectEditing: state.modal.projects.projectEditing,\n    projectDeleting: state.modal.projects.projectDeleting,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalContainer);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Dialog from '../../../lib/Dialog';\nimport Form from '../../../lib/Form';\nimport PrimaryButton from '../../../lib/Button/PrimaryButton';\n\nimport { notifySuccess, notifyError } from '../../../../actions/notification';\nimport { fetchAcceptInvitation } from '../../../../actions/api/invitations';\nimport { allFolders } from '../../../../selectors/folders';\n\nimport { toggleAcceptInvitationForm } from '../../../../actions/modals/invitations';\n\nclass AcceptModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n    };\n    this.handleCloseAccept = this.handleCloseAccept.bind(this);\n    this.handleCreateSubmit = this.handleCreateSubmit.bind(this);\n    this.nameChange = this.nameChange.bind(this);\n  }\n\n  nameChange = (event) => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleCloseAccept() {\n    this.props.toggleAcceptInvitationForm();\n  }\n\n  handleCreateSubmit(event) {\n    if (event) event.preventDefault();\n    const { name } = this.state;\n    if (name === '') {\n      this.props.notifyError('Folder field cannot be empty');\n    } else {\n      this.props.fetchAcceptInvitation(this.props.invitationId, { folder_id: name })\n        .then((response) => {\n          if (response.ok) {\n            this.props.notifySuccess('You joined the project succesfully');\n            this.handleCloseAccept();\n          }\n        });\n    }\n  }\n\n  render() {\n    const { isFetching, folders } = this.props;\n    const title = 'Choose folder to save project';\n    const submit = this.handleCreateSubmit;\n    const footer = (\n      <div>\n        <PrimaryButton\n          type=\"submit\"\n          onClick={submit}\n          loading={isFetching}\n        >\n\n          Submit\n        </PrimaryButton>\n      </div>\n    );\n    return (\n      <Dialog\n        open\n        title={title}\n        footer={footer}\n        onClose={this.handleCloseAccept}\n        clickClose={this.handleCloseAccept}\n        onEnter={this.handleEnter}\n      >\n        <Form\n          onSubmit={submit}\n        >\n          <FormControl style={{ minWidth: 120 }}>\n            <InputLabel htmlFor=\"folder\">Folders</InputLabel>\n            <Select\n              value={this.state.name}\n              onChange={this.nameChange}\n              input={<Input id=\"folder\" />}\n            >\n              {folders.map(folder => (\n                <MenuItem key={folder.id} value={folder.id}>{folder.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Form>\n      </Dialog>\n    );\n  }\n}\n\nAcceptModal.propTypes = {\n  isFetching: PropTypes.bool.isRequired,\n  notifySuccess: PropTypes.func.isRequired,\n  notifyError: PropTypes.func.isRequired,\n  folders: PropTypes.array.isRequired,\n  invitationId: PropTypes.string.isRequired,\n  fetchAcceptInvitation: PropTypes.func.isRequired,\n  toggleAcceptInvitationForm: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isFetching: state.app.isFetching,\n    folders: allFolders(ownProps, state),\n    invitationId: state.modal.invitations.selectedInvitation,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    notifySuccess,\n    notifyError,\n    fetchAcceptInvitation,\n    toggleAcceptInvitationForm,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AcceptModal);\n","import React, { Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport AcceptModal from './AcceptModal';\n\nconst ModalContainer = ({ invitationAccepting }) => {\n  return (\n    <Fragment>\n      { invitationAccepting && <AcceptModal /> }\n    </Fragment>\n  );\n};\n\nModalContainer.propTypes = {\n  invitationAccepting: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    invitationAccepting: state.modal.invitations.invitationAccepting,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalContainer);\n","import React, { Fragment } from 'react';\n\nimport FolderModal from './FolderModal';\nimport ProjectModal from './ProjectModal';\nimport InvitationModal from './InvitationModal';\n\nconst Modals = () => {\n  return (\n    <Fragment>\n      <FolderModal />\n      <ProjectModal />\n      <InvitationModal />\n    </Fragment>\n  );\n};\n\nexport default Modals;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { Draggable } from 'react-beautiful-dnd';\nimport Typography from '@material-ui/core/Typography';\nimport FileIcon from '@material-ui/icons/FileCopy';\nimport FavIcon from '@material-ui/icons/Favorite';\nimport NotFavIcon from '@material-ui/icons/FavoriteBorder';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { truncateString } from '../../../utils';\nimport { fetchUpdateFavorite } from '../../../actions/api/projects';\n\nimport {\n  toggleEditProjectForm,\n  toggleDeleteProjectForm,\n} from '../../../actions/modals/projects';\n\nimport { boardCountByProject } from '../../../selectors/projects';\nimport language from '../../../constants/language';\n\nconst styles = theme => ({\n  root: {\n    padding: '10px 20px',\n  },\n  dragOn: {\n    padding: '10px 0px',\n    marginLeft: '25%',\n    height: '40px',\n    width: '40%',\n    backgroundColor: '#c7c7c7',\n  },\n  fileIcon: {\n    alignSelf: 'center',\n    color: '#ea5941',\n    marginRight: 8,\n  },\n  title: {\n    color: '#2a3d41',\n    margin: '-3px 3px',\n    fontSize: theme.typography.pxToRem(14),\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    '&:hover': {\n      color: '#ca3921',\n    },\n  },\n  subtitle: {\n    fontSize: theme.typography.pxToRem(12),\n    marginLeft: 10,\n    marginBottom: -3,\n    color: '#a4a4a4',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  dropdownIcon: {\n    color: '#ea5941',\n  },\n  iconDivider: {\n    alignSelf: 'center',\n    backgroundColor: '#888',\n    width: 1,\n    height: 25,\n  },\n  icon: {\n    alignSelf: 'center',\n    color: '#2a3d41',\n    padding: '0px 5px',\n    width: 20,\n    cursor: 'pointer',\n    '&:hover': {\n      color: '#ca3921',\n    },\n  },\n  iconFav: {\n    alignSelf: 'center',\n    color: 'white',\n    padding: '0px 5px',\n    width: 20,\n    cursor: 'pointer',\n    '&:hover': {\n      color: '#ca3921',\n    },\n  },\n  heartIcon: {\n    alignSelf: 'center',\n    color: '#ea5941',\n    padding: '0px 5px',\n    width: 20,\n    cursor: 'pointer',\n    '&:hover': {\n      color: '#ca3921',\n    },\n  },\n});\n\nclass ProjectsItem extends Component {\n  constructor(props) {\n    super(props);\n    this.makeFavorite = this.makeFavorite.bind(this);\n    this.handleEditProject = this.handleEditProject.bind(this);\n    this.handleDeleteProject = this.handleDeleteProject.bind(this);\n  }\n\n  handleEditProject(event) {\n    if (event) event.stopPropagation();\n    const { project } = this.props;\n    this.props.toggleEditProjectForm(project.id);\n  }\n\n  makeFavorite(event) {\n    const { project } = this.props;\n    if (event) event.stopPropagation();\n    this.props.fetchUpdateFavorite(project.id);\n  }\n\n  handleDeleteProject(event) {\n    if (event) event.stopPropagation();\n    const { project } = this.props;\n    this.props.toggleDeleteProjectForm(project.id);\n  }\n\n  render() {\n    const {\n      classes,\n      project,\n      boardCount,\n      selectedLanguage,\n    } = this.props;\n    return (\n\n      <Fragment>\n        <Draggable\n          key={project.id}\n          draggableId={project.id}\n        >\n          {(provided, snapshot) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n            >\n              {!snapshot.isDragging && (\n                <div>\n                  <Grid container direction=\"row\" alignItems=\"flex-end\" className={classes.root}>\n                    <FileIcon className={classes.fileIcon} />\n                    <Link to={`/project/${project.id}`} style={{ textDecoration: 'none' }}>\n                      <Tooltip placement=\"top-start\" title={project.name}>\n                        <Typography className={classes.title}>\n                          {truncateString(project.name, 27)}\n                        </Typography>\n                      </Tooltip>\n                    </Link>\n                    <Typography className={classes.subtitle}>\n                      {boardCount === 1\n                        ? language[selectedLanguage].home.oneBoard\n                        : `${boardCount} ${language[selectedLanguage].home.boards}`}\n                    </Typography>\n                    <div className={classes.grow} />\n                    {project.role === 'owner'\n                      && (\n                        <Fragment>\n                          <Tooltip placement=\"top-start\" title={language[selectedLanguage].home.editName}>\n                            <EditIcon\n                              onClick={this.handleEditProject}\n                              className={classes.icon}\n                            />\n                          </Tooltip>\n                          <Divider className={classes.iconDivider} />\n                          <Tooltip placement=\"top-start\" title={language[selectedLanguage].home.deleteProject}>\n                            <DeleteOutlinedIcon\n                              onClick={this.handleDeleteProject}\n                              className={classes.icon}\n                            />\n                          </Tooltip>\n                        </Fragment>\n                      )\n                    }\n                    <Divider className={classes.iconDivider} />\n                    {project.is_favorite\n                      && (\n                        <Tooltip placement=\"top-start\" title={language[selectedLanguage].home.removeFavorites}>\n                          <FavIcon onClick={this.makeFavorite} className={classes.heartIcon} />\n                        </Tooltip>\n                      )}\n                    {!project.is_favorite\n                      && (\n                        <Tooltip placement=\"top-start\" title={language[selectedLanguage].home.addToFavorites}>\n                          <NotFavIcon onClick={this.makeFavorite} className={classes.heartIcon} />\n                        </Tooltip>\n                      )}\n                  </Grid>\n                  <Divider style={{ backgroundColor: '#EEE' }} />\n                </div>\n              )}{snapshot.isDragging && (\n              <div>\n                <Grid container direction=\"row\" alignItems=\"flex-end\" className={classes.dragOn}>\n                  <FileIcon className={classes.fileIcon} />\n                  <Tooltip placement=\"top-start\" title={project.name}>\n                    <Typography className={classes.title}>\n                      {truncateString(project.name, 20)}\n                    </Typography>\n                  </Tooltip>\n                </Grid>\n\n              </div>\n              )\n              }\n\n            </div>\n          )}\n        </Draggable>\n      </Fragment>\n    );\n  }\n}\n\nProjectsItem.propTypes = {\n  project: PropTypes.any.isRequired,\n  boardCount: PropTypes.number.isRequired,\n  classes: PropTypes.object.isRequired,\n  fetchUpdateFavorite: PropTypes.func.isRequired,\n  toggleEditProjectForm: PropTypes.func.isRequired,\n  toggleDeleteProjectForm: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    boardCount: boardCountByProject(ownProps, state),\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    fetchUpdateFavorite,\n    toggleEditProjectForm,\n    toggleDeleteProjectForm,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ProjectsItem));\n","import React, { Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ProjectsItem from './ProjectsItem';\n\nimport { projectsByFolder } from '../../../selectors/projects';\n\nconst ProjectsContainer = ({ projects }) => {\n  return (\n    <Fragment>\n      {\n        projects.map(o => (\n          <ProjectsItem favorite={false} project={o} key={o.id} />\n        ))\n      }\n    </Fragment>\n  );\n};\n\nProjectsContainer.propTypes = {\n  projects: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projects: projectsByFolder(ownProps, state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsContainer);\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FileIcon from '@material-ui/icons/FileCopy';\nimport AddIcon from '@material-ui/icons/Add';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Droppable } from 'react-beautiful-dnd';\nimport ExpansionPanel from '../../lib/ExpansionPanel';\nimport ProjectsContainer from './ProjectsContainer';\n\nimport { notifyError } from '../../../actions/notification';\nimport { truncateString } from '../../../utils';\n\nimport { toggleEditFolderForm, toggleDeleteFolderForm } from '../../../actions/modals/folders';\nimport { toggleCreateProjectForm } from '../../../actions/modals/projects';\n\nimport { projectCountByFolder } from '../../../selectors/folders';\nimport language from '../../../constants/language';\n\nconst styles = theme => ({\n  folderIcon: {\n    color: '#ea5941',\n    marginRight: 8,\n    alignSelf: 'center',\n  },\n  title: {\n    color: '#2a3d41',\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: 'bold',\n    alignSelf: 'flex-end',\n    '&:hover': {\n      color: '#ca3921',\n    },\n  },\n  subtitle: {\n    fontSize: 12,\n    marginLeft: 10,\n    color: '#a4a4a4',\n    display: 'right',\n    alignItems: 'marginRight',\n  },\n  fileIcon: {\n    color: '#cccccc',\n    width: 15,\n    marginRight: 4,\n  },\n  iconDivider: {\n    width: 1,\n    height: 25,\n  },\n  icon: {\n    fontSize: 20,\n    color: '#2a3d41',\n    padding: '0px 5px',\n    '&:hover': {\n      color: '#ca3921',\n    },\n  },\n  addIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    color: '#2a3d41',\n    padding: '0px 5px',\n    '&:hover': {\n      color: '#ca3921',\n    },\n  },\n  emptyText: {\n    color: '#999',\n    alignSelf: 'center',\n    margin: 10,\n  },\n  projectContainer: {\n    minWidth: '380px',\n  },\n});\n\nclass FoldersItem extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCreateProject = this.handleCreateProject.bind(this);\n    this.handleEditFolder = this.handleEditFolder.bind(this);\n    this.handleDeleteFolder = this.handleDeleteFolder.bind(this);\n    this.handleExpand = this.handleExpand.bind(this);\n    this.state = {\n      expanded: false,\n    };\n  }\n\n  handleCreateProject(event) {\n    if (event) event.stopPropagation();\n    const { folder } = this.props;\n    this.props.toggleCreateProjectForm(folder.id);\n  }\n\n  handleEditFolder(event) {\n    if (event) event.stopPropagation();\n    const { folder } = this.props;\n    this.props.toggleEditFolderForm(folder.id);\n  }\n\n  handleDeleteFolder(event) {\n    if (event) event.stopPropagation();\n    const { folder, selectedLanguage } = this.props;\n    if (folder.projects && folder.projects.length > 0) {\n      this.props.notifyError(language[selectedLanguage].home.canNotRemoveFolder);\n    } else {\n      this.props.toggleDeleteFolderForm(folder.id);\n    }\n  }\n\n  handleExpand() {\n    const { expanded } = this.state.expanded;\n    if (expanded) {\n      this.setState({ expanded: false });\n    } else {\n      this.setState({ expanded: true });\n    }\n  }\n\n  render() {\n    const {\n      folder,\n      projectCount,\n      classes,\n      selectedLanguage,\n    } = this.props;\n    return (\n      <Fragment>\n        <div>\n          <Droppable droppableId={folder.id}>\n            {(providedTask, snapshotTask) => (\n              <div\n                ref={providedTask.innerRef}\n                {...providedTask.droppableProps}\n                {...providedTask.droppablePlaceholder}\n              >\n                <ExpansionPanel\n                  onChange={this.handleExpand}\n                  summaryStyle={{\n                    backgroundColor: snapshotTask.isDraggingOver ? '#959595' : '#f9f9f9',\n                    padding: '0 24px 0 10px',\n                  }}\n                  summary={(\n                    <Grid container alignItems=\"center\" className={classes.projectContainer}>\n                      <FolderIcon className={classes.folderIcon} />\n                      <Tooltip placement=\"top-start\" title={folder.name}>\n                        <Typography className={classes.title}>\n                          {truncateString(folder.name, 14)}\n                        </Typography>\n                      </Tooltip>\n                      <Typography className={classes.subtitle}>\n                        <FileIcon className={classes.fileIcon} />\n                        {projectCount ? `${projectCount}` : '0'}\n\n                        &nbsp;\n                        {projectCount === 1\n                          ? language[selectedLanguage].home.project\n                          : language[selectedLanguage].home.projects\n                        }\n                      </Typography>\n                      <div style={{ flexGrow: 1 }} />\n                      <Tooltip placement=\"top-start\" title={language[selectedLanguage].home.createProject}>\n                        <div\n                          role=\"presentation\"\n                          onKeyPress={this.handleCreateProject}\n                          onClick={this.handleCreateProject}\n                          className={classes.addIcon}\n                        >\n                          <AddIcon style={{ fontSize: 15 }} />\n                          <FileIcon style={{ fontSize: 20 }} />\n                        </div>\n                      </Tooltip>\n                      <Divider className={classes.iconDivider} />\n                      <Tooltip placement=\"top-start\" title={language[selectedLanguage].home.editFolder}>\n                        <EditIcon onClick={this.handleEditFolder} className={classes.icon} />\n                      </Tooltip>\n                      <Divider className={classes.iconDivider} />\n                      <Tooltip placement=\"top-start\" title={language[selectedLanguage].home.deleteFolder}>\n                        <DeleteOutlinedIcon\n                          onClick={this.handleDeleteFolder}\n                          className={classes.icon}\n                        />\n                      </Tooltip>\n                    </Grid>\n                  )}\n                >\n                  <Grid container style={{ display: (!this.state.expanded) && 'none' }}>\n                    <Grid item style={{ flex: 0.05 }} />\n                    <Grid item style={{ flex: 0.95 }}>\n                      {projectCount > 0\n                        ? (\n\n                          <ProjectsContainer folderId={folder.id} />\n                        )\n                        : (\n                          !snapshotTask.isDraggingOver && (\n                            <Typography className={classes.emptyText}>\n                              {language[selectedLanguage].home.empty}\n                            </Typography>\n                          )\n                        )\n                      }\n                    </Grid>\n                    <div>{providedTask.placeholder}</div>\n                  </Grid>\n                </ExpansionPanel>\n\n              </div>\n            )}\n          </Droppable>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nFoldersItem.propTypes = {\n  folder: PropTypes.any.isRequired,\n  projectCount: PropTypes.number.isRequired,\n  classes: PropTypes.object.isRequired,\n  toggleEditFolderForm: PropTypes.func.isRequired,\n  toggleDeleteFolderForm: PropTypes.func.isRequired,\n  toggleCreateProjectForm: PropTypes.func.isRequired,\n  notifyError: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectCount: projectCountByFolder(ownProps, state),\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    toggleCreateProjectForm,\n    notifyError,\n    toggleEditFolderForm,\n    toggleDeleteFolderForm,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FoldersItem));\n","import React, { Fragment, Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { Droppable, DragDropContext } from 'react-beautiful-dnd';\nimport { fetchUpdateProject } from '../../../actions/api/projects';\nimport FoldersItem from './FoldersItem';\nimport ProjectsContainer from './ProjectsContainer';\nimport language from '../../../constants/language';\nimport { notifySuccess } from '../../../actions/notification';\n\nconst styles = {\n  title: {\n    color: '#2a3d41',\n    fontWeight: 'bold',\n    fontSize: 16,\n    margin: '20px 0px',\n  },\n  container: {\n    backgroundColor: 'white',\n    flex: 1,\n  },\n};\n\nclass FoldersContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.onDragEnd = this.onDragEnd.bind(this);\n  }\n\n  onDragEnd(result) {\n    const { source, destination, draggableId } = result;\n\n    // dropped outside the list\n    if (!destination) {\n      const defaultFolder = this.props.folders.find(\n        folder => folder.name === '<DefaultFolder>',\n      );\n      if (source.droppableId === defaultFolder.id) {\n        return;\n      }\n      this.props.fetchUpdateProject(draggableId, {\n        old_folder_id: source.droppableId,\n        new_folder_id: defaultFolder.id,\n      }).then((response) => {\n        if (response.ok) {\n          this.props.notifySuccess('Project updated');\n        }\n      });\n      return;\n    }\n\n    if (source.droppableId !== destination.droppableId) {\n      this.props.fetchUpdateProject(draggableId, {\n        old_folder_id: source.droppableId,\n        new_folder_id: destination.droppableId,\n      }).then((response) => {\n        if (response.ok) {\n          this.props.notifySuccess('Project updated');\n        }\n      });\n    }\n  }\n\n  render() {\n    const {\n      classes, folders, selectedLanguage,\n    } = this.props;\n\n    const defaultFolder = folders.find(\n      folder => folder.name === '<DefaultFolder>',\n    );\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Fragment>\n          <Typography className={classes.title}>\n            {language[selectedLanguage].home.folders}:\n          </Typography>\n          <div className={classes.container}>\n            {folders.map((o) => {\n              return (\n\n                <Fragment key={o.id}>\n                  {\n                    o.id !== defaultFolder.id && (\n                      <FoldersItem\n                        folder={o}\n                      />\n                    )\n                  }\n                </Fragment>\n\n              );\n            })}\n\n            <Fragment>\n              <Droppable droppableId={defaultFolder.id}>\n                {provided => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    {...provided.droppablePlaceholder}\n                  >\n                    <div style={{ flex: 1, minHeight: '20px' }}>\n                      <ProjectsContainer\n                        folderId={defaultFolder.id}\n                      />\n                    </div>\n                    <div style={{ minHeight: '100px', height: '100%' }} />\n                    <div style={{ display: 'none' }}>{provided.placeholder}</div>\n                  </div>\n\n                )}\n\n              </Droppable>\n            </Fragment>\n\n          </div>\n\n        </Fragment>\n      </DragDropContext>\n    );\n  }\n}\n\nFoldersContainer.propTypes = {\n  folders: PropTypes.array.isRequired,\n  classes: PropTypes.any.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n  fetchUpdateProject: PropTypes.func.isRequired,\n  notifySuccess: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    fetchUpdateProject,\n    notifySuccess,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FoldersContainer));\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport FileIcon from '@material-ui/icons/FileCopy';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport FavIcon from '@material-ui/icons/Favorite';\nimport History from '@material-ui/icons/History';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { boardCountByProject } from '../../../selectors/projects';\nimport { truncateString } from '../../../utils';\nimport {\n  toggleEditProjectForm,\n  toggleDeleteProjectForm,\n} from '../../../actions/modals/projects';\n\nimport {\n  changeHoverProject,\n} from '../../../actions/modals/logs';\nimport { fetchUpdateFavorite } from '../../../actions/api/projects';\nimport language from '../../../constants/language';\n\n/* eslint-disable react/no-unused-state */\nconst styles = theme => ({\n  root: {\n    padding: '10px 20px',\n    minWidth: 380,\n  },\n  fileIcon: {\n    alignSelf: 'center',\n    color: '#ea5941',\n    marginRight: 8,\n  },\n  titleFav: {\n    color: 'white',\n    margin: '-3px 3px',\n    fontSize: theme.typography.pxToRem(14),\n    fontWeight: 'bold',\n    cursor: 'pointer',\n    '&:hover': {\n      color: '#ca3921',\n    },\n  },\n  subtitle: {\n    fontSize: theme.typography.pxToRem(12),\n    marginLeft: 10,\n    marginBottom: -3,\n    color: '#a4a4a4',\n  },\n  overTitle: {\n    display: 'flex',\n    alignItems: 'center',\n    color: '#a4a4a4',\n    fontWeight: 'bold',\n    fontSize: 13,\n  },\n  folderIcon: {\n    fontSize: 13,\n    marginRight: 3,\n    color: '#cccccc',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  dropdownIcon: {\n    color: '#ea5941',\n  },\n  iconDivider: {\n    alignSelf: 'center',\n    backgroundColor: '#888',\n    width: 1,\n    height: 25,\n  },\n  icon: {\n    alignSelf: 'center',\n    color: 'white',\n    padding: '0px 5px',\n    width: 20,\n    '&:hover': {\n      color: '#ca3921',\n      cursor: 'pointer',\n    },\n  },\n  iconFav: {\n    alignSelf: 'center',\n    color: 'white',\n    padding: '0px 5px',\n    width: 20,\n    cursor: 'pointer',\n    '&:hover': {\n      color: '#ca3921',\n    },\n  },\n  heartIcon: {\n    alignSelf: 'center',\n    color: '#ea5941',\n    padding: '0px 5px',\n    width: 20,\n    cursor: 'pointer',\n    '&:hover': {\n      color: '#ca3921',\n    },\n  },\n});\n\nclass ProjectsItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isHovering: false,\n    };\n    this.makeFavorite = this.makeFavorite.bind(this);\n    this.handleEditProject = this.handleEditProject.bind(this);\n    this.showActivity = this.showActivity.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.props.changeHoverProject({ projectId: '' });\n  }\n\n  handleEditProject(event) {\n    if (event) event.stopPropagation();\n    const { project } = this.props;\n    this.props.toggleEditProjectForm(project.id);\n  }\n\n  makeFavorite(event) {\n    if (event) event.stopPropagation();\n    const { project } = this.props;\n    this.props.fetchUpdateFavorite(project.id);\n  }\n\n  showActivity() {\n    const { project, onSelect, selected } = this.props;\n    onSelect(project.id);\n    if (!selected) {\n      this.props.changeHoverProject({ projectId: this.props.project.id });\n    } else {\n      this.props.changeHoverProject({ projectId: '' });\n    }\n  }\n\n  render() {\n    const {\n      classes,\n      project,\n      boardCount,\n      selectedLanguage,\n      selected,\n    } = this.props;\n    const langDict = language[selectedLanguage];\n    return (\n      <div>\n        <Grid container direction=\"row\" alignItems=\"flex-end\" className={classes.root}>\n          <FileIcon className={classes.fileIcon} />\n          <Link to={`/project/${project.id}`} style={{ textDecoration: 'none' }}>\n            <div>\n              {project.folder.name !== '<DefaultFolder>' && (\n              <Typography className={classes.overTitle}>\n                <FolderIcon className={classes.folderIcon} />\n                {project.folder.name}\n              </Typography>\n              )}\n              <Tooltip placement=\"top-start\" title={project.name}>\n                <Typography className={classes.titleFav}>\n                  {truncateString(project.name, 31)}\n                </Typography>\n              </Tooltip>\n            </div>\n          </Link>\n          <Typography className={classes.subtitle}>\n            {boardCount === 1\n              ? langDict.home.oneBoard\n              : `${boardCount} ${langDict.home.boards}`\n            }\n          </Typography>\n          <div className={classes.grow} />\n          {project.role === 'owner'\n            && (\n              <Fragment>\n                <Tooltip placement=\"top-start\" title={langDict.home.editName}>\n                  <EditIcon\n                    onClick={this.handleEditProject}\n                    className={classes.icon}\n                  />\n                </Tooltip>\n                <Divider className={classes.iconDivider} />\n              </Fragment>\n            )\n          }\n          <Tooltip placement=\"top-start\" title={langDict.home.removeFavorites}>\n            <FavIcon onClick={this.makeFavorite} className={classes.heartIcon} />\n          </Tooltip>\n          <Tooltip\n            placement=\"top-start\"\n            title={selected ? langDict.home.hideActivity : langDict.home.showActivity}\n          >\n            <History\n              onClick={this.showActivity}\n              className={selected ? classes.heartIcon : classes.icon}\n            />\n          </Tooltip>\n        </Grid>\n        <Divider style={{ backgroundColor: '#EEE' }} />\n      </div>\n    );\n  }\n}\n\nProjectsItem.propTypes = {\n  project: PropTypes.any.isRequired,\n  classes: PropTypes.object.isRequired,\n  fetchUpdateFavorite: PropTypes.func.isRequired,\n  toggleEditProjectForm: PropTypes.func.isRequired,\n  boardCount: PropTypes.number.isRequired,\n  changeHoverProject: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n  selected: PropTypes.bool.isRequired,\n  onSelect: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    boardCount: boardCountByProject(ownProps, state),\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    fetchUpdateFavorite,\n    toggleEditProjectForm,\n    toggleDeleteProjectForm,\n    changeHoverProject,\n\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ProjectsItem));\n","import React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport ProjectsItem from './ProjectsItem';\n\nimport { allProjects } from '../../../selectors/projects';\nimport language from '../../../constants/language';\n\nconst styles = {\n  container: {\n    backgroundColor: '#2a3d41',\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  title: {\n    color: '#2a3d41',\n    fontWeight: 'bold',\n    fontSize: 16,\n    margin: '20px 0px',\n  },\n  warning: {\n    fontSize: 14,\n    color: '#999',\n    alignSelf: 'center',\n    margin: 20,\n  },\n};\n\nclass FoldersContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectActivity: '',\n    };\n    this.handleSelectProject = this.handleSelectProject.bind(this);\n  }\n\n  handleSelectProject(projectId) {\n    if (projectId === this.state.projectActivity) {\n      this.setState({ projectActivity: '' });\n    } else {\n      this.setState({ projectActivity: projectId });\n    }\n  }\n\n  render() {\n    const { projectActivity } = this.state;\n    const { classes, projects, selectedLanguage } = this.props;\n    return (\n      <Fragment>\n        <Typography className={classes.title}>\n          {language[selectedLanguage].home.favoriteProjects}:\n        </Typography>\n        <div className={classes.container}>\n          {projects.map(o => (\n            <ProjectsItem\n              project={o}\n              key={o.id}\n              selected={o.id === projectActivity}\n              onSelect={this.handleSelectProject}\n            />\n          ))}\n          {\n            !projects.length\n            && (\n              <Typography className={classes.warning}>\n                {language[selectedLanguage].home.noFavoriteProjects}\n              </Typography>\n            )\n          }\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nFoldersContainer.propTypes = {\n  classes: PropTypes.any.isRequired,\n  projects: PropTypes.array.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projects: allProjects(ownProps, state),\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(FoldersContainer));\n","import React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\n\nimport Typography from '@material-ui/core/Typography';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport FileIcon from '@material-ui/icons/FileCopy';\nimport { allFolders } from '../../selectors/folders';\nimport { toggleCreateProjectForm } from '../../actions/modals/projects';\nimport { toggleCreateFolderForm } from '../../actions/modals/folders';\n\nimport { fetchExportProjectsUser } from '../../actions/api/export';\nimport { fetchImportProject } from '../../actions/api/import';\n\nimport { notifySuccess } from '../../actions/notification';\n\nimport Modals from './Modals';\n\nimport FoldersContainer from './FoldersContainer';\nimport LikesContainer from './LikesContainer';\nimport LogsShowing from '../project/Modals/LogsModal/LogsShowing';\n\nimport language from '../../constants/language';\n\nconst styles = {\n  root: {\n    flex: 1,\n    backgroundColor: '#f0f0f0',\n    padding: 20,\n    paddingBottom: 40,\n    flexDirection: 'column',\n  },\n  title: {\n    color: '#2a3d41',\n    fontWeight: 'bold',\n    fontSize: 16,\n    margin: '20px 0px',\n  },\n  container: {\n    flex: 1,\n    padding: '0px 5px',\n    margin: '0px 5px',\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100%',\n  },\n  addFolderText: {\n    fontSize: 12,\n    color: 'white',\n    margin: '0px 0px',\n  },\n  addFolderButton: {\n    margin: 5,\n    padding: '0px 8px',\n    borderColor: 'white',\n    border: '1px solid #fff',\n    backgroundColor: '#ea5941',\n    '&:hover': {\n      backgroundColor: '#ca3921',\n    },\n    color: '#fff',\n    borderRadius: 0,\n  },\n  folderIcon: {\n    margin: '0px 5px',\n  },\n};\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.handleAddFolder = this.handleAddFolder.bind(this);\n    this.handleAddProject = this.handleAddProject.bind(this);\n    this.handleDownloadProjects = this.handleDownloadProjects.bind(this);\n    this.handleUploadProject = this.handleUploadProject.bind(this);\n  }\n\n  handleAddFolder() {\n    this.props.toggleCreateFolderForm();\n  }\n\n  handleAddProject() {\n    const defaultFolder = this.props.folders.find(\n      folder => folder.name === '<DefaultFolder>',\n    );\n    this.props.toggleCreateProjectForm(defaultFolder.id);\n  }\n\n  handleDownloadProjects() {\n    this.props.fetchExportProjectsUser().then(response => {\n      if (response.status === 200) {\n        const element = document.createElement(\"a\");\n        const json = JSON.stringify(response.body, null, \"\\t\");\n        const file = new Blob([json], {type: 'application/json'});\n        element.href = URL.createObjectURL(file);\n        element.download = \"export_projects.json\";\n        document.body.appendChild(element);\n        element.click();\n      }\n    })\n  }\n\n  handleUploadProject(e) {\n    const {\n      selectedLanguage,\n    } = this.props;\n    const fileReader = new FileReader();\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = e => {\n      console.log(JSON.parse(e.target.result));\n      console.log(fetchImportProject(JSON.parse(e.target.result)));\n      this.props.fetchImportProject(JSON.parse(e.target.result), \"import-proyect\").then(response => {\n        console.log(response);\n        if (response.status === 200){\n          this.props.notifySuccess(language[selectedLanguage].app.uploadComplete);\n        }\n      })\n    };\n  }\n\n  render() {\n    const {\n      classes, hoverId, selectedLanguage, folders,\n    } = this.props;\n    return (\n      <Fragment>\n        <Modals />\n        <Grid className={classes.root} container justify=\"center\">\n          <div>\n            <Button size=\"small\" color=\"secondary\" onClick={this.handleAddFolder} className={classes.addFolderButton}>\n              <Typography className={classes.addFolderText}>+ </Typography>\n              <FolderIcon className={classes.folderIcon} />\n              <Typography className={classes.addFolderText}>\n                {language[selectedLanguage].home.addFolder}\n              </Typography>\n            </Button>\n            <Button size=\"small\" color=\"secondary\" onClick={this.handleAddProject} className={classes.addFolderButton}>\n              <Typography className={classes.addFolderText}>+ </Typography>\n              <FileIcon className={classes.folderIcon} />\n              <Typography className={classes.addFolderText}>\n                {language[selectedLanguage].home.addProject}\n              </Typography>\n            </Button>\n            <Button size=\"small\" color=\"secondary\" onClick={this.handleDownloadProjects} className={classes.addFolderButton}>\n              <Typography className={classes.addFolderText}></Typography>\n              <CloudDownloadIcon className={classes.folderIcon} />\n              <Typography className={classes.addFolderText}>\n                {language[selectedLanguage].home.downloadProjects}\n              </Typography>\n            </Button>\n            <input\n              accept=\"application/JSON\"\n              className={classes.input}\n              style={{ display: 'none' }}\n              id=\"raised-button-file\"\n              type=\"file\"\n              onChange={(e)=>this.handleUploadProject(e)}\n            />\n            <label htmlFor=\"raised-button-file\">\n              <Button size=\"small\" color=\"secondary\" className={classes.addFolderButton} component=\"span\">\n                <Typography className={classes.addFolderText}></Typography>\n                <CloudUploadIcon className={classes.folderIcon} />\n                <Typography className={classes.addFolderText}>\n                  {language[selectedLanguage].home.uploadProjects}\n                </Typography>\n              </Button>\n            </label>\n          </div>\n          <Grid container style={{ flex: 1 }}>\n            <Grid className={classes.container} item>\n              <FoldersContainer folders={folders} />\n            </Grid>\n            <Grid className={classes.container} item>\n              <LikesContainer />\n            </Grid>\n            <Grid className={classes.container} item>\n              {hoverId !== ''\n                ? <LogsShowing isModal={false} />\n                : (\n                  <Typography className={classes.title}>\n                    {language[selectedLanguage].home.noProjectSelected}\n                  </Typography>\n                )\n              }\n\n            </Grid>\n          </Grid>\n        </Grid>\n      </Fragment>\n    );\n  }\n}\n\nHome.propTypes = {\n  folders: PropTypes.array.isRequired,\n  notifySuccess: PropTypes.func.isRequired,\n  toggleCreateFolderForm: PropTypes.func.isRequired,\n  toggleCreateProjectForm: PropTypes.func.isRequired,\n  fetchExportProjectsUser: PropTypes.func.isRequired,\n  fetchImportProject: PropTypes.func.isRequired,\n  classes: PropTypes.any.isRequired,\n  hoverId: PropTypes.string.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    hoverId: state.modal.logs.selectedProject,\n    selectedLanguage: state.user.language,\n    folders: allFolders(ownProps, state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    notifySuccess,\n    toggleCreateFolderForm,\n    toggleCreateProjectForm,\n    fetchExportProjectsUser,\n    fetchImportProject,\n   }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Home));\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { fetchGetFolders } from '../../actions/api/folders';\nimport { fetchGetProjects } from '../../actions/api/projects';\nimport { fetchGetBoards } from '../../actions/api/boards';\n\n// import { fetchedProjects } from '../../selectors/projects';\n// import { fetchedFolders } from '../../selectors/folders';\nimport { unselectAll } from '../../actions/user';\n\nimport CircularProgress from '../../components/lib/CircularProgress';\nimport HomeComponent from '../../components/home';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n  }\n\n  componentWillMount() {\n    this.props.unselectAll();\n    Promise.all([\n      this.props.fetchGetFolders(),\n      this.props.fetchGetProjects(),\n      this.props.fetchGetBoards(),\n    ]).then((responses) => {\n      if (responses[0].ok && responses[1].ok && responses[2].ok) {\n        this.setState({ loading: false });\n      }\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <CircularProgress />;\n    }\n    return <HomeComponent />;\n  }\n}\n\nHome.propTypes = {\n  fetchGetFolders: PropTypes.func.isRequired,\n  fetchGetProjects: PropTypes.func.isRequired,\n  fetchGetBoards: PropTypes.func.isRequired,\n  unselectAll: PropTypes.func.isRequired,\n  // didFetchFolders: PropTypes.bool.isRequired,\n  // didFetchProjects: PropTypes.bool.isRequired,\n};\n\nfunction mapStateToProps() {\n  return {\n    // didFetchFolders: fetchedFolders(ownProps, state),\n    // didFetchProjects: fetchedProjects(ownProps, state),\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    unselectAll,\n    fetchGetFolders,\n    fetchGetProjects,\n    fetchGetBoards,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import {\n  FETCH_GET_PROJECT,\n  FETCH_GET_ALL_PROJECTS,\n  FETCH_CREATE_PROJECT,\n  FETCH_DELETE_PROJECT,\n  FETCH_UPDATE_PROJECT,\n  FETCH_UPDATE_PROJECT_ORDER,\n  FETCH_UPDATE_PROJECT_FAVORITE,\n  FETCH_GITHUB_CONNECT,\n  FETCH_GITHUB_CONFIRMATION,\n  FETCH_GITHUB_REPO,\n  FETCH_GITHUB_REMOVE,\n  FETCH_PROJECT_REPO,\n  FETCH_PROJECT_REPO_ASSIGN,\n  FETCH_PROJECT_REPO_UNASSIGN,\n  FETCH_TASKS_PROJECT_BETWEEN_DATES,\n} from '../../constants/api/projects';\n\nexport const fetchGetProject = id => ({\n  type: FETCH_GET_PROJECT,\n  fetch: true,\n  url: `/projects/${id}/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGetProjects = () => ({\n  type: FETCH_GET_ALL_PROJECTS,\n  fetch: true,\n  url: '/projects/',\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchCreateProject = body => ({\n  type: FETCH_CREATE_PROJECT,\n  fetch: true,\n  url: '/projects/',\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchDeleteProject = id => ({\n  type: FETCH_DELETE_PROJECT,\n  fetch: true,\n  url: `/projects/${id}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateProject = (id, body) => ({\n  type: FETCH_UPDATE_PROJECT,\n  fetch: true,\n  url: `/projects/${id}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchUpdateProjectOrder = (projectId, body) => ({\n  type: FETCH_UPDATE_PROJECT_ORDER,\n  fetch: true,\n  url: `/projects/${projectId}/order/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchUpdateFavorite = id => ({\n  type: FETCH_UPDATE_PROJECT_FAVORITE,\n  fetch: true,\n  url: `/projects/${id}/favorite/`,\n  params: {\n    method: 'PUT',\n  },\n});\n\nexport const fetchGithubConnect = (id) => ({\n  type: FETCH_GITHUB_CONNECT,\n  fetch: true,\n  url: `/projects/${id}/gits/new/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const githubConfirmation = (id, body) => ({\n  type: FETCH_GITHUB_CONFIRMATION,\n  fetch: true,\n  url: `/projects/${id}/gits/link/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchGithubRepo = id => ({\n  type: FETCH_GITHUB_REPO,\n  fetch: true,\n  url: `/projects/${id}/gits/repos/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchProjectRepo = id => ({\n  type: FETCH_PROJECT_REPO,\n  fetch: true,\n  url: `/projects/${id}/repos/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGithubRemove = id => ({\n  type: FETCH_GITHUB_REMOVE,\n  fetch: true,\n  url: `/projects/${id}/gits`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchProjectRepoAssign = (id, body) => ({\n  type: FETCH_PROJECT_REPO_ASSIGN,\n  fetch: true,\n  url: `/projects/${id}/gits/link_repo`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchProjectRepoUnassign = (projectId, repoId) => ({\n  type: FETCH_PROJECT_REPO_UNASSIGN,\n  fetch: true,\n  url: `/projects/${projectId}/repos/${repoId}`,\n  params: {\n    method: 'DELETE',\n  },\n});\nexport const fetchGetTasksProject = (id, body) => ({\n  type: FETCH_TASKS_PROJECT_BETWEEN_DATES,\n  fetch: true,\n  url: `/projects/${id}/workload`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n","import {\n  FETCH_GET_ALL_PROJECT_BOARDS,\n  FETCH_GET_ALL_BOARDS,\n  FETCH_CREATE_BOARD,\n  FETCH_UPDATE_BOARD,\n  FETCH_DELETE_BOARD,\n  FETCH_UPDATE_BOARD_ORDER,\n  FETCH_REPORTED_TASKS_BETWEEN_DATES,\n  FETCH_TASKS_BETWEEN_DATES,\n} from '../../constants/api/boards';\n\nexport const fetchCreateBoard = body => ({\n  type: FETCH_CREATE_BOARD,\n  fetch: true,\n  url: '/boards/',\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchGetProjectBoards = projectId => ({\n  type: FETCH_GET_ALL_PROJECT_BOARDS,\n  fetch: true,\n  url: `/projects/${projectId}/boards`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGetBoards = () => ({\n  type: FETCH_GET_ALL_BOARDS,\n  fetch: true,\n  url: '/boards',\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchUpdateBoard = (id, body) => ({\n  type: FETCH_UPDATE_BOARD,\n  fetch: true,\n  url: `/boards/${id}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchDeleteBoard = id => ({\n  type: FETCH_DELETE_BOARD,\n  fetch: true,\n  url: `/boards/${id}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateBoardOrder = (id, body) => ({\n  type: FETCH_UPDATE_BOARD_ORDER,\n  fetch: true,\n  url: `/boards/${id}/order`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\nexport const fetchGetReportedTasksBoard = (id, body) => ({\n  type: FETCH_REPORTED_TASKS_BETWEEN_DATES,\n  fetch: true,\n  url: `/boards/${id}/reported_tasks_between_dates`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\nexport const fetchGetTasksBoard = (id, body) => ({\n  type: FETCH_TASKS_BETWEEN_DATES,\n  fetch: true,\n  url: `/boards/${id}/tasks_between_dates`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n","import {\n  FETCH_GET_FOLDER,\n  FETCH_GET_ALL_FOLDERS,\n  FETCH_CREATE_FOLDER,\n  FETCH_DELETE_FOLDER,\n  FETCH_UPDATE_FOLDER,\n} from '../../constants/api/folders';\n\nexport const fetchGetFolders = () => ({\n  type: FETCH_GET_ALL_FOLDERS,\n  fetch: true,\n  url: '/folders/',\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGetFolder = id => ({\n  type: FETCH_GET_FOLDER,\n  fetch: true,\n  url: `/folder/${id}/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchCreateFolder = body => ({\n  type: FETCH_CREATE_FOLDER,\n  fetch: true,\n  url: '/folders/',\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchDeleteFolder = id => ({\n  type: FETCH_DELETE_FOLDER,\n  fetch: true,\n  url: `/folders/${id}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateFolder = (id, body) => ({\n  type: FETCH_UPDATE_FOLDER,\n  fetch: true,\n  url: `/folders/${id}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport MaterialExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport MaterialExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport MaterialExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Divider from '@material-ui/core/Divider';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n/* eslint-disable react/prop-types */\nconst style = {\n  content: {\n    margin: 0,\n    padding: 0,\n  },\n  icon: {\n    color: '#ea5941',\n    width: '26px',\n    height: '30px',\n  },\n  materialRoot: {\n    minHeight: '0 !important',\n    maxHeight: '48px',\n  },\n  marterialeExpanded: {\n    margin: '10px !important',\n  },\n  materialPanel: {\n    boxShadow: '0px 0px 0px 0px',\n  },\n};\n\nconst ExpansionPanel = ({\n  children,\n  headerColor,\n  classes,\n  summary,\n  summaryStyle,\n  ...props\n}) => {\n  return (\n    <MaterialExpansionPanel {...props} className={classes.materialPanel}>\n      <MaterialExpansionPanelSummary\n        style={summaryStyle}\n        expandIcon={<ExpandMoreIcon className={classes.icon} />}\n        classes={{\n          root: classes.materialRoot,\n          content: classes.marterialeExpanded,\n        }}\n      >\n        {summary}\n      </MaterialExpansionPanelSummary>\n      <Divider />\n      <MaterialExpansionPanelDetails className={classes.content}>\n        {children}\n      </MaterialExpansionPanelDetails>\n    </MaterialExpansionPanel>\n  );\n};\n\nExpansionPanel.propTypes = {\n  children: PropTypes.any.isRequired,\n  classes: PropTypes.any.isRequired,\n  summary: PropTypes.any.isRequired,\n  summaryStyle: PropTypes.any,\n};\n\nExpansionPanel.defaultProps = {\n  summaryStyle: {},\n};\n\nexport default withStyles(style)(ExpansionPanel);\n","import {\n  TOGGLE_ACCEPT_MODAL_INVITATION,\n  TOGGLE_SEND_MODAL_INVITATION,\n  TOGGLE_EDIT_MODAL_INVITATION,\n} from '../../constants/modals/invitations';\n\nexport const toggleAcceptInvitationForm = (id, projectId) => ({\n  type: TOGGLE_ACCEPT_MODAL_INVITATION,\n  payload: {\n    body: {\n      id,\n      projectId,\n    },\n  },\n});\n\nexport const toggleSendInvitationForm = id => ({\n  type: TOGGLE_SEND_MODAL_INVITATION,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const toggleEditInvitationForm = id => ({\n  type: TOGGLE_EDIT_MODAL_INVITATION,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n","import {\n  TOGGLE_SHOW_MODAL_LOGS,\n  LAST_HOVER_PROJECT,\n} from '../../constants/modals/logs';\n\nconst toggleShowLogs = id => ({\n  type: TOGGLE_SHOW_MODAL_LOGS,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const changeHoverProject = body => ({\n  type: LAST_HOVER_PROJECT,\n  payload: {\n    body,\n  },\n});\n\nexport { toggleShowLogs as default };\n","import {\n  FETCH_EXPORT_BOARD,\n  FETCH_EXPORT_PROYECT,\n  FETCH_EXPORT_PROYECTS_USER,\n} from '../../constants/api/export';\n\n\nexport const fetchExportBoard = boardId => ({\n  type: FETCH_EXPORT_BOARD,\n  fetch: true,\n  url: '/export/board',\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    board_id: boardId,\n  },\n});\n\nexport const fetchExportProject = projectId => ({\n  type: FETCH_EXPORT_PROYECT,\n  fetch: true,\n  url: `/export/project`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    project_id: projectId,\n  },\n});\n\nexport const fetchExportProjectsUser = () => ({\n  type: FETCH_EXPORT_PROYECTS_USER,\n  fetch: true,\n  url: `/export/projects`,\n  params: {\n    method: 'GET',\n  },\n});\n","export const FETCH_EXPORT_BOARD = 'FETCH_EXPORT_BOARD';\nexport const FETCH_EXPORT_PROYECT = 'FETCH_EXPORT_PROYECT';\nexport const FETCH_EXPORT_PROYECTS_USER = 'FETCH_EXPORT_PROYECTS_USER';\n"],"sourceRoot":""}
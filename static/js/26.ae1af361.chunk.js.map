{"version":3,"sources":["components/report/share/WorkLoad/WorkLoad.js","components/report/share/WorkLoad/index.js","routes/workloadReport/index.js","actions/api/members.js","actions/api/projects.js","actions/api/boards.js","actions/api/hours.js"],"names":["HighchartsMore","Highcharts","WorkLoad","props","_this","Object","classCallCheck","this","_super","call","state","loading","setOptions","bind","assertThisInitialized","setState","prevProps","equal","tasks","chartOptions","chart","selectedLanguage","_this$formatData","formatData","names","type","title","text","language","WorkLoadChart","xAxis","categories","yAxis","min","legend","shadow","tooltip","shared","plotOptions","bar","grouping","borderWidth","series","_this$props","members","newData","userAssigned","userNames","total_estimated_hours","new_tasks","forEach","task","assigned","length","dict","estimated_hours","name","user_id","member","id","push","userIds","Array","from","keys","user","value","indexOf","parseFloat","data","values","color","pointPadding","pointPlacement","stacking","react_default","a","createElement","CircularProgress","highcharts_react_min_default","highcharts","options","Component","connect","dispatch","bindActionCreators","fetchGetHours","WorkLoadContainer","filterOption","hours","startDate","endDate","boardId","changeData","_this2","fetchProjectMembers","projectId","then","response","ok","body","map","miembro","tasks_reports","count","_this3","start_date","end_date","fetchGetTasksProject","new_hours","workload","users","fetchGetTasksBoard","_this$state","classes","langDict","className","headerContainer","Typography_default","report","line","grid","style","display","alignSelf","marginLeft","boardSelection","to","wrapper","share_WorkLoad_WorkLoad","project","reporthoursFilterOption","notifyError","withStyles","height","width","modalContent","modalContainer","fontSize","fontFamiliy","margin","fontWeight","marginTop","marginBottom","selectText","backgroundColor","info","box","marginRight","padding","customIcon","border-radius","Report","selectProject","react","share_WorkLoad","ownProps","String","match","params","board_id","__webpack_require__","d","__webpack_exports__","fetchTaskAssign","fetchTaskUnassign","fetchUpdateMember","fetchDeleteMember","fetchQuitMember","_constants_api_members__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_ALL_MEMBERS","fetch","url","concat","method","FETCH_TASK_ASSIGN","userId","FETCH_TASK_UNASSIGN","memberId","FETCH_UPDATE_MEMBER","FETCH_DELETE_MEMBER","FETCH_QUIT_PROJECT","fetchGetProject","FETCH_GET_PROJECT","fetchGetProjects","FETCH_GET_ALL_PROJECTS","fetchCreateProject","FETCH_CREATE_PROJECT","fetchDeleteProject","FETCH_DELETE_PROJECT","fetchUpdateProject","FETCH_UPDATE_PROJECT","fetchUpdateProjectOrder","FETCH_UPDATE_PROJECT_ORDER","fetchUpdateFavorite","FETCH_UPDATE_PROJECT_FAVORITE","fetchGithubConnect","FETCH_GITHUB_CONNECT","githubConfirmation","FETCH_GITHUB_CONFIRMATION","fetchGithubRepo","FETCH_GITHUB_REPO","fetchProjectRepo","FETCH_PROJECT_REPO","fetchGithubRemove","FETCH_GITHUB_REMOVE","fetchProjectRepoAssign","FETCH_PROJECT_REPO_ASSIGN","fetchProjectRepoUnassign","repoId","FETCH_PROJECT_REPO_UNASSIGN","FETCH_TASKS_PROJECT_BETWEEN_DATES","queryParams","_Users_carlosjouanne_Desktop_T2_2021_2_S4_Grupo1_Web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fetchCreateBoard","FETCH_CREATE_BOARD","fetchGetProjectBoards","FETCH_GET_ALL_PROJECT_BOARDS","fetchGetBoards","FETCH_GET_ALL_BOARDS","fetchUpdateBoard","FETCH_UPDATE_BOARD","fetchDeleteBoard","FETCH_DELETE_BOARD","fetchGetReportedTasksBoard","FETCH_REPORTED_TASKS_BETWEEN_DATES","FETCH_TASKS_BETWEEN_DATES","fetchAddHours","fetchDeleteHour","_constants_api_hours__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_HOURS","FETCH_ADD_HOURS","FETCH_DELETE_HOUR"],"mappings":"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","file":"static/js/26.ae1af361.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport equal from 'fast-deep-equal';\nimport CircularProgress from '../../../lib/CircularProgress';\nimport { bindActionCreators } from 'redux';\n\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport HighchartsMore from 'highcharts/highcharts-more';\n\nimport { fetchGetHours } from '../../../../actions/api/hours';\n\n\nimport language from '../../../../constants/language';\nimport { connect } from 'react-redux';\n\n\nHighchartsMore(Highcharts);\n\nclass WorkLoad extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.setOptions.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loading: false});\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!equal(this.props.tasks, prevProps.tasks)) {\n      const chartOptions = this.setOptions();\n      Highcharts.chart('chart', chartOptions);\n    }\n    if (!equal(this.props.selectedLanguage, prevProps.selectedLanguage)) {\n      const chartOptions = this.setOptions();\n      Highcharts.chart('chart', chartOptions);\n    }\n  }\n\n\n  setOptions() {\n    const {names, tasks} = this.formatData();\n    const { selectedLanguage } = this.props;\n    return {\n        chart: {\n          type: 'bar'\n        },\n        title: {\n          text: language[selectedLanguage].WorkLoadChart.title\n        },\n        xAxis: {\n          categories: names,\n        },\n        yAxis: [{\n          min: 0,\n          title: {\n            text: language[selectedLanguage].WorkLoadChart.yAxis\n          }  \n        }],\n        legend: {\n          shadow: false\n        },\n        tooltip: {\n          shared: true\n        },\n        plotOptions: {\n          bar: {\n            grouping: false,\n            shadow: false,\n            borderWidth: 0\n          }\n        },\n        series: tasks,\n\n    }\n  }\n  formatData() {\n    const { selectedLanguage, tasks, members} = this.props;\n    const newData = [];\n    const userAssigned = {};\n    const userNames = [];\n    const total_estimated_hours = {};\n    const new_tasks = [];\n    tasks.forEach((task) => {\n      const assigned = task.assigned;\n      if (assigned.length > 0){\n        const dict = {};\n        dict['estimated_hours'] = task.estimated_hours;\n        dict['name'] = task.name;\n        dict['hours'] = [];\n        dict['users'] = [];\n        assigned.forEach((user_id)=>{\n          if (!userAssigned[user_id]){\n            members.forEach((member)=>{\n              if (member.id === user_id){\n                userAssigned[user_id] = member.name;\n                userNames.push(member.name);\n              }\n            });  \n          }\n          dict['users'].push(user_id);\n        });\n        new_tasks.push(dict);\n      }\n    });\n    const userIds =  Array.from((Object.keys(userAssigned)));\n    new_tasks.forEach((task) =>{\n      userIds.forEach((user) =>{\n        var value = 0;\n        if (task['users'].indexOf(user) > -1){\n          value = parseFloat(task.estimated_hours);\n        }\n        task['hours'].push(value); \n        if (!total_estimated_hours[user]){\n          total_estimated_hours[user] = 0;\n        }\n        total_estimated_hours[user] += value;\n        \n      });\n    });\n    newData.push({\n      name: language[selectedLanguage].WorkLoadChart.estimated_hours,\n      data: Array.from(Object.values(total_estimated_hours)),\n      color: \t'#d8d8d8',\n      pointPadding: 0.2,\n      pointPlacement: -0.2\n\n    });\n    new_tasks.forEach((task) => {\n      newData.push({\n        name: task['name'],\n        data: task['hours'],\n        pointPadding: 0.2,\n        pointPlacement: -0.2,\n        stacking: 'normal'\n      }); \n    });\n    \n    return ({\n      'names': userNames,\n      'tasks': newData,\n    });\n  }\n\n  render() {\n    if (this.state.loading) return <CircularProgress />;\n    if (this.props.tasks.length > 0){\n      const chartOptions = this.setOptions();\n      return (\n        <div>\n          <div id=\"chart\">\n            <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nWorkLoad.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  members: PropTypes.array.isRequired,\n  boardId: PropTypes.string.isRequired,\n  fetchGetHours: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n  endDate: PropTypes.any.isRequired,\n  startDate: PropTypes.any.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ fetchGetHours }, dispatch);\n};\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(WorkLoad);","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '../../../lib/CircularProgress';\n\nimport { notifyError } from '../../../../actions/notification';\nimport { fetchGetTasksBoard } from '../../../../actions/api/boards';\nimport { fetchGetTasksProject } from '../../../../actions/api/projects';\n\nimport { fetchProjectMembers } from '../../../../actions/api/members';\n\nimport language from '../../../../constants/language';\nimport WorkLoad from './WorkLoad';\n\nconst styles = {\n  wrapper: {\n    height: '400px',\n    width: 'auto',\n  },\n  modalContent: {\n    width: '600px',\n    height: '400px',\n  },\n  modalContainer: {\n    // width: '800px',\n  },\n  title: {\n    fontSize: '28px',\n    fontFamiliy:\n      '-apple-system, \".SFNSText-Regular\", \"San Francisco\", BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Lucida Grande\", Arial, sans-serif',\n    color: 'rgb(68, 68, 68)',\n  },\n  headerContainer: {\n    margin: '30px',\n    width: 'auto',\n  },\n  text: {\n    color: '#2a3d41',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: '10px',\n    marginBottom: '10px',\n  },\n  selectText: {\n    color: '#2a3d41',\n    fontSize: 14,\n    fontWeight: 'normal',\n    marginTop: '10px',\n    marginBottom: '10px',\n    marginLeft: '10px',\n  },\n  grid: {\n    display: 'flex',\n    width: '100%',\n    margin: '10px',\n  },\n  line: {\n    width: 'auto',\n    height: '1px',\n    backgroundColor: '#CCCCCC',\n  },\n  info: {\n    color: '#2a3d41',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: '5px',\n  },\n  box: {\n    display: 'flex',\n    marginRight: '10px',\n    padding: '5px',\n  },\n  customIcon: {\n    height: '24px',\n    width: '24px',\n    display: 'block',\n    'border-radius': '50%',\n    marginRight: '5px',\n  },\n};\n\nclass WorkLoadContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      tasks: [],\n      filterOption: '',\n      members: [],\n      hours: 0,\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      boardId: this.props.boardId,\n      assigned: false,\n\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n\n  componentDidMount() {\n    this.props\n      .fetchProjectMembers(this.props.projectId)\n      .then((response) => {\n        if (response.ok) {\n          this.setState({\n            members: response.body[\"members\"].map((miembro) => {\n              return (\n                { id: miembro[\"id\"], name: miembro['name'], tasks_reports: {}, count: 0, hours: [] })\n            })\n          });\n        }\n      });\n    this.changeData(this.props.boardId, this.props.startDate, this.props.endDate);\n  }\n\n  changeData(boardId, startDate, endDate) {\n    const body = {\n      start_date: startDate,\n      end_date: endDate,\n    };\n    if (boardId === this.props.projectId) {\n      this.props.fetchGetTasksProject(this.props.projectId, body).then((response) => {\n        if (response.ok) {\n          let new_hours = 0;\n          response.body.workload.forEach((task) => {\n            new_hours += parseFloat(task.estimated_hours);\n            if (task.assigned.length > 0) {\n              this.setState({ assigned: true });\n            }\n          });\n          this.setState({ tasks: response.body.workload, users: response.body.users, loading: false, filterOption: boardId, hours: new_hours });\n        }\n      });\n    }\n    else {\n      this.props.fetchGetTasksBoard(boardId, body).then((response) => {\n        if (response.ok) {\n          let new_hours = 0;\n          response.body.tasks.forEach((task) => {\n            new_hours += parseFloat(task.estimated_hours);\n            if (task.assigned.length > 0) {\n              this.setState({ assigned: true });\n            }\n          });\n          this.setState({ tasks: response.body.tasks, users: response.body.users, loading: false, filterOption: boardId, hours: new_hours });\n        }\n      });\n    }\n    this.setState({\n      loading: false,\n      filterOption: '',\n    });\n  }\n\n  render() {\n    if (this.state.loading) return <CircularProgress />;\n    const { tasks, members, endDate, startDate, boardId, hours } = this.state;\n    const { classes, selectedLanguage } = this.props;\n    const langDict = language[selectedLanguage].WorkLoadChart;\n    return (\n      <div className={classes.headerContainer}>\n        <Typography className={classes.title}>\n          {language[selectedLanguage].report.workload}\n        </Typography>\n        <div className={classes.line} />\n        <div className={classes.grid}>\n          <div\n            style={{ display: 'flex', alignSelf: 'center', marginLeft: '10px' }}\n          >\n            <Typography className={classes.text}>\n              {langDict.boardSelection}:{' '}{this.props.boardId}\n            </Typography>\n          </div>\n          <div\n            style={{ display: 'flex', alignSelf: 'center', marginLeft: '10px' }}\n          >\n            <Typography className={classes.text}>\n              {langDict.from}:{' '}{this.props.startDate}\n            </Typography>\n          </div>\n          <div\n            style={{ display: 'flex', alignSelf: 'center', marginLeft: '10px' }}\n          >\n            <Typography className={classes.text}>\n              {langDict.to}:{' '}{this.props.endDate}\n            </Typography>\n          </div>\n        </div>\n        <div className={classes.line} />\n        <div className={classes.wrapper}>\n          {tasks.length > 0 && hours > 0 && <WorkLoad tasks={tasks} members={members} startDate={startDate} endDate={endDate} boardId={boardId} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nWorkLoadContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  projectId: PropTypes.string.isRequired,\n  notifyError: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n  fetchGetTasksBoard: PropTypes.func.isRequired,\n  fetchGetTasksProject: PropTypes.func.isRequired,\n  filterOption: PropTypes.any.isRequired,\n  boardId: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired,\n  startDate: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    filterOption: state.project.reporthoursFilterOption,\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchProjectMembers,\n      notifyError,\n      fetchGetTasksBoard,\n      fetchGetTasksProject,\n\n    },\n    dispatch,\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(WorkLoadContainer));\n","import React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectProject } from '../../actions/user';\nimport { fetchProjectMembers } from '../../actions/api/members';\n\nimport CircularProgress from '../../components/lib/CircularProgress';\n\nimport WorkloadReportsContainer from '../../components/report/share/WorkLoad';\n\nclass Report extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.selectProject(this.props.projectId);\n        this.props.fetchProjectMembers(this.props.projectId)\n            .then(() => {\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress />;\n        }\n        return (\n            <Fragment>\n                <WorkloadReportsContainer projectId={this.props.projectId} startDate={this.props.startDate} endDate={this.props.endDate} boardId={this.props.boardId} />\n            </Fragment>\n        );\n    }\n}\n\nReport.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    startDate: PropTypes.string.isRequired,\n    endDate: PropTypes.string.isRequired,\n    boardId: PropTypes.string.isRequired,\n    selectProject: PropTypes.func.isRequired,\n    fetchProjectMembers: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        projectId: String(ownProps.match.params.id),\n        startDate: String(ownProps.match.params.start_date),\n        endDate: String(ownProps.match.params.end_date),\n        boardId: String(ownProps.match.params.board_id),\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        selectProject,\n        fetchProjectMembers,\n    }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);\n","import {\n  FETCH_GET_ALL_MEMBERS,\n  FETCH_TASK_ASSIGN,\n  FETCH_TASK_UNASSIGN,\n  FETCH_UPDATE_MEMBER,\n  FETCH_DELETE_MEMBER,\n  FETCH_QUIT_PROJECT,\n} from '../../constants/api/members';\n\nexport const fetchProjectMembers = id => ({\n  type: FETCH_GET_ALL_MEMBERS,\n  fetch: true,\n  url: `/projects/${id}/members/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchTaskAssign = (id, body) => ({\n  type: FETCH_TASK_ASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/assign/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchTaskUnassign = (id, userId) => ({\n  type: FETCH_TASK_UNASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/users/${userId}/unassign/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateMember = (projectId, memberId, body) => ({\n  type: FETCH_UPDATE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchDeleteMember = (projectId, memberId) => ({\n  type: FETCH_DELETE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchQuitMember = (projectId, memberId) => ({\n  type: FETCH_QUIT_PROJECT,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n","import {\n  FETCH_GET_PROJECT,\n  FETCH_GET_ALL_PROJECTS,\n  FETCH_CREATE_PROJECT,\n  FETCH_DELETE_PROJECT,\n  FETCH_UPDATE_PROJECT,\n  FETCH_UPDATE_PROJECT_ORDER,\n  FETCH_UPDATE_PROJECT_FAVORITE,\n  FETCH_GITHUB_CONNECT,\n  FETCH_GITHUB_CONFIRMATION,\n  FETCH_GITHUB_REPO,\n  FETCH_GITHUB_REMOVE,\n  FETCH_PROJECT_REPO,\n  FETCH_PROJECT_REPO_ASSIGN,\n  FETCH_PROJECT_REPO_UNASSIGN,\n  FETCH_TASKS_PROJECT_BETWEEN_DATES,\n} from '../../constants/api/projects';\n\nexport const fetchGetProject = id => ({\n  type: FETCH_GET_PROJECT,\n  fetch: true,\n  url: `/projects/${id}/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGetProjects = () => ({\n  type: FETCH_GET_ALL_PROJECTS,\n  fetch: true,\n  url: '/projects/',\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchCreateProject = body => ({\n  type: FETCH_CREATE_PROJECT,\n  fetch: true,\n  url: '/projects/',\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchDeleteProject = id => ({\n  type: FETCH_DELETE_PROJECT,\n  fetch: true,\n  url: `/projects/${id}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateProject = (id, body) => ({\n  type: FETCH_UPDATE_PROJECT,\n  fetch: true,\n  url: `/projects/${id}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchUpdateProjectOrder = (projectId, body) => ({\n  type: FETCH_UPDATE_PROJECT_ORDER,\n  fetch: true,\n  url: `/projects/${projectId}/order/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchUpdateFavorite = id => ({\n  type: FETCH_UPDATE_PROJECT_FAVORITE,\n  fetch: true,\n  url: `/projects/${id}/favorite/`,\n  params: {\n    method: 'PUT',\n  },\n});\n\nexport const fetchGithubConnect = (id) => ({\n  type: FETCH_GITHUB_CONNECT,\n  fetch: true,\n  url: `/projects/${id}/gits/new/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const githubConfirmation = (id, body) => ({\n  type: FETCH_GITHUB_CONFIRMATION,\n  fetch: true,\n  url: `/projects/${id}/gits/link/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchGithubRepo = id => ({\n  type: FETCH_GITHUB_REPO,\n  fetch: true,\n  url: `/projects/${id}/gits/repos/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchProjectRepo = id => ({\n  type: FETCH_PROJECT_REPO,\n  fetch: true,\n  url: `/projects/${id}/repos/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGithubRemove = id => ({\n  type: FETCH_GITHUB_REMOVE,\n  fetch: true,\n  url: `/projects/${id}/gits`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchProjectRepoAssign = (id, body) => ({\n  type: FETCH_PROJECT_REPO_ASSIGN,\n  fetch: true,\n  url: `/projects/${id}/gits/link_repo`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchProjectRepoUnassign = (projectId, repoId) => ({\n  type: FETCH_PROJECT_REPO_UNASSIGN,\n  fetch: true,\n  url: `/projects/${projectId}/repos/${repoId}`,\n  params: {\n    method: 'DELETE',\n  },\n});\nexport const fetchGetTasksProject = (id, body) => ({\n  type: FETCH_TASKS_PROJECT_BETWEEN_DATES,\n  fetch: true,\n  url: `/projects/${id}/workload`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n","import {\n  FETCH_GET_ALL_PROJECT_BOARDS,\n  FETCH_GET_ALL_BOARDS,\n  FETCH_CREATE_BOARD,\n  FETCH_UPDATE_BOARD,\n  FETCH_DELETE_BOARD,\n  FETCH_UPDATE_BOARD_ORDER,\n  FETCH_REPORTED_TASKS_BETWEEN_DATES,\n  FETCH_TASKS_BETWEEN_DATES,\n} from '../../constants/api/boards';\n\nexport const fetchCreateBoard = body => ({\n  type: FETCH_CREATE_BOARD,\n  fetch: true,\n  url: '/boards/',\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchGetProjectBoards = projectId => ({\n  type: FETCH_GET_ALL_PROJECT_BOARDS,\n  fetch: true,\n  url: `/projects/${projectId}/boards`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGetBoards = () => ({\n  type: FETCH_GET_ALL_BOARDS,\n  fetch: true,\n  url: '/boards',\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchUpdateBoard = (id, body) => ({\n  type: FETCH_UPDATE_BOARD,\n  fetch: true,\n  url: `/boards/${id}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchDeleteBoard = id => ({\n  type: FETCH_DELETE_BOARD,\n  fetch: true,\n  url: `/boards/${id}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateBoardOrder = (id, body) => ({\n  type: FETCH_UPDATE_BOARD_ORDER,\n  fetch: true,\n  url: `/boards/${id}/order`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\nexport const fetchGetReportedTasksBoard = (id, body) => ({\n  type: FETCH_REPORTED_TASKS_BETWEEN_DATES,\n  fetch: true,\n  url: `/boards/${id}/reported_tasks_between_dates`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\nexport const fetchGetTasksBoard = (id, body) => ({\n  type: FETCH_TASKS_BETWEEN_DATES,\n  fetch: true,\n  url: `/boards/${id}/tasks_between_dates`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n","import {\n  FETCH_ADD_HOURS,\n  FETCH_GET_HOURS,\n  FETCH_DELETE_HOUR,\n} from '../../constants/api/hours';\n\nexport const fetchGetHours = id => ({\n  type: FETCH_GET_HOURS,\n  fetch: true,\n  url: `/tasks/${id}/hours`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchAddHours = (id, body) => ({\n  type: FETCH_ADD_HOURS,\n  fetch: true,\n  url: `/tasks/${id}/hours`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchDeleteHour = id => ({\n  type: FETCH_DELETE_HOUR,\n  fetch: true,\n  url: `/hours/${id}`,\n  params: {\n    method: 'DELETE',\n  },\n});\n"],"sourceRoot":""}
{"version":3,"sources":["components/login/ResendContainer.js","routes/resendPass/index.js"],"names":["styles","root","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","concat","Background","flex","display","alignItems","flexDirection","justifyContent","formTitle","paddingLeft","paddingTop","formInput","paddingRight","paddingBottom","welcome","marginBottom","color","fontSize","title","fontWeight","logo","marginRight","ResendContainer","props","_this","Object","classCallCheck","this","_super","call","state","email","redirect","handleEmail","bind","assertThisInitialized","handleSubmit","isUnmounted","event","value","setState","_this2","preventDefault","selectedLanguage","sendResendConfirmation","then","response","ok","notifySuccess","language","login","resentEmail","_this$state","_this$props","classes","isAuthenticated","react_default","a","createElement","Redirect","to","Container","Card","Typography_default","className","variant","component","resendConfirmationEmail","Form","onSubmit","TextField","onChange","type","name","fullWidth","label","required","id","autoFocus","PrimaryButton","resend","Component","connect","errorMsg","auth","errorMessage","successMessage","user","dispatch","bindActionCreators","notifyError","withStyles","ResendPass","_ref","react","login_ResendContainer","defaultProps"],"mappings":"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","file":"static/js/45.064c86a7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Background from '../../assets/background.png';\nimport Form from '../lib/Form';\nimport TextField from '../lib/TextField';\nimport PrimaryButton from '../lib/Button/PrimaryButton';\nimport CardPanel from '../lib/Card';\nimport Container from './Container';\nimport { sendResendConfirmation } from '../../actions/api/auth';\nimport { notifyError, notifySuccess } from '../../actions/notification';\nimport language from '../../constants/language';\n\nconst styles = {\n  root: {\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundImage: `url(${Background})`,\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  formTitle: {\n    paddingLeft: '2.5%',\n    paddingTop: '3%',\n  },\n  formInput: {\n    paddingLeft: '5%',\n    paddingRight: '5%',\n    paddingBottom: '5%',\n  },\n  welcome: {\n    marginBottom: 20,\n    color: 'white',\n    fontSize: 20,\n  },\n  title: {\n    marginBottom: 60,\n    color: 'white',\n    fontSize: 50,\n    fontWeight: 'bold',\n    alignItems: 'felx-end',\n  },\n  logo: {\n    color: '#ea5941',\n    fontSize: 80,\n    marginBottom: -13,\n    marginRight: 10,\n  },\n};\n\nclass ResendContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      redirect: false,\n    };\n\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentWillUnmount() {\n    this.isUnmounted = true;\n  }\n\n  handleEmail(event) {\n    const value = event;\n    this.setState({\n      email: value,\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { email } = this.state;\n    const { selectedLanguage } = this.props;\n    this.props.sendResendConfirmation({ email })\n      .then((response) => {\n        if (response.ok) {\n          this.props.notifySuccess(language[selectedLanguage].login.resentEmail);\n          this.setState({ redirect: true });\n        }\n      });\n  }\n\n  render() {\n    const { email, redirect } = this.state;\n    const { classes, selectedLanguage } = this.props;\n    if (this.props.isAuthenticated) {\n      return <Redirect to=\"/welcome\" />;\n    }\n    if (redirect) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <Container>\n        <CardPanel>\n          <Typography className={classes.formTitle} variant=\"headline\" component=\"h2\">\n            {language[selectedLanguage].login.resendConfirmationEmail}\n          </Typography>\n          <Form\n            onSubmit={this.handleSubmit}\n            className={classes.formInput}\n          >\n            <TextField\n              onChange={this.handleEmail}\n              type=\"email\"\n              name={email}\n              fullWidth\n              label={language[selectedLanguage].login.email}\n              required\n              id=\"user\"\n              autoFocus\n            />\n            <PrimaryButton\n              type=\"submit\"\n            >\n              {language[selectedLanguage].login.resend}\n            </PrimaryButton>\n          </Form>\n        </CardPanel>\n      </Container>\n    );\n  }\n}\n\nResendContainer.propTypes = {\n  classes: PropTypes.any.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired,\n  notifySuccess: PropTypes.func.isRequired,\n  sendResendConfirmation: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    errorMsg: state.auth.errorMessage,\n    isAuthenticated: state.auth.isAuthenticated,\n    successMessage: state.auth.successMessage,\n    selectedLanguage: state.user.language,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ notifyError, notifySuccess, sendResendConfirmation }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ResendContainer));\n","import React, { Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport ResendContainer from '../../components/login/ResendContainer';\n\nconst ResendPass = ({ isAuthenticated }) => {\n  if (!isAuthenticated) {\n    return (\n      <Fragment>\n        <ResendContainer />\n      </Fragment>\n    );\n  }\n  return (\n    <Redirect to=\"/welcome\" />\n  );\n};\n\nResendPass.propTypes = {\n  isAuthenticated: PropTypes.bool,\n};\n\nResendPass.defaultProps = {\n  isAuthenticated: false,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n  };\n}\n\nexport default connect(mapStateToProps)(ResendPass);\n"],"sourceRoot":""}
{"version":3,"sources":["assets/flag_button.svg","components/milestone/Modals/ModalForm/index.js","actions/modals/milestones.js","components/milestone/Modals/MilestoneModal/CreateModal.js","components/milestone/Modals/MilestoneModal/EditModal.js","components/milestone/Modals/MilestoneModal/DeleteModal.js","components/milestone/Modals/MilestoneModal/index.js","components/milestone/Modals/index.js","components/milestone/index.js","selectors/milestones.js","routes/milestone/index.js","actions/api/members.js","actions/api/projects.js","actions/api/tasks.js","actions/api/boards.js","actions/board.js","actions/api/milestones.js"],"names":["module","exports","__webpack_require__","p","ModalForm","props","_this","Object","classCallCheck","this","_super","call","state","name","start_date","deadline","onClose","bind","assertThisInitialized","onSubmit","nameChange","startDateChange","deadlineChange","event","stopPropagation","Date","value","setState","_this$props","isFetching","title","oldNameValue","oldStartDateValue","oldDeadlineValue","_this$state","footer","react_default","a","createElement","PrimaryButton","type","onClick","loading","toUpperCase","Dialog","open","clickClose","Form","TextField","onChange","placeholder","fullWidth","label","language","selectedLanguage","milestone","required","id","autoFocus","substring","Component","connect","app","user","dispatch","bindActionCreators","toggleCreateMilestoneForm","projectId","TOGGLE_CREATE_MODAL_MILESTONE","payload","body","toggleEditMilestoneForm","TOGGLE_EDIT_MODAL_MILESTONE","toggleDeleteMilestoneForm","TOGGLE_DELETE_MODAL_MILESTONE","CreateModal","handleCloseMilestone","handleCreateSubmit","_this2","preventDefault","newName","trim","fetchCreateMilestone","project_id","then","response","ok","notifySuccess","success","notifyError","empty","dateFormat","Modals_ModalForm","create","ownProps","selectedProjectId","maxProjects","Number","auth","EditModal","milestone_name","milestone_start_date","milestone_deadline","handleEditSubmit","fetchGetMilestone","milestone_id","_this3","fetchUpdateMilestone","updateSuccess","edit","modal","milestones","selectedMilestone","DeleteForm","handleSubmit","fetchDeleteMilestone","deleteSuccess","delete","style","flex","display","marginRight","yes","hideClose","Typography_default","deleteQuestion","milestoneCreating","milestoneEditing","milestoneDeleting","_ref","react","MilestoneModal_CreateModal","MilestoneModal_EditModal","DeleteModal","Modals","MilestoneModal","MilestonesContainer","milestone_list","tasks_list","milestone_task_list","filterMilestone","active","board_list","handleAddMilestone","handleEditMilestone","getProjectTasks","getProjectBoards","changeOption","showMilestone","showMilestoneTasks","showAllTasks","_callee","regenerator_default","wrap","_context","prev","next","fetchGetMilestones","project","fetchGetProjectBoards","stop","e","_callee2","boardId","_context2","fetchGetTasks","sent","map","task","concat","toConsumableArray","_callee3","boards_list","_context3","board","abrupt","milestoneId","_this4","fetchGetMilestonesTasks","_callee4","index","_this5","_context4","task_list","getMilestonesTasks","_this6","data","item","ListItem_default","button","background","bgColor","key","ListItemText_default","disableTypography","primary","fontFamily","color","txColor","Divider_default","className","classes","iconDivider","backgroundColor","Tooltip_default","placement","Edit_default","icon","DeleteOutlined_default","handleDeleteMilestone","_ref2","assigned","forEach","milestone_task","_ref3","_this7","_useState","useState","_useState2","slicedToArray","checked","setChecked","labelId","role","undefined","currentIndex","indexOf","newChecked","fetchMilestoneUnassign","task_id","splice","fetchMilestoneAssign","push","handleToggle","shouldBeChecked","ListItemIcon_default","Checkbox_default","edge","tabIndex","disableRipple","inputProps","aria-labelledby","CircularProgress","root","milestone_Modals","Grid_default","container","header","alignItems","FileCopy_default","fileIcon","Button_default","size","addMilestoneButton","addMilestoneText","SidebarLogo","src","flagIcon","srcSelected","addMilestone","marginTop","main","flexBasis","length","index_esm","itemCount","itemSize","height","width","itemData","subheader","ListSubheader_default","disableSticky","withRouter","oneProject","withStyles","theme","paddingLeft","padding","fontSize","fontWeight","marginBottom","paddingTop","addBoardsText","margin","addBoardsButton","borderColor","border","marginLeft","&:hover","borderRadius","maxHeight","maxWidth","cursor","iconSmaller","buttonBoard","justifyContent","buttonName","typography","pxToRem","List","ListItemOdd","ListItemEven","getRef","obj","ref","fetchedMilestones","createSelector","orm","_","session","Milestone","count","orderBy","o","toRefArray","assign","Project","get","boards","Board","all","filter","match","params","selectedMilestoneId","members","hideAll","selectMilestone","selectProject","fetchProjectMembers","Promise","fetchGetProject","String","didFetchProjects","fetchedProjects","didFetchMilestones","d","__webpack_exports__","fetchTaskAssign","fetchTaskUnassign","fetchUpdateMember","fetchDeleteMember","fetchQuitMember","_constants_api_members__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_ALL_MEMBERS","fetch","url","method","FETCH_TASK_ASSIGN","userId","FETCH_TASK_UNASSIGN","memberId","FETCH_UPDATE_MEMBER","FETCH_DELETE_MEMBER","FETCH_QUIT_PROJECT","FETCH_GET_PROJECT","fetchGetProjects","FETCH_GET_ALL_PROJECTS","fetchCreateProject","FETCH_CREATE_PROJECT","fetchDeleteProject","FETCH_DELETE_PROJECT","fetchUpdateProject","FETCH_UPDATE_PROJECT","fetchUpdateProjectOrder","FETCH_UPDATE_PROJECT_ORDER","fetchUpdateFavorite","FETCH_UPDATE_PROJECT_FAVORITE","fetchGithubConnect","FETCH_GITHUB_CONNECT","githubConfirmation","FETCH_GITHUB_CONFIRMATION","fetchGithubRepo","FETCH_GITHUB_REPO","fetchProjectRepo","FETCH_PROJECT_REPO","fetchGithubRemove","FETCH_GITHUB_REMOVE","fetchProjectRepoAssign","FETCH_PROJECT_REPO_ASSIGN","fetchProjectRepoUnassign","repoId","FETCH_PROJECT_REPO_UNASSIGN","fetchGetTasksProject","FETCH_TASKS_PROJECT_BETWEEN_DATES","queryParams","_Users_carlosjouanne_Desktop_T2_2021_2_S4_Grupo1_Web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","fetchGetProjectTasks","fetchGetArchivedTasks","fetchGetLogsTask","fetchCreateTask","fetchDeleteTask","fetchArchiveTask","fetchUpdateTask","fetchUpdateTaskOrder","fetchUpdateTaskOrderAndColumn","fetchGithubCommits","fetchTaskCommit","fetchDeleteCommit","_constants_api_tasks__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_ALL_TASKS","FETCH_GET_ALL_PROJECT_TASKS","FETCH_GET_ALL_ARCHIVED_TASKS","n","FETCH_GET_TASK_LOGS","page","FETCH_CREATE_TASK","FETCH_DELETE_TASK","FETCH_ARCHIVE_TASK","FETCH_UPDATE_TASK","taskId","FETCH_UPDATE_TASK_ORDER","FETCH_UPDATE_TASK_ORDER_AND_COLUMN","FETCH_GET_GITHUB_COMMITS","FETCH_POST_TASK_COMMIT","FETCH_DELETE_TASK_COMMIT","fetchCreateBoard","FETCH_CREATE_BOARD","FETCH_GET_ALL_PROJECT_BOARDS","fetchGetBoards","FETCH_GET_ALL_BOARDS","fetchUpdateBoard","FETCH_UPDATE_BOARD","fetchDeleteBoard","FETCH_DELETE_BOARD","fetchGetReportedTasksBoard","FETCH_REPORTED_TASKS_BETWEEN_DATES","fetchGetTasksBoard","FETCH_TASKS_BETWEEN_DATES","startDrag","toggleDropDownTask","toggleDropDownColumn","toggleCreateColumnForm","toggleTaskAssignForm","toggleTaskLabelForm","toggleTaskReportForm","toggleTaskEditForm","toggleTaskCreateForm","_constants_board__WEBPACK_IMPORTED_MODULE_0__","_constants_user__WEBPACK_IMPORTED_MODULE_1__","HIDE_ALL_BOARD","START_DRAG","TOGGLE_DROPDOWN_TASK","TOGGLE_DROPDOWN_COLUMN","TOGGLE_CREATE_MODAL_COLUMN","TOGGLE_ASSIGN_MODAL_TASK","TOGGLE_LABEL_MODAL_TASK","TOGGLE_REPORT_MODAL_TASK","TOGGLE_EDIT_MODAL_TASK","TOGGLE_CREATE_MODAL_TASK","fetchGetMilestonesHoursBoard","fetchGetMilestonesPercentageHours","_constants_api_milestones__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_MILESTONES","FETCH_MILESTONE_ASSIGN","FETCH_MILESTONE_UNASSIGN","FETCH_GET_MILESTONE","FETCH_CREATE_MILESTONE","FETCH_DELETE_MILESTONE","FETCH_UPDATE_MILESTONE","FETCH_GET_MILESTONE_TASKS","FETCH_GET_MILESTONES_HOURS_BOARD","FETCH_GET_MILESTONES_PERCENTAGE_HOURS"],"mappings":"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","file":"static/js/21.90fa429b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flag_button.9c4e11a0.svg\";","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Dialog from '../../../lib/Dialog';\nimport Form from '../../../lib/Form';\nimport TextField from '../../../lib/TextField';\nimport PrimaryButton from '../../../lib/Button/PrimaryButton';\n\nimport language from '../../../../constants/language';\n\nclass ModalForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      start_date: '',\n      deadline: '',\n    };\n    this.onClose = this.onClose.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.nameChange = this.nameChange.bind(this);\n    this.startDateChange = this.startDateChange.bind(this);\n    this.deadlineChange = this.deadlineChange.bind(this);\n  }\n\n  onClose(event) {\n    if (event) event.stopPropagation();\n    this.props.onClose();\n  }\n\n  onSubmit(event) {\n    if (event) event.stopPropagation();\n    if ((new Date(this.state.start_date) > new Date(this.state.deadline)) || (new Date(this.state.deadline) < new Date(this.state.start_date))) {\n      this.props.onSubmit(event, this.state.name, '', '');\n    } else {\n      this.props.onSubmit(event, this.state.name, this.state.start_date, this.state.deadline);\n    }\n  }\n\n  nameChange(value) {\n    this.setState({ name: value });\n  }\n\n  startDateChange(value) {\n    this.setState({ start_date: value });\n  }\n\n  deadlineChange(value) {\n    this.setState({ deadline: value });\n  }\n\n  render() {\n    const { isFetching, title, oldNameValue, oldStartDateValue, oldDeadlineValue } = this.props;\n    const { name, start_date, deadline } = this.state;\n    const footer = (\n      <div>\n        <PrimaryButton\n          type=\"submit\"\n          onClick={this.onSubmit}\n          loading={isFetching}\n        >\n          {title.toUpperCase()}\n        </PrimaryButton>\n      </div>\n    );\n    return (\n      <Dialog\n        open\n        title={title}\n        footer={footer}\n        onClose={this.onClose}\n        clickClose={this.onClose}\n      >\n        <Form\n          onSubmit={this.onSubmit}\n        >\n          <TextField\n            onChange={this.nameChange}\n            type=\"name\"\n            value={name}\n            placeholder={oldNameValue}\n            fullWidth\n            label={language[this.props.selectedLanguage].milestone.name}\n            required\n            id=\"name\"\n            autoFocus\n          />\n          <TextField\n            onChange={this.startDateChange}\n            type=\"date\"\n            value={start_date}\n            placeholder={oldStartDateValue.substring(0, 10)}\n            fullWidth\n            label={language[this.props.selectedLanguage].milestone.start_date}\n            required\n            id=\"startDate\"\n          />\n          <TextField\n            onChange={this.deadlineChange}\n            type=\"date\"\n            value={deadline}\n            placeholder={oldDeadlineValue.substring(0, 10)}\n            fullWidth\n            label={language[this.props.selectedLanguage].milestone.deadline}\n            required\n            id=\"deadline\"\n          />\n        </Form>\n      </Dialog>\n    );\n  }\n}\n\nModalForm.propTypes = {\n  oldNameValue: PropTypes.string.isRequired,\n  oldStartDateValue: PropTypes.string.isRequired,\n  oldDeadlineValue: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isFetching: state.app.isFetching,\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalForm);\n","import {\n    TOGGLE_CREATE_MODAL_MILESTONE,\n    TOGGLE_EDIT_MODAL_MILESTONE,\n    TOGGLE_DELETE_MODAL_MILESTONE,\n} from '../../constants/modals/milestones';\n\nexport const toggleCreateMilestoneForm = projectId => ({\n    type: TOGGLE_CREATE_MODAL_MILESTONE,\n    payload: {\n        body: {\n            projectId,\n        },\n    },\n});\n\nexport const toggleEditMilestoneForm = (id, projectId) => ({\n    type: TOGGLE_EDIT_MODAL_MILESTONE,\n    payload: {\n        body: {\n            id,\n            projectId,\n        },\n    },\n});\n\nexport const toggleDeleteMilestoneForm = (id, projectId) => ({\n    type: TOGGLE_DELETE_MODAL_MILESTONE,\n    payload: {\n        body: {\n            id,\n            projectId,\n        },\n    },\n});\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ModalForm from '../ModalForm';\n\nimport { notifySuccess, notifyError } from '../../../../actions/notification';\n\nimport { toggleCreateMilestoneForm } from '../../../../actions/modals/milestones';\n\nimport { fetchCreateMilestone } from '../../../../actions/api/milestones';\n\nimport language from '../../../../constants/language';\n\nclass CreateModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCloseMilestone = this.handleCloseMilestone.bind(this);\n    this.handleCreateSubmit = this.handleCreateSubmit.bind(this);\n  }\n\n  handleCloseMilestone() {\n    this.props.toggleCreateMilestoneForm();\n  }\n\n  handleCreateSubmit(event, name, start_date, deadline) {\n    if (event) event.preventDefault();\n    const newName = name.trim();\n    if (newName !== '' && start_date !== '' && deadline !== '') {\n      this.props.fetchCreateMilestone({ name: newName, start_date: start_date, deadline: deadline, project_id: this.props.projectId })\n        .then((response) => {\n          if (response.ok) {\n            this.handleCloseMilestone();\n            this.props.notifySuccess(language[this.props.selectedLanguage].milestone.success);\n          }\n        });\n    }\n    else if (newName === '') {\n      this.props.notifyError(language[this.props.selectedLanguage].milestone.empty);\n    }\n    else if (start_date === '' || deadline === '') {\n      this.props.notifyError(language[this.props.selectedLanguage].milestone.dateFormat);\n    }\n  }\n\n  render() {\n    return (\n      <ModalForm\n        oldNameValue=\"\"\n        oldStartDateValue=\"\"\n        oldDeadlineValue=\"\"\n        title={language[this.props.selectedLanguage].milestone.create}\n        onSubmit={this.handleCreateSubmit}\n        onClose={this.handleCloseMilestone}\n      />\n    );\n  }\n}\n\nCreateModal.propTypes = {\n  toggleCreateMilestoneForm: PropTypes.func.isRequired,\n  fetchCreateMilestone: PropTypes.func.isRequired,\n  notifyError: PropTypes.any.isRequired,\n  notifySuccess: PropTypes.any.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    projectId: state.user.selectedProjectId,\n    maxProjects: Number(state.auth.maxProjects),\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    toggleCreateMilestoneForm,\n    fetchCreateMilestone,\n    notifySuccess,\n    notifyError,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateModal);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ModalForm from '../ModalForm';\n\nimport { notifySuccess, notifyError } from '../../../../actions/notification';\n\nimport { toggleEditMilestoneForm } from '../../../../actions/modals/milestones';\nimport { fetchUpdateMilestone, fetchGetMilestone } from '../../../../actions/api/milestones';\n\nimport language from '../../../../constants/language';\n\nclass EditModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      milestone_name: '',\n      milestone_start_date: '',\n      milestone_deadline: '',\n    };\n    this.handleCloseMilestone = this.handleCloseMilestone.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props\n      .fetchGetMilestone({ milestone_id: this.props.milestone.id, project_id: this.props.projectId })\n      .then((response) => {\n        this.setState({\n          milestone_name: response.body['milestone_date'][0].name,\n          milestone_start_date: response.body['milestone_date'][0].start_date,\n          milestone_deadline: response.body['milestone_date'][0].deadline,\n        });\n      });\n  }\n\n  handleCloseMilestone() {\n    this.props.toggleEditMilestoneForm();\n  }\n\n  handleEditSubmit(event, name, start_date, deadline) {\n    if (event) event.preventDefault();\n    const newName = name.trim();\n    if (newName !== '' && start_date !== '' && deadline !== '') {\n      this.props.fetchUpdateMilestone({ milestone_id: this.props.milestone.id, name: newName, deadline: deadline.substring(0, 10), start_date: start_date.substring(0, 10) })\n        .then((response) => {\n          this.props.notifySuccess(language[this.props.selectedLanguage].milestone.updateSuccess);\n          this.handleCloseMilestone();\n        });\n    }\n    else if (newName === '') {\n      this.props.notifyError(language[this.props.selectedLanguage].milestone.empty);\n    }\n    else if (start_date === '' || deadline === '') {\n      this.props.notifyError(language[this.props.selectedLanguage].milestone.dateFormat);\n    }\n  }\n\n  render() {\n    const { milestone_name, milestone_deadline, milestone_start_date } = this.state;\n    return (\n      <ModalForm\n        oldNameValue={milestone_name}\n        oldStartDateValue={milestone_start_date}\n        oldDeadlineValue={milestone_deadline}\n        title={language[this.props.selectedLanguage].milestone.edit}\n        onSubmit={this.handleEditSubmit}\n        onClose={this.handleCloseMilestone}\n      />\n    );\n  }\n}\n\nEditModal.propTypes = {\n  toggleEditMilestoneForm: PropTypes.func.isRequired,\n  fetchUpdateMilestone: PropTypes.func.isRequired,\n  fetchGetMilestone: PropTypes.func.isRequired,\n  milestone: PropTypes.any.isRequired,\n  projectId: PropTypes.any.isRequired,\n  notifyError: PropTypes.any.isRequired,\n  notifySuccess: PropTypes.any.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    milestone: state.modal.milestones.selectedMilestone.id,\n    selectedLanguage: state.user.language,\n    projectId: state.user.selectedProjectId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    toggleEditMilestoneForm,\n    fetchUpdateMilestone,\n    fetchGetMilestone,\n    notifySuccess,\n    notifyError,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditModal);\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '../../../lib/Dialog';\nimport Form from '../../../lib/Form';\nimport PrimaryButton from '../../../lib/Button/PrimaryButton';\n\nimport { notifySuccess } from '../../../../actions/notification';\nimport { fetchDeleteMilestone, fetchGetMilestone } from '../../../../actions/api/milestones';\n\nimport { toggleDeleteMilestoneForm } from '../../../../actions/modals/milestones';\n\nimport language from '../../../../constants/language';\n\nclass DeleteForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      milestone_name: '',\n    };\n    this.handleCloseMilestone = this.handleCloseMilestone.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props\n      .fetchGetMilestone({ milestone_id: this.props.milestone.id, project_id: this.props.projectId })\n      .then((response) => {\n        this.setState({\n          milestone_name: response.body['milestone_date'][0].name,\n        });\n      });\n  }\n\n  handleCloseMilestone() {\n    this.props.toggleDeleteMilestoneForm();\n  }\n\n  handleSubmit(event) {\n    if (event) event.preventDefault();\n    this.handleCloseMilestone();\n    this.props.fetchDeleteMilestone({ milestone_id: this.props.milestone.id })\n      .then((response) => {\n        this.props.notifySuccess(language[this.props.selectedLanguage].milestone.deleteSuccess)\n      });\n    this.setState({});\n  }\n\n  render() {\n    const { isFetching } = this.props;\n    const { milestone_name } = this.state;\n    const title = language[this.props.selectedLanguage].milestone.delete;\n    const footer = (\n      <div style={{ flex: 1, display: 'flex' }}>\n        <div style={{ flex: 1 }} />\n        <PrimaryButton\n          type=\"submit\"\n          onClick={this.handleCloseMilestone}\n          style={{ marginRight: 10 }}\n        >\n          No\n        </PrimaryButton>\n        <PrimaryButton\n          type=\"submit\"\n          onClick={this.handleSubmit}\n          loading={isFetching}\n        >\n          {language[this.props.selectedLanguage].milestone.yes}\n        </PrimaryButton>\n      </div>\n    );\n    return (\n      <Dialog\n        open\n        title={title}\n        footer={footer}\n        onClose={this.handleCloseMilestone}\n        clickClose={this.handleCloseMilestone}\n        hideClose\n      >\n        <Form\n          onSubmit={this.handleSubmit}\n        >\n          <Typography>\n            {language[this.props.selectedLanguage].milestone.deleteQuestion} &quot;{milestone_name}\n            &quot;?\n          </Typography>\n        </Form>\n      </Dialog>\n    );\n  }\n}\n\nDeleteForm.propTypes = {\n  isFetching: PropTypes.bool.isRequired,\n  fetchDeleteMilestone: PropTypes.func.isRequired,\n  toggleDeleteMilestoneForm: PropTypes.func.isRequired,\n  fetchGetMilestone: PropTypes.func.isRequired,\n  notifySuccess: PropTypes.func.isRequired,\n  milestone: PropTypes.any.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    isFetching: state.app.isFetching,\n    selectedLanguage: state.user.language,\n    milestone: state.modal.milestones.selectedMilestone.id,\n    projectId: state.user.selectedProjectId,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    toggleDeleteMilestoneForm,\n    fetchDeleteMilestone,\n    fetchGetMilestone,\n    notifySuccess,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeleteForm);\n","import React, { Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport CreateModal from './CreateModal';\nimport EditModal from './EditModal';\nimport DeleteModal from './DeleteModal';\n\nconst ModalContainer = ({ milestoneCreating, milestoneEditing, milestoneDeleting }) => {\n  return (\n    <Fragment>\n      { milestoneCreating && <CreateModal />}\n      { milestoneEditing && <EditModal />}\n      { milestoneDeleting && <DeleteModal />}\n    </Fragment>\n  );\n};\n\nModalContainer.propTypes = {\n  milestoneCreating: PropTypes.bool.isRequired,\n  milestoneEditing: PropTypes.bool.isRequired,\n  milestoneDeleting: PropTypes.bool.isRequired,\n  selectedMilestone: PropTypes.object,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    milestoneCreating: state.modal.milestones.milestoneCreating,\n    milestoneEditing: state.modal.milestones.milestoneEditing,\n    milestoneDeleting: state.modal.milestones.milestoneDeleting,\n    selectedMilestone: state.modal.milestones.selectedMilestone,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({}, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalContainer);\n","import React, { Fragment } from 'react';\n\nimport MilestoneModal from './MilestoneModal';\n\nconst Modals = () => {\n    return (\n        <Fragment>\n            <MilestoneModal />\n        </Fragment>\n    );\n};\n\nexport default Modals;","import React, { Component, Fragment, useState } from 'react';\nimport { bindActionCreators } from 'redux';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { FixedSizeList as List } from 'react-window';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '../lib/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport FileIcon from '@material-ui/icons/FileCopy';\nimport flagIcon from '../../assets/flag_button.svg';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\nimport Button from '@material-ui/core/Button';\nimport SidebarLogo from '../../components/app/SidebarLogo/index';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport { oneProject } from '../../selectors/projects';\n\nimport {\n    fetchGetMilestones,\n    fetchGetMilestonesTasks,\n    fetchMilestoneAssign,\n    fetchMilestoneUnassign,\n} from '../../actions/api/milestones';\n\nimport {\n    fetchGetTasks,\n} from '../../actions/api/tasks';\n\nimport {\n    fetchGetProjectBoards,\n} from '../../actions/api/boards';\n\nimport Modals from './Modals';\n\nimport language from '../../constants/language';\n\nimport { toggleCreateMilestoneForm, toggleEditMilestoneForm, toggleDeleteMilestoneForm } from '../../actions/modals/milestones';\n\nimport \"./styles.css\";\n\nconst styles = theme => ({\n    root: {\n        marginTop: '39px',\n        paddingLeft: '20px',\n        flex: 1,\n        padding: 10,\n        backgroundColor: '#f0f0f0',\n    },\n    container: {\n        marginTop: '19px',\n    },\n    title: {\n        fontFamily: 'Exo2.0',\n        fontSize: '20px',\n        fontWeight: 'bold',\n        color: '#2a3d41',\n        marginRight: '8px',\n    },\n    header: {\n        height: '24px',\n        marginBottom: 19,\n    },\n    main: {\n        height: '50px',\n        paddingTop: 8,\n        marginRight: '5px',\n        paddingLeft: 5,\n        display: 'inline-block',\n    },\n    addBoardsText: {\n        fontSize: '12px',\n        color: 'white',\n        margin: '0px 0px',\n    },\n    addBoardsButton: {\n        padding: '0px 8px',\n        borderColor: 'white',\n        border: '1px solid #fff',\n        marginLeft: '5px',\n        backgroundColor: '#ea5941',\n        '&:hover': {\n            backgroundColor: '#ca3921',\n        },\n        color: '#fff',\n        borderRadius: 0,\n    },\n    fileIcon: {\n        maxHeight: '22.6px',\n        maxWidth: '19.9px',\n        color: '#ea5941',\n        marginRight: 5,\n    },\n    icon: {\n        height: 20,\n        fontSize: 38,\n        color: '#2a3d41',\n        '&:hover': {\n            color: '#ca3921',\n            cursor: 'pointer',\n        },\n    },\n    iconSmaller: {\n        height: 18,\n        fontSize: 38,\n        color: '#2a3d41',\n        '&:hover': {\n            color: '#ca3921',\n            cursor: 'pointer',\n        },\n    },\n    iconDivider: {\n        width: 1,\n        height: 13,\n        paddingTop: 8,\n    },\n    buttonBoard: {\n        width: 'auto',\n        height: 'auto',\n        border: '1px dashed #555555',\n        marginTop: 13,\n        marginBottom: 0,\n        paddingLeft: 0,\n        justifyContent: 'center',\n    },\n    buttonName: {\n        color: '#555555',\n        fontSize: theme.typography.pxToRem(14),\n        fontWeight: 'bold',\n        marginTop: 4,\n    },\n    addMilestoneText: {\n        fontSize: 12,\n        color: 'white',\n        margin: '0px 0px',\n    },\n    addMilestoneButton: {\n        margin: 5,\n        padding: '0px 8px',\n        borderColor: 'white',\n        border: '1px solid #fff',\n        backgroundColor: '#ea5941',\n        '&:hover': {\n            backgroundColor: '#ca3921',\n        },\n        color: '#fff',\n        borderRadius: 0,\n    },\n    flagIcon: {\n        margin: '0px 5px',\n    },\n\n    List: {\n        border: '1px solid #d9dddd',\n    },\n\n    ListItemOdd: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n\n    ListItemEven: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#f8f8f0',\n    },\n});\n\nclass MilestonesContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            milestone_list: [],\n            tasks_list: [],\n            milestone_task_list: [],\n            loading: true,\n            filterMilestone: '',\n            active: null,\n            board_list: [],\n        };\n        this.handleAddMilestone = this.handleAddMilestone.bind(this);\n        this.handleEditMilestone = this.handleEditMilestone.bind(this);\n        this.handleAddMilestone = this.handleAddMilestone.bind(this);\n        this.getProjectTasks = this.getProjectTasks.bind(this);\n        this.getProjectBoards = this.getProjectBoards.bind(this);\n        this.changeOption = this.changeOption.bind(this);\n        this.showMilestone = this.showMilestone.bind(this);\n        this.showMilestoneTasks = this.showMilestoneTasks.bind(this);\n        this.showAllTasks = this.showAllTasks.bind(this);\n        /*        this.getCheckedTasksIndex = this.getCheckedTasksIndex.bind(this);\n                this.shouldBeChecked = this.shouldBeChecked.bind(this);*/\n    }\n\n    async componentWillMount() {\n        this.props\n            .fetchGetMilestones(this.props.project.id)\n            .then((response) => {\n                this.setState({\n                    milestone_list: response.body.milestone_list,\n\n                });\n            });\n        this.props\n            .fetchGetProjectBoards(this.props.project.id)\n            .then((response) => {\n                this.setState({\n                    board_list: response.body,\n                    loading: false,\n                });\n            });\n\n    }\n\n\n    handleAddMilestone() {\n        this.props.toggleCreateMilestoneForm(this.props.project.id);\n        this.setState({\n            loading: false,\n        });\n    }\n\n    handleEditMilestone(e) {\n        this.props.toggleEditMilestoneForm({ id: e.milestone_id, projectId: this.props.project.id });\n        this.setState({\n            loading: false,\n        });\n    }\n\n    handleDeleteMilestone(e) {\n        this.props.toggleDeleteMilestoneForm({ id: e.milestone_id, projectId: this.props.project.id });\n        this.setState({\n            loading: false,\n        });\n    }\n\n    async getProjectTasks(boardId) {\n        const response = await this.props.fetchGetTasks(boardId)\n        if (response.ok) {\n            response.body.map((task) => {\n                this.setState({\n                    tasks_list: [...this.state.tasks_list, task],\n                })\n            });\n        }\n    }\n\n    async getProjectBoards() {\n        var boards_list = []\n        const response = await this.props.fetchGetProjectBoards(this.props.project.id)\n        if (response.ok) {\n            await response.body.map((board) => {\n                boards_list = [...boards_list, board]\n            });\n        }\n        return boards_list\n    }\n\n    getMilestonesTasks(milestoneId) {\n        this.props\n            .fetchGetMilestonesTasks({ milestone_id: milestoneId })\n            .then((response) => {\n                this.setState({\n                    milestone_task_list: response.body.tasks_list,\n                    loading: false,\n                });\n            });\n    }\n\n    async changeOption(index, e) {\n        this.setState({ filterMilestone: e.milestone_id });\n        if (this.state.active !== index) {\n            this.setState({ active: index })\n        }\n\n        this.setState({ task_list: [] });\n        this.state.board_list.map((board) => {\n            this.getProjectTasks(board.id)\n        });\n        this.getMilestonesTasks(e.milestone_id);\n    }\n\n    bgColor(index) {\n        if (this.state.active === index) {\n            return \"#EA5941\";\n        }\n        return \"\";\n    }\n\n    txColor(index) {\n        if (this.state.active === index) {\n            return \"white\";\n        }\n        return \"\";\n    }\n\n    showMilestone({ data, index, style }) {\n        const item = data[index];\n        return (\n            <ListItem button style={{ style, background: this.bgColor(index) }} key={index} value={item.milestone_id} onClick={() => this.changeOption(index, item)}>\n                <ListItemText disableTypography primary={<Typography style={{ fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif', color: this.txColor(index) }}>{item.milestone_name} </Typography>} />\n                <Fragment>\n                    <Divider className={this.props.classes.iconDivider} style={{ backgroundColor: this.txColor(index) }} />\n                    <Tooltip placement=\"top-start\" title={language[this.props.selectedLanguage].milestone.edit}>\n                        <EditIcon\n                            onClick={() => this.handleEditMilestone(item)}\n                            className={this.props.classes.icon}\n                            style={{ color: this.txColor(index) }}\n                        />\n                    </Tooltip>\n                    <Divider className={this.props.classes.iconDivider} style={{ backgroundColor: this.txColor(index) }} />\n                    <Tooltip placement=\"top-start\" title={language[this.props.selectedLanguage].milestone.delete}>\n                        <DeleteOutlinedIcon\n                            onClick={() => this.handleDeleteMilestone(item)}\n                            className={this.props.classes.icon}\n                            style={{ color: this.txColor(index) }}\n                        />\n                    </Tooltip>\n                </Fragment>\n            </ListItem>\n        );\n    }\n\n    showMilestoneTasks({ data, index, style }) {\n        const item = data[index];\n        return (\n            // EN listItem agregar onClick que se abra el modal de tareas\n            <ListItem button style={style} key={index} value={item.id}>\n                <ListItemText primary={item.name} />\n            </ListItem>\n        );\n    }\n\n    shouldBeChecked(task) {\n        var assigned = false\n        this.state.milestone_task_list.forEach((milestone_task) => {\n            if (task.id === milestone_task.id) {\n                assigned = true;\n            }\n        });\n        return assigned;\n    }\n\n    showAllTasks({ data, index, style }) {\n        // initial state = -1 deja lista sin marcar\n        const [checked, setChecked] = useState([-1]);\n        const handleToggle = (index, assigned) => () => {\n            const currentIndex = checked.indexOf(index);\n            const newChecked = [...checked];\n            if (!assigned) {\n                this.props.fetchMilestoneAssign({ task_id: data[index].id, milestone_id: this.state.filterMilestone })\n                    .then((response) => {\n                        this.getMilestonesTasks(this.state.filterMilestone)\n                    });\n                newChecked.push(index);\n            } else {\n                this.props.fetchMilestoneUnassign({ task_id: data[index].id, milestone_id: this.state.filterMilestone })\n                    .then((response) => {\n                        this.getMilestonesTasks(this.state.filterMilestone)\n                    });\n                newChecked.splice(currentIndex, 1);\n            }\n\n            setChecked(newChecked);\n        };\n        const labelId = `checkbox-list-secondary-label-${index}`;\n        const item = data[index];\n        return (\n            <ListItem key={index} role={undefined} style={style} button onClick={handleToggle(index, this.shouldBeChecked(item))}>\n                <ListItemIcon>\n                    <Checkbox\n                        edge=\"start\"\n                        checked={this.shouldBeChecked(item)}\n                        tabIndex={-1}\n                        disableRipple\n                        inputProps={{ 'aria-labelledby': labelId }}\n                    />\n                </ListItemIcon>\n                <ListItemText id={labelId} primary={item.name} />\n            </ListItem>\n        )\n    }\n\n\n\n    render() {\n        const { loading } = this.state;\n        //this.getCheckedTasksIndex();\n        if (loading) {\n            return <CircularProgress />;\n        }\n        const {\n            project, classes, selectedLanguage,\n        } = this.props;\n        const {\n            milestone_list,\n            tasks_list,\n            milestone_task_list,\n        } = this.state;\n        return (\n            <div className={classes.root}>\n                <Modals />\n                <Grid container className={classes.header} alignItems=\"center\">\n                    <Typography className={classes.title}>\n                        <FileIcon className={classes.fileIcon} />\n                        {project.name}\n                    </Typography>\n                    <Divider className={classes.iconDivider} />\n                    <Button size=\"small\" color=\"secondary\" onClick={this.handleAddMilestone} className={classes.addMilestoneButton}>\n                        <Typography className={classes.addMilestoneText}>+ </Typography>\n                        <SidebarLogo className={classes.icon} src={flagIcon} srcSelected={flagIcon} />\n                        <Typography className={classes.addMilestoneText}>\n                            {language[selectedLanguage].milestone.addMilestone}\n                        </Typography>\n                    </Button>\n                    <div style={{ flex: 1 }} />\n                </Grid>\n                <Divider style={{ marginTop: '19px' }} />\n\n                <div className={classes.main} style={{ display: \"flex\", flexBasis: 'fit-content' }}>\n                    <div style={{ flex: 1, flexBasis: 'fit-content' }}>\n                        {milestone_list.length > 0 && (\n                            <List\n                                className=\"List\"\n                                itemCount={milestone_list.length}\n                                itemSize={35}\n                                height={35 * 17}\n                                width='30vw'\n                                itemData={milestone_list}\n                                subheader={<ListSubheader disableSticky={true}>Listado de Milestones</ListSubheader>}\n                            >\n                                {this.showMilestone}\n                            </List>\n                        )}\n                    </div>\n                    <div style={{ flex: 1, flexBasis: 'fit-content' }}>\n                        {milestone_task_list.length > 0 && (\n                            <List\n                                className=\"List\"\n                                itemCount={milestone_task_list.length}\n                                itemSize={35}\n                                height={35 * 17}\n                                width='30vw'\n                                itemData={milestone_task_list}\n                                subheader={<ListSubheader disableSticky={true}>Tareas de ${this.state.filterMilestone}</ListSubheader>}\n                            >\n                                {this.showMilestoneTasks}\n                            </List>\n                        )}\n                    </div>\n                    <div style={{ flex: 1, flexBasis: 'fit-content' }}>\n                        {tasks_list.length > 0 && (\n                            <List\n                                className=\"List\"\n                                itemCount={tasks_list.length}\n                                itemSize={35}\n                                height={35 * 17}\n                                width='30vw'\n                                itemData={tasks_list}\n                                subheader={<ListSubheader disableSticky={true}>Tareas del Proyecto</ListSubheader>}\n                            >\n                                {this.showAllTasks}\n                            </List>\n                        )}\n                    </div>\n                </div >\n            </div >\n        );\n    }\n}\n\nMilestonesContainer.propTypes = {\n    classes: PropTypes.object.isRequired,\n    project: PropTypes.object.isRequired,\n    toggleCreateMilestoneForm: PropTypes.func.isRequired,\n    toggleDeleteMilestoneForm: PropTypes.func.isRequired,\n    toggleEditMilestoneForm: PropTypes.func.isRequired,\n    selectedLanguage: PropTypes.string.isRequired,\n    fetchGetMilestones: PropTypes.func.isRequired,\n    fetchGetMilestonesTasks: PropTypes.func.isRequired,\n    fetchGetProjectBoards: PropTypes.func.isRequired,\n    fetchGetTasks: PropTypes.func.isRequired,\n    fetchMilestoneAssign: PropTypes.func.isRequired,\n    fetchMilestoneUnassign: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        project: oneProject(ownProps, state),\n        selectedLanguage: state.user.language,\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators(\n        {\n            toggleCreateMilestoneForm,\n            toggleDeleteMilestoneForm,\n            toggleEditMilestoneForm,\n            fetchGetMilestones,\n            fetchGetProjectBoards,\n            fetchGetMilestonesTasks,\n            fetchGetTasks,\n            fetchMilestoneAssign,\n            fetchMilestoneUnassign,\n        },\n        dispatch);\n};\n\nexport default withRouter(\n    connect(\n        mapStateToProps,\n        mapDispatchToProps,\n    )(withStyles(styles)(MilestonesContainer)),\n);\n","import { createSelector } from 'redux-orm';\n\nimport orm from '../reducers/orm';\n\nconst getRef = obj => (obj != null ? obj.ref : null);\n\n/*\nreturns true in case of milestones in orm, else returns false.\nWARNING: if for any case the user has 0 milestones, the app will be\nable to enter a loop of fetching milestones waiting to get at least one.\n*/\nexport const fetchedMilestones = createSelector(\n    orm,\n    (_, state) => state.orm,\n    (session) => {\n        return session.Milestone.count() > 0;\n    },\n);\n\nexport const allMilestones = createSelector(\n    orm,\n    (_, state) => state.orm,\n    (session) => {\n        const milestones = session.Milestone\n            .orderBy(o => o.name.toUpperCase())\n            .toRefArray()\n            .map((milestone) => {\n                return Object.assign({}, milestone, {\n                    project: getRef(session.Project.get(o => o.id === milestone.project_id)),\n                    boards: session.Board.all()\n                        .filter(o => o.milestone_id === milestone.id).toRefArray(),\n                });\n            });\n        return milestones;\n    },\n);\n\nexport const oneMilestone = createSelector(\n    orm,\n    (_, state) => state.orm,\n    props => props.match.params.id,\n    (session, milestoneId) => {\n        let milestone = session.Milestone\n            .get(o => o.id === milestoneId);\n        milestone = getRef(milestone);\n        if (!milestone) return null;\n        return Object.assign({}, milestone, {\n            project: getRef(session.Project\n                .get(o => o.id === milestone.project_id)),\n        });\n    },\n);\n\n/*\nreturns the milestone which is going to be Edited\n(Edit Modal Form).\n*/\nexport const oneMilestoneFormModal = createSelector(\n    orm,\n    (_, state) => state.orm,\n    (_, state) => state.modal.milestones.selectedMilestone,\n    (session, milestone) => {\n        return session.Milestone.get(o => o.id === milestone.id).ref;\n    },\n);\n\nexport const oneMilestoneUser = createSelector(\n    orm,\n    (_, state) => state.orm,\n    (_, state) => state.user.selectedMilestoneId,\n    (session, milestoneId) => {\n        return session.Milestone.get(o => o.id === milestoneId).ref;\n    },\n);\n\nexport const oneMilestoneUserModal = createSelector(\n    orm,\n    (_, state) => state.orm,\n    (_, state) => state.modal.members.selectedMilestone,\n    (session, milestoneId) => {\n        return session.Milestone.get(o => o.id === milestoneId).ref;\n    },\n);\n\nexport const milestonesByProject = createSelector(\n    orm,\n    (_, state) => state.orm,\n    props => props.projectId,\n    (session, projectId) => {\n        return session.Milestone\n            .filter(o => o.project_id === projectId)\n            .orderBy(o => o.name.toUpperCase())\n            .toRefArray();\n    },\n);\n","import React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport MilestonesContainer from '../../components/milestone';\nimport CircularProgress from '../../components/lib/CircularProgress';\n\nimport { fetchGetProject } from '../../actions/api/projects';\nimport { fetchGetMilestones } from '../../actions/api/milestones';\nimport { fetchProjectMembers } from '../../actions/api/members';\n\nimport { selectProject } from '../../actions/user';\nimport { selectMilestone } from '../../actions/user';\nimport { hideAll } from '../../actions/board';\n\nimport { fetchedProjects } from '../../selectors/projects';\nimport { fetchedMilestones } from '../../selectors/milestones';\n\nclass Milestone extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentWillMount() {\n        const { projectId, milestoneId } = this.props;\n        this.props.hideAll();\n        this.props.selectMilestone(milestoneId);\n        this.props.selectProject(projectId);\n        this.props.fetchProjectMembers(projectId);\n        Promise.all([\n            this.props.fetchGetProject(projectId),\n        ]).then(() => {\n            this.setState({ loading: false });\n        });\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress />;\n        }\n        return (\n            <Fragment>\n                <MilestonesContainer />\n            </Fragment>\n        );\n    }\n}\n\nMilestone.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    fetchGetProject: PropTypes.func.isRequired,\n    selectProject: PropTypes.func.isRequired,\n    fetchProjectMembers: PropTypes.func.isRequired,\n    milestoneId: PropTypes.string.isRequired,\n    fetchGetMilestones: PropTypes.func.isRequired,\n    selectMilestone: PropTypes.func.isRequired,\n    hideAll: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        projectId: String(ownProps.match.params.id),\n        didFetchProjects: fetchedProjects(ownProps, state),\n        milestoneId: String(ownProps.match.params.id),\n        didFetchMilestones: fetchedMilestones(ownProps, state),\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        fetchGetProject,\n        selectProject,\n        fetchProjectMembers,\n        fetchGetMilestones,\n        selectMilestone,\n        hideAll,\n    }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Milestone);\n","import {\n  FETCH_GET_ALL_MEMBERS,\n  FETCH_TASK_ASSIGN,\n  FETCH_TASK_UNASSIGN,\n  FETCH_UPDATE_MEMBER,\n  FETCH_DELETE_MEMBER,\n  FETCH_QUIT_PROJECT,\n} from '../../constants/api/members';\n\nexport const fetchProjectMembers = id => ({\n  type: FETCH_GET_ALL_MEMBERS,\n  fetch: true,\n  url: `/projects/${id}/members/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchTaskAssign = (id, body) => ({\n  type: FETCH_TASK_ASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/assign/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchTaskUnassign = (id, userId) => ({\n  type: FETCH_TASK_UNASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/users/${userId}/unassign/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateMember = (projectId, memberId, body) => ({\n  type: FETCH_UPDATE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchDeleteMember = (projectId, memberId) => ({\n  type: FETCH_DELETE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchQuitMember = (projectId, memberId) => ({\n  type: FETCH_QUIT_PROJECT,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n","import {\n  FETCH_GET_PROJECT,\n  FETCH_GET_ALL_PROJECTS,\n  FETCH_CREATE_PROJECT,\n  FETCH_DELETE_PROJECT,\n  FETCH_UPDATE_PROJECT,\n  FETCH_UPDATE_PROJECT_ORDER,\n  FETCH_UPDATE_PROJECT_FAVORITE,\n  FETCH_GITHUB_CONNECT,\n  FETCH_GITHUB_CONFIRMATION,\n  FETCH_GITHUB_REPO,\n  FETCH_GITHUB_REMOVE,\n  FETCH_PROJECT_REPO,\n  FETCH_PROJECT_REPO_ASSIGN,\n  FETCH_PROJECT_REPO_UNASSIGN,\n  FETCH_TASKS_PROJECT_BETWEEN_DATES,\n} from '../../constants/api/projects';\n\nexport const fetchGetProject = id => ({\n  type: FETCH_GET_PROJECT,\n  fetch: true,\n  url: `/projects/${id}/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGetProjects = () => ({\n  type: FETCH_GET_ALL_PROJECTS,\n  fetch: true,\n  url: '/projects/',\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchCreateProject = body => ({\n  type: FETCH_CREATE_PROJECT,\n  fetch: true,\n  url: '/projects/',\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchDeleteProject = id => ({\n  type: FETCH_DELETE_PROJECT,\n  fetch: true,\n  url: `/projects/${id}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateProject = (id, body) => ({\n  type: FETCH_UPDATE_PROJECT,\n  fetch: true,\n  url: `/projects/${id}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchUpdateProjectOrder = (projectId, body) => ({\n  type: FETCH_UPDATE_PROJECT_ORDER,\n  fetch: true,\n  url: `/projects/${projectId}/order/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchUpdateFavorite = id => ({\n  type: FETCH_UPDATE_PROJECT_FAVORITE,\n  fetch: true,\n  url: `/projects/${id}/favorite/`,\n  params: {\n    method: 'PUT',\n  },\n});\n\nexport const fetchGithubConnect = (id) => ({\n  type: FETCH_GITHUB_CONNECT,\n  fetch: true,\n  url: `/projects/${id}/gits/new/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const githubConfirmation = (id, body) => ({\n  type: FETCH_GITHUB_CONFIRMATION,\n  fetch: true,\n  url: `/projects/${id}/gits/link/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchGithubRepo = id => ({\n  type: FETCH_GITHUB_REPO,\n  fetch: true,\n  url: `/projects/${id}/gits/repos/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchProjectRepo = id => ({\n  type: FETCH_PROJECT_REPO,\n  fetch: true,\n  url: `/projects/${id}/repos/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGithubRemove = id => ({\n  type: FETCH_GITHUB_REMOVE,\n  fetch: true,\n  url: `/projects/${id}/gits`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchProjectRepoAssign = (id, body) => ({\n  type: FETCH_PROJECT_REPO_ASSIGN,\n  fetch: true,\n  url: `/projects/${id}/gits/link_repo`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchProjectRepoUnassign = (projectId, repoId) => ({\n  type: FETCH_PROJECT_REPO_UNASSIGN,\n  fetch: true,\n  url: `/projects/${projectId}/repos/${repoId}`,\n  params: {\n    method: 'DELETE',\n  },\n});\nexport const fetchGetTasksProject = (id, body) => ({\n  type: FETCH_TASKS_PROJECT_BETWEEN_DATES,\n  fetch: true,\n  url: `/projects/${id}/workload`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n","import {\n  FETCH_GET_ALL_TASKS,\n  FETCH_GET_ALL_ARCHIVED_TASKS,\n  FETCH_CREATE_TASK,\n  FETCH_UPDATE_TASK,\n  FETCH_DELETE_TASK,\n  FETCH_ARCHIVE_TASK,\n  FETCH_GET_TASK_LOGS,\n  FETCH_UPDATE_TASK_ORDER,\n  FETCH_UPDATE_TASK_ORDER_AND_COLUMN,\n  FETCH_GET_TASK_ORDER_BY_COLUMN,\n  FETCH_GET_GITHUB_COMMITS,\n  FETCH_POST_TASK_COMMIT,\n  FETCH_DELETE_TASK_COMMIT,\n  FETCH_GET_ALL_PROJECT_TASKS,\n} from '../../constants/api/tasks';\n\nexport const fetchGetTasks = boardId => ({\n  type: FETCH_GET_ALL_TASKS,\n  fetch: true,\n  url: `/boards/${boardId}/tasks`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGetProjectTasks = projectId => ({\n  type: FETCH_GET_ALL_PROJECT_TASKS,\n  fetch: true,\n  url: `/projects/${projectId}/tasks`,\n  params: {\n    method: 'GET',\n  },\n});\n\n\nexport const fetchGetArchivedTasks = boardId => ({\n  type: FETCH_GET_ALL_ARCHIVED_TASKS,\n  fetch: true,\n  url: `/boards/${boardId}/archived_tasks`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGetLogsTask = (id, n) => ({\n  type: FETCH_GET_TASK_LOGS,\n  fetch: true,\n  url: `/tasks/${id}/records`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    page: n,\n  },\n});\n\nexport const fetchCreateTask = body => ({\n  type: FETCH_CREATE_TASK,\n  fetch: true,\n  url: '/tasks',\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchDeleteTask = id => ({\n  type: FETCH_DELETE_TASK,\n  fetch: true,\n  url: `/tasks/${id}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchArchiveTask = id => ({\n  type: FETCH_ARCHIVE_TASK,\n  fetch: true,\n  url: `/tasks/${id}/archive`,\n  params: {\n    method: 'POST',\n  },\n});\n\nexport const fetchUpdateTask = (id, body) => ({\n  type: FETCH_UPDATE_TASK,\n  fetch: true,\n  url: `/tasks/${id}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchUpdateTaskbyPatch = (id, body) => ({\n  type: FETCH_UPDATE_TASK,\n  fetch: true,\n  url: `/tasks/${id}/`,\n  params: {\n    method: 'PATCH',\n    body,\n  },\n});\n\nexport const fetchUpdateTaskOrder = (taskId, body) => ({\n  type: FETCH_UPDATE_TASK_ORDER,\n  fetch: true,\n  url: `/tasks/${taskId}/order`,\n  params: {\n    method: 'PUT',\n    body, // {prev, next}\n  },\n});\n\nexport const fetchUpdateTaskOrderAndColumn = (taskId, body) => ({\n  type: FETCH_UPDATE_TASK_ORDER_AND_COLUMN,\n  fetch: true,\n  url: `/tasks/${taskId}/order_with_column/`,\n  params: {\n    method: 'PUT',\n    body, // {prev, next}, {col_id: 1111}\n  },\n});\n\nexport const fetchTaskByColumn = id => ({\n  type: FETCH_GET_TASK_ORDER_BY_COLUMN,\n  fetch: true,\n  url: `/columns/${id}/tasks_order`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGithubCommits = id => ({\n  type: FETCH_GET_GITHUB_COMMITS,\n  fetch: true,\n  url: `/tasks/${id}/commits/gitcommits`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchTaskCommit = (id, body) => ({\n  type: FETCH_POST_TASK_COMMIT,\n  fetch: true,\n  url: `/tasks/${id}/commits/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchDeleteCommit = id => ({\n  type: FETCH_DELETE_TASK_COMMIT,\n  fetch: true,\n  url: `/commits/${id}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n","import {\n  FETCH_GET_ALL_PROJECT_BOARDS,\n  FETCH_GET_ALL_BOARDS,\n  FETCH_CREATE_BOARD,\n  FETCH_UPDATE_BOARD,\n  FETCH_DELETE_BOARD,\n  FETCH_UPDATE_BOARD_ORDER,\n  FETCH_REPORTED_TASKS_BETWEEN_DATES,\n  FETCH_TASKS_BETWEEN_DATES,\n} from '../../constants/api/boards';\n\nexport const fetchCreateBoard = body => ({\n  type: FETCH_CREATE_BOARD,\n  fetch: true,\n  url: '/boards/',\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchGetProjectBoards = projectId => ({\n  type: FETCH_GET_ALL_PROJECT_BOARDS,\n  fetch: true,\n  url: `/projects/${projectId}/boards`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGetBoards = () => ({\n  type: FETCH_GET_ALL_BOARDS,\n  fetch: true,\n  url: '/boards',\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchUpdateBoard = (id, body) => ({\n  type: FETCH_UPDATE_BOARD,\n  fetch: true,\n  url: `/boards/${id}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchDeleteBoard = id => ({\n  type: FETCH_DELETE_BOARD,\n  fetch: true,\n  url: `/boards/${id}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateBoardOrder = (id, body) => ({\n  type: FETCH_UPDATE_BOARD_ORDER,\n  fetch: true,\n  url: `/boards/${id}/order`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\nexport const fetchGetReportedTasksBoard = (id, body) => ({\n  type: FETCH_REPORTED_TASKS_BETWEEN_DATES,\n  fetch: true,\n  url: `/boards/${id}/reported_tasks_between_dates`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\nexport const fetchGetTasksBoard = (id, body) => ({\n  type: FETCH_TASKS_BETWEEN_DATES,\n  fetch: true,\n  url: `/boards/${id}/tasks_between_dates`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n","import {\n  TOGGLE_ASSIGN_MODAL_TASK,\n  TOGGLE_LABEL_MODAL_TASK,\n  TOGGLE_CREATE_MODAL_TASK,\n  TOGGLE_EDIT_MODAL_TASK,\n  TOGGLE_CREATE_MODAL_COLUMN,\n  TOGGLE_EDIT_MODAL_COLUMN,\n  TOGGLE_DELETE_MODAL_COLUMN,\n  START_DRAG,\n  TOGGLE_DROPDOWN_TASK,\n  TOGGLE_DROPDOWN_COLUMN,\n  TOGGLE_CREATE_MODAL_BOARD,\n  TOGGLE_REPORT_MODAL_TASK,\n} from '../constants/board';\n\nimport {\n  HIDE_ALL_BOARD,\n} from '../constants/user';\n\nexport const hideAll = () => ({\n  type: HIDE_ALL_BOARD,\n});\n\nexport const startDrag = () => ({\n  type: START_DRAG,\n});\n\nexport const toggleDropDownTask = id => ({\n  type: TOGGLE_DROPDOWN_TASK,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const toggleDropDownColumn = id => ({\n  type: TOGGLE_DROPDOWN_COLUMN,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const toggleCreateBoardForm = () => ({\n  type: TOGGLE_CREATE_MODAL_BOARD,\n  payload: {\n    body: {\n    },\n  },\n});\n\nexport const toggleCreateColumnForm = () => ({\n  type: TOGGLE_CREATE_MODAL_COLUMN,\n  payload: {\n    body: {\n    },\n  },\n});\n\nexport const toggleEditColumnForm = id => ({\n  type: TOGGLE_EDIT_MODAL_COLUMN,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const toggleDeleteColumnForm = id => ({\n  type: TOGGLE_DELETE_MODAL_COLUMN,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const toggleTaskAssignForm = id => ({\n  type: TOGGLE_ASSIGN_MODAL_TASK,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const toggleTaskLabelForm = id => ({\n  type: TOGGLE_LABEL_MODAL_TASK,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const toggleTaskReportForm = id => ({\n  type: TOGGLE_REPORT_MODAL_TASK,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const toggleTaskEditForm = body => ({\n  type: TOGGLE_EDIT_MODAL_TASK,\n  payload: {\n    body: {\n      body,\n    },\n  },\n});\n\nexport const toggleTaskCreateForm = id => ({\n  type: TOGGLE_CREATE_MODAL_TASK,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n","import {\n    FETCH_GET_MILESTONES,\n    FETCH_MILESTONE_ASSIGN,\n    FETCH_MILESTONE_UNASSIGN,\n    FETCH_GET_MILESTONE,\n    FETCH_CREATE_MILESTONE,\n    FETCH_DELETE_MILESTONE,\n    FETCH_UPDATE_MILESTONE,\n    FETCH_GET_MILESTONE_TASKS,\n    FETCH_GET_MILESTONES_HOURS_BOARD,\n    FETCH_GET_MILESTONES_PERCENTAGE_HOURS,\n} from '../../constants/api/milestones';\n\nexport const fetchGetMilestones = (id) => ({\n    type: FETCH_GET_MILESTONES,\n    fetch: true,\n    url: `/milestones/get_milestone?project_id=${id}`,\n    params: {\n        method: 'GET',\n    },\n});\n\nexport const fetchMilestoneAssign = (body) => ({\n    type: FETCH_MILESTONE_ASSIGN,\n    fetch: true,\n    url: `/milestones/add_task_to_milestone?task_id=${body.task_id}&milestone_id=${body.milestone_id}`,\n    params: {\n        method: 'POST',\n        body,\n    },\n});\n\nexport const fetchMilestoneUnassign = (body) => ({\n    type: FETCH_MILESTONE_UNASSIGN,\n    fetch: true,\n    url: `/milestones/remove_task_from_milestone?task_id=${body.task_id}&milestone_id=${body.milestone_id}`,\n    params: {\n        method: 'POST',\n        body,\n    },\n});\n\nexport const fetchGetMilestone = (body) => ({\n    type: FETCH_GET_MILESTONE,\n    fetch: true,\n    url: `/milestones/get_milestone_dates?project_id=${body.project_id}&milestone_id=${body.milestone_id}`,\n    params: {\n        method: 'GET',\n    },\n});\n\nexport const fetchCreateMilestone = body => ({\n    type: FETCH_CREATE_MILESTONE,\n    fetch: true,\n    url: '/milestones/create_milestone',\n    params: {\n        method: 'POST',\n        body,\n    },\n});\n\nexport const fetchDeleteMilestone = body => ({\n    type: FETCH_DELETE_MILESTONE,\n    fetch: true,\n    url: `/milestones/destroy_milestone`,\n    params: {\n        method: 'DELETE',\n        body,\n    },\n});\n\nexport const fetchUpdateMilestone = body => ({\n    type: FETCH_UPDATE_MILESTONE,\n    fetch: true,\n    url: `/milestones/update`,\n    params: {\n        method: 'POST',\n        body,\n    },\n});\n\nexport const fetchGetMilestonesTasks = body => ({\n    type: FETCH_GET_MILESTONE_TASKS,\n    fetch: true,\n    url: `/milestones/task_list?milestone_id=${body.milestone_id}`,\n    params: {\n        method: 'GET',\n    },\n});\nexport const fetchGetMilestonesHoursBoard = (id) => ({\n    type: FETCH_GET_MILESTONES_HOURS_BOARD,\n    fetch: true,\n    url: `/milestones/${id}/average_hours_per_board`,\n    params: {\n        method: 'GET',\n    },\n});\n\nexport const fetchGetMilestonesPercentageHours = (id) => ({\n    type: FETCH_GET_MILESTONES_PERCENTAGE_HOURS,\n    fetch: true,\n    url: `/milestones/${id}/percentage_difference_hours`,\n    params: {\n        method: 'GET',\n    },\n});\n"],"sourceRoot":""}
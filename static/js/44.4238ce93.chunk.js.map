{"version":3,"sources":["components/login/RegisterContainer.js","routes/register/index.js"],"names":["styles","root","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","concat","Background","flex","display","alignItems","flexDirection","justifyContent","formTitle","paddingLeft","paddingTop","formInput","paddingRight","paddingBottom","welcome","marginBottom","color","fontSize","title","fontWeight","logo","marginRight","resend","fontFamily","RegisterContainer","props","_this","Object","classCallCheck","this","_super","call","state","user","email","password","passwordconfirmation","redirect","handleEmail","bind","assertThisInitialized","handlePassword","handlePassConfirmation","handleSubmit","event","value","setState","objectSpread","_this2","preventDefault","selectedLanguage","length","notifyError","language","login","shortPassword","passwordsDoNotMatch","validateEmail","register","then","response","ok","notifySuccess","confirmRegistration","emailNotValid","_this$state","_this$props","classes","isFetching","react_default","a","createElement","Redirect","to","Container","Card","Typography_default","className","variant","component","Form","onSubmit","TextField","onChange","type","name","fullWidth","label","required","id","autoFocus","confirmPassword","Link","style","float","resendConfirmation","PrimaryButton","loading","Component","connect","auth","dispatch","bindActionCreators","withStyles","Register","_ref","isAuthenticated","react","login_RegisterContainer","defaultProps"],"mappings":"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","file":"static/js/44.4238ce93.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect, Link } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Background from '../../assets/background.png';\nimport Container from './Container';\nimport Form from '../lib/Form';\nimport TextField from '../lib/TextField';\nimport PrimaryButton from '../lib/Button/PrimaryButton';\nimport CardPanel from '../lib/Card';\nimport { notifySuccess, notifyError } from '../../actions/notification';\nimport { register } from '../../actions/api/auth';\nimport { validateEmail } from '../../utils';\nimport language from '../../constants/language';\n\nconst styles = {\n  root: {\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundImage: `url(${Background})`,\n    flex: 1,\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    justifyContent: 'center',\n  },\n  formTitle: {\n    paddingLeft: '2.5%',\n    paddingTop: '3%',\n  },\n  formInput: {\n    paddingLeft: '5%',\n    paddingRight: '5%',\n    paddingBottom: '5%',\n  },\n  welcome: {\n    marginBottom: 20,\n    color: 'white',\n    fontSize: 20,\n  },\n  title: {\n    marginBottom: 60,\n    color: 'white',\n    fontSize: 50,\n    fontWeight: 'bold',\n    alignItems: 'felx-end',\n  },\n  logo: {\n    color: '#ea5941',\n    fontSize: 80,\n    marginBottom: -13,\n    marginRight: 10,\n  },\n  resend: {\n    color: '#298fca',\n    fontSize: '14px',\n    fontFamily: 'Roboto,arial,sans-serif',\n  },\n};\n\nclass RegisterContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        email: '',\n        password: '',\n        passwordconfirmation: '',\n      },\n      redirect: false,\n    };\n\n    this.handleEmail = this.handleEmail.bind(this);\n    this.handlePassword = this.handlePassword.bind(this);\n    this.handlePassConfirmation = this.handlePassConfirmation.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleEmail(event) {\n    const value = event;\n    const { user } = this.state;\n    this.setState({\n      user: {\n        ...user,\n        email: value,\n      },\n    });\n  }\n\n  handlePassword(event) {\n    const value = event;\n    const { user } = this.state;\n    this.setState({\n      user: {\n        ...user,\n        password: value,\n      },\n    });\n  }\n\n  handlePassConfirmation(event) {\n    const value = event;\n    const { user } = this.state;\n    this.setState({\n      user: {\n        ...user,\n        passwordconfirmation: value,\n      },\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { user } = this.state;\n    const { selectedLanguage } = this.props;\n    if (user.password.length < 8) {\n      this.props.notifyError(language[selectedLanguage].login.shortPassword);\n    } else if (user.password !== user.passwordconfirmation) {\n      this.props.notifyError(language[selectedLanguage].login.passwordsDoNotMatch);\n    } else if (!validateEmail(user.email)) {\n      this.props.notifyError(language[selectedLanguage].login.emailNotValid);\n    } else {\n      this.props.register(user.email, user.password, user.passwordconfirmation)\n        .then((response) => {\n          if (response.ok) {\n            this.props.notifySuccess(language[selectedLanguage].login.confirmRegistration);\n            this.setState({ redirect: true });\n          }\n        });\n    }\n  }\n\n  render() {\n    const { user, redirect } = this.state;\n\n    const { classes, isFetching, selectedLanguage } = this.props;\n\n    if (redirect) {\n      return <Redirect to=\"/login\" />;\n    }\n    return (\n      <Container>\n        <CardPanel>\n          <Typography className={classes.formTitle} variant=\"headline\" component=\"h2\">\n            {language[selectedLanguage].login.register}\n          </Typography>\n          <Form\n            onSubmit={this.handleSubmit}\n            className={classes.formInput}\n          >\n            <TextField\n              onChange={this.handleEmail}\n              type=\"email\"\n              name={user.email}\n              fullWidth\n              label={language[selectedLanguage].login.email}\n              required\n              id=\"email\"\n              autoFocus\n            />\n            <TextField\n              onChange={this.handlePassword}\n              type=\"password\"\n              name={user.password}\n              fullWidth\n              label={language[selectedLanguage].login.password}\n              required\n              id=\"password\"\n            />\n            <TextField\n              onChange={this.handlePassConfirmation}\n              type=\"password\"\n              name={user.passwordconfirmation}\n              fullWidth\n              label={language[selectedLanguage].login.confirmPassword}\n              required\n              id=\"passwordconfirmation\"\n            />\n            <Link to=\"/resend\" style={{ float: 'right', paddingBottom: '10px' }} className={classes.resend}>\n              {language[selectedLanguage].login.resendConfirmation}\n            </Link>\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'start' }}>\n              <PrimaryButton\n                type=\"submit\"\n                loading={isFetching}\n              >\n                {language[selectedLanguage].login.register}\n              </PrimaryButton>\n            </div>\n          </Form>\n        </CardPanel>\n      </Container>\n    );\n  }\n}\n\nRegisterContainer.propTypes = {\n  classes: PropTypes.any.isRequired,\n  register: PropTypes.func.isRequired,\n  isFetching: PropTypes.bool.isRequired,\n  notifySuccess: PropTypes.func.isRequired,\n  notifyError: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isFetching: state.auth.isFetching,\n    selectedLanguage: state.user.language,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    register, notifySuccess, notifyError,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(RegisterContainer));\n","import React, { Fragment } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport RegisterContainer from '../../components/login/RegisterContainer';\n\nconst Register = ({ isAuthenticated }) => {\n  if (!isAuthenticated) {\n    return (\n      <Fragment>\n        <RegisterContainer />\n      </Fragment>\n    );\n  }\n  return (\n    <Redirect to=\"/welcome\" />\n  );\n};\n\nRegister.propTypes = {\n  isAuthenticated: PropTypes.bool,\n};\n\nRegister.defaultProps = {\n  isAuthenticated: false,\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n  };\n}\n\nexport default connect(mapStateToProps)(Register);\n"],"sourceRoot":""}
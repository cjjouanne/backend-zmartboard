{"version":3,"sources":["components/report/share/User/DynamicUsersChart.js","components/report/share/User/index.js","routes/userReport/index.js","actions/api/members.js","actions/api/viz.js","constants/api/viz.js","selectors/members.js","actions/project.js","../node_modules/fast-deep-equal/index.js"],"names":["DynamicUsersChart","props","_this","Object","classCallCheck","this","_super","call","state","loading","setOptions","bind","assertThisInitialized","buttonClick","setState","prevProps","equal","data","chartOptions","Highcharts","chart","selectedLanguage","formattedData","formatData","type","height","credits","title","text","language","userHoursChart","chartTitle","xAxis","categories","map","d","user_name","yAxis","min","dynamicChart","totalHours","legend","reversed","series","plotOptions","stacking","tooltip","backgroundColor","borderColor","borderWidth","style","color","fontFamily","_this2","boardNames","values","labels","newData","forEach","board","push","name","row","react_default","a","createElement","CircularProgress","id","highcharts_react_min_default","highcharts","options","Component","connect","user","dispatch","bindActionCreators","fetchVizHoursPerLabel","UserContainer","changeData","startDate","endDate","fetchVizHoursPerUser","projectId","start_date","end_date","then","response","ok","newTotalHours","body","user_email","keys","boards","includes","_this$props","classes","members","_this$state","className","headerContainer","Typography_default","usersChartIndex","hoursChart","line","grid","display","alignItems","marginLeft","from","to","length","react","box","key","email","Tooltip_default","placement","image","alt","customIcon","src","BlankProfile","info","marginTop","marginBottom","wrapper","User_DynamicUsersChart","params","textAlign","noReported","ownProps","allMembers","notifyError","changeUsersHours","withStyles","width","modalContent","modalContainer","fontSize","fontFamiliy","margin","fontWeight","selectText","marginRight","padding","border-radius","Report","selectProject","fetchProjectMembers","User","String","match","__webpack_require__","__webpack_exports__","fetchTaskAssign","fetchTaskUnassign","fetchUpdateMember","fetchDeleteMember","fetchQuitMember","_constants_api_members__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_ALL_MEMBERS","fetch","url","concat","method","FETCH_TASK_ASSIGN","userId","FETCH_TASK_UNASSIGN","memberId","FETCH_UPDATE_MEMBER","FETCH_DELETE_MEMBER","FETCH_QUIT_PROJECT","fetchVizHoursPerBoard","queryParams","objectSpread","fetchVizHoursPerTask","fetchVizGithub","fetchGetLinkedRepos","fetchUsersHoursTimeline","fetchGetPR","fetchGetPRLeadTime","fetchGetCommitsPerPR","onlyMembers","oneTaskMembers","onlyTaskMembers","evaluableMembers","redux_orm__WEBPACK_IMPORTED_MODULE_0__","_reducers_orm__WEBPACK_IMPORTED_MODULE_1__","getRef","obj","ref","createSelector","orm","_","selectedProjectId","session","projectMembers","Project","get","o","Member","filter","orderBy","toUpperCase","toRefArray","selectedTask","taskId","task","Task","taskMembers","assigned","mem","assign","prop","role","toggleRepoAssignForm","archiveSearch","changeReportHours","changeTrazabilityHours","changeTimelineHours","toggleTaskFilter","_constants_project__WEBPACK_IMPORTED_MODULE_0__","TOGGLE_ASSIGN_MODAL_REPO","payload","ARCHIVE_SEARCH","REPORT_HOURS","USERS_HOURS","TRAZABILITY_HOURS","TIMELINE_HOURS","TOGGLE_FILTER","isArray","Array","keyList","hasProp","prototype","hasOwnProperty","module","exports","b","i","arrA","arrB","dateA","Date","dateB","getTime","regexpA","RegExp","regexpB","toString"],"mappings":"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","file":"static/js/23.bc328a77.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Highcharts from 'highcharts';\nimport equal from 'fast-deep-equal';\nimport HighchartsReact from 'highcharts-react-official';\nimport { fetchVizHoursPerLabel } from '../../../../actions/api/viz';\nimport CircularProgress from '../../../lib/CircularProgress';\nimport language from '../../../../constants/language';\n\nclass DynamicUsersChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n    };\n    this.setOptions.bind(this);\n    this.buttonClick.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({ loading: false });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!equal(this.props.data, prevProps.data)) {\n      const chartOptions = this.setOptions();\n      Highcharts.chart('chart', chartOptions);\n    }\n    if (!equal(this.props.selectedLanguage, prevProps.selectedLanguage)) {\n      const chartOptions = this.setOptions();\n      Highcharts.chart('chart', chartOptions);\n    }\n  }\n\n  setOptions() {\n    const formattedData = this.formatData();\n    // eslint-disable-next-line prefer-destructuring\n    const selectedLanguage = this.props.selectedLanguage;\n    const chartOptions = {\n      chart: {\n        type: 'column',\n        height: 350,\n      },\n      credits: false,\n      title: {\n        text: language[selectedLanguage].userHoursChart.chartTitle,\n      },\n      xAxis: {\n        categories: this.props.data.map(d => d.user_name),\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: language[selectedLanguage].dynamicChart.totalHours,\n        },\n      },\n      legend: {\n        reversed: true,\n      },\n      series: formattedData,\n      plotOptions: {\n        series: {\n          stacking: 'normal',\n        },\n      },\n      tooltip: {\n        backgroundColor: '#616161',\n        borderColor: '#616161',\n        borderWidth: 0.5,\n        style: {\n          color: 'white',\n          fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n        },\n      },\n    };\n    return chartOptions;\n  }\n\n  formatData() {\n    const boardNames = Object.values(this.props.labels);\n    const newData = [];\n    boardNames.forEach((board) => {\n      newData.push({\n        name: board,\n        data: this.props.data.map(row => row[board]),\n      });\n    });\n    return newData;\n  }\n\n  buttonClick() {\n    const chartOptions = this.setOptions();\n    Highcharts.chart('chart', chartOptions);\n  }\n\n  render() {\n    if (this.state.loading) return <CircularProgress />;\n    const chartOptions = this.setOptions();\n    return (\n      <div>\n        <div id=\"chart\">\n          <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n        </div>\n      </div>\n    );\n  }\n}\n\nDynamicUsersChart.propTypes = {\n  data: PropTypes.array.isRequired,\n  labels: PropTypes.array.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ fetchVizHoursPerLabel }, dispatch);\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DynamicUsersChart);\n","import React, { Fragment, Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport 'react-day-picker/lib/style.css';\nimport CircularProgress from '../../../lib/CircularProgress';\n\nimport { fetchVizHoursPerUser } from '../../../../actions/api/viz';\nimport { notifyError } from '../../../../actions/notification';\nimport { allMembers } from '../../../../selectors/members';\nimport BlankProfile from '../../../../assets/blankprofile.png';\nimport { changeUsersHours } from '../../../../actions/project';\n\nimport DynamicUsersChart from './DynamicUsersChart';\nimport language from '../../../../constants/language';\n/* eslint-disable max-len */\nconst styles = {\n  wrapper: {\n    height: '400px',\n    width: 'auto',\n  },\n  modalContent: {\n    width: '600px',\n    height: '400px',\n  },\n  modalContainer: {\n    // width: '800px',\n  },\n  title: {\n    fontSize: '28px',\n    fontFamiliy:\n      '-apple-system, \".SFNSText-Regular\", \"San Francisco\", BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Lucida Grande\", Arial, sans-serif',\n    color: 'rgb(68, 68, 68)',\n  },\n  headerContainer: {\n    margin: '30px',\n    width: 'auto',\n  },\n  text: {\n    color: '#2a3d41',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: '10px',\n    marginBottom: '10px',\n  },\n  selectText: {\n    color: '#2a3d41',\n    fontSize: 14,\n    fontWeight: 'normal',\n    marginTop: '10px',\n    marginBottom: '10px',\n    marginLeft: '10px',\n  },\n  grid: {\n    display: 'flex',\n    width: '100%',\n    margin: '10px',\n  },\n  line: {\n    width: 'auto',\n    height: '1px',\n    backgroundColor: '#CCCCCC',\n  },\n  info: {\n    color: '#2a3d41',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginTop: '5px',\n  },\n  box: {\n    display: 'flex',\n    marginRight: '10px',\n    padding: '5px',\n    alignItems: 'center',\n  },\n  customIcon: {\n    height: '24px',\n    width: '24px',\n    display: 'block',\n    'border-radius': '50%',\n    marginRight: '5px',\n  },\n};\n\nclass UserContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      data: null,\n      labels: null,\n      totalHours: null,\n    };\n    this.changeData = this.changeData.bind(this);\n  }\n\n  componentDidMount() {\n    this.changeData(this.props.startDate, this.props.endDate);\n  }\n\n  changeData(startDate, endDate) {\n    this.props\n      .fetchVizHoursPerUser(this.props.projectId, {\n        start_date: startDate,\n        end_date: endDate,\n      })\n      .then((response) => {\n        if (response.ok) {\n          const newTotalHours = {};\n          response.body.data.forEach((user) => {\n            newTotalHours[user.user_email] = 0;\n            Object.keys(user).forEach((board) => {\n              if (response.body.boards.includes(board)) {\n                newTotalHours[user.user_email] += user[board];\n              }\n            });\n          });\n          this.setState({\n            loading: false,\n            data: response.body.data,\n            labels: response.body.boards,\n            totalHours: newTotalHours,\n          });\n        }\n      });\n  }\n\n  render() {\n    const { classes, members } = this.props;\n    if (this.state.loading) return <CircularProgress />;\n    const {\n      data,\n      labels,\n      totalHours,\n    } = this.state;\n    return (\n      <div className={classes.headerContainer}>\n        <Typography className={classes.title}>\n          {language[this.props.selectedLanguage].usersChartIndex.hoursChart}\n        </Typography>\n        <div className={classes.line} />\n        <div className={classes.grid}>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginLeft: '10px',\n            }}\n          >\n            <Typography className={classes.text}>\n              {language[this.props.selectedLanguage].usersChartIndex.from}{' '}{this.props.startDate}\n            </Typography>\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n              marginLeft: '10px',\n            }}\n          >\n            <Typography className={classes.text}>\n              {language[this.props.selectedLanguage].usersChartIndex.to}{' '}{this.props.endDate}\n            </Typography>\n          </div>\n        </div>\n        <div className={classes.line} />\n        {Object.keys(totalHours).length > 0 && (\n          <Fragment>\n            <Typography className={classes.text}>\n              {language[this.props.selectedLanguage].usersChartIndex.totalHours}\n              :{' '}\n            </Typography>\n            <div style={{ display: 'flex' }}>\n              {members.map((user) => {\n                return (\n                  <div className={classes.box} key={user.email}>\n                    <Tooltip placement=\"top\" title={user.name}>\n                      <div>\n                        {(!user.image || user.image === 'null') && (\n                          <img\n                            alt=\"\"\n                            className={classes.customIcon}\n                            src={BlankProfile}\n                          />\n                        )}\n                        {user.image && user.image !== 'null' && (\n                          <img\n                            alt=\"\"\n                            className={classes.customIcon}\n                            src={user.image}\n                          />\n                        )}\n                      </div>\n                    </Tooltip>\n                    <div className={classes.info}>\n                      <Typography\n                        className={classes.text}\n                        style={{ marginTop: 0, marginBottom: 0 }}\n                      >\n                        {totalHours[user.email]}\n                      </Typography>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </Fragment>\n        )}\n        <div className={classes.wrapper}>\n          {data.length > 0 && (\n            <DynamicUsersChart\n              data={data}\n              labels={labels}\n              params={[this.props.startDate, this.props.endDate]}\n            />\n          )}\n          {!data.length && (\n            <Typography style={{ textAlign: 'center' }}>\n              {language[this.props.selectedLanguage].usersChartIndex.noReported}\n            </Typography>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nUserContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  projectId: PropTypes.string.isRequired,\n  startDate: PropTypes.string.isRequired,\n  endDate: PropTypes.string.isRequired,\n  fetchVizHoursPerUser: PropTypes.func.isRequired,\n  notifyError: PropTypes.func.isRequired,\n  members: PropTypes.array.isRequired,\n  changeUsersHours: PropTypes.func.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    members: allMembers(ownProps, state),\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchVizHoursPerUser,\n      notifyError,\n      changeUsersHours,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(UserContainer));\n","import React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectProject } from '../../actions/user';\nimport { fetchProjectMembers } from '../../actions/api/members';\n\nimport CircularProgress from '../../components/lib/CircularProgress';\n\nimport UserReportsContainer from '../../components/report/share/User';\n\nclass Report extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentWillMount() {\n        this.props.selectProject(this.props.projectId);\n        this.props.fetchProjectMembers(this.props.projectId)\n            .then(() => {\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress />;\n        }\n        return (\n            <Fragment>\n                <UserReportsContainer projectId={this.props.projectId} startDate={this.props.startDate} endDate={this.props.endDate} />\n            </Fragment>\n        );\n    }\n}\n\nReport.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    startDate: PropTypes.string.isRequired,\n    endDate: PropTypes.string.isRequired,\n    selectProject: PropTypes.func.isRequired,\n    fetchProjectMembers: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        projectId: String(ownProps.match.params.id),\n        startDate: String(ownProps.match.params.start_date),\n        endDate: String(ownProps.match.params.end_date),\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        selectProject,\n        fetchProjectMembers,\n    }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);\n","import {\n  FETCH_GET_ALL_MEMBERS,\n  FETCH_TASK_ASSIGN,\n  FETCH_TASK_UNASSIGN,\n  FETCH_UPDATE_MEMBER,\n  FETCH_DELETE_MEMBER,\n  FETCH_QUIT_PROJECT,\n} from '../../constants/api/members';\n\nexport const fetchProjectMembers = id => ({\n  type: FETCH_GET_ALL_MEMBERS,\n  fetch: true,\n  url: `/projects/${id}/members/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchTaskAssign = (id, body) => ({\n  type: FETCH_TASK_ASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/assign/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchTaskUnassign = (id, userId) => ({\n  type: FETCH_TASK_UNASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/users/${userId}/unassign/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateMember = (projectId, memberId, body) => ({\n  type: FETCH_UPDATE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchDeleteMember = (projectId, memberId) => ({\n  type: FETCH_DELETE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchQuitMember = (projectId, memberId) => ({\n  type: FETCH_QUIT_PROJECT,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n","import {\n  FETCH_VIZ_HOURS_PER_BOARD,\n  FETCH_VIZ_HOURS_PER_LABEL,\n  FETCH_VIZ_HOURS_PER_USER,\n  FETCH_VIZ_HOURS_PER_TASK,\n  FETCH_VIZ_HOURS_TIMELINE,\n  FETCH_VIZ_COMMITS_PER_PR,\n  FETCH_VIZ_LINKED_REPOS,\n  FETCH_VIZ_PR_LEAD_TIME,\n  FETCH_VIZ_PR,\n  FETCH_VIZ_GITHUB,\n} from '../../constants/api/viz';\n\nexport const fetchVizHoursPerBoard = (id, body) => ({\n  type: FETCH_VIZ_HOURS_PER_BOARD,\n  fetch: true,\n  url: `/viz/projects/${id}/hours_per_board`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizHoursPerLabel = (id, body) => ({\n  type: FETCH_VIZ_HOURS_PER_LABEL,\n  fetch: true,\n  url: `/viz/boards/${id}/hours_per_label`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizHoursPerUser = (id, body) => ({\n  type: FETCH_VIZ_HOURS_PER_USER,\n  fetch: true,\n  url: `/viz/projects/${id}/hours_per_user`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizHoursPerTask = (projectId, userId, body) => ({\n  type: FETCH_VIZ_HOURS_PER_TASK,\n  fetch: true,\n  url: `/viz/projects/${projectId}/users/${userId}/tasks`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizGithub = (projectId, userId, body) => ({\n  type: FETCH_VIZ_GITHUB,\n  fetch: true,\n  url: `/viz/projects/${projectId}/users/${userId}/github`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetLinkedRepos = projectId => ({\n  type: FETCH_VIZ_LINKED_REPOS,\n  fetch: true,\n  url: `/projects/${projectId}/repos`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchUsersHoursTimeline = (projectId, body) => ({\n  type: FETCH_VIZ_HOURS_TIMELINE,\n  fetch: true,\n  url: `/viz/projects/${projectId}/users_timeline`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetPR = (projectId, body) => ({\n  type: FETCH_VIZ_PR,\n  fetch: true,\n  url: `/projects/${projectId}/gits/get_pull_requests`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetPRLeadTime = (projectId, body) => ({\n  type: FETCH_VIZ_PR_LEAD_TIME,\n  fetch: true,\n  url: `/projects/${projectId}/gits/get_pr_lead_time`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetCommitsPerPR = (projectId, body) => ({\n  type: FETCH_VIZ_COMMITS_PER_PR,\n  fetch: true,\n  url: `/projects/${projectId}/gits/get_commits_of_all_pr`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n","export const FETCH_VIZ_HOURS_PER_BOARD = 'FETCH_VIZ_HOURS_PER_BOARD';\nexport const FETCH_VIZ_HOURS_PER_LABEL = 'FETCH_VIZ_HOURS_PER_LABEL';\nexport const FETCH_VIZ_HOURS_PER_USER = 'FETCH_VIZ_HOURS_PER_USER';\nexport const FETCH_VIZ_HOURS_PER_TASK = 'FETCH_VIZ_HOURS_PER_TASK';\nexport const FETCH_VIZ_HOURS_TIMELINE = 'FETCH_VIZ_HOURS_TIMELINE';\nexport const FETCH_VIZ_COMMITS_PER_PR = 'FETCH_VIZ_COMMITS_PER_PR';\nexport const FETCH_VIZ_PR_LEAD_TIME = 'FETCH_VIZ_PR_LEAD_TIME';\nexport const FETCH_VIZ_LINKED_REPOS = 'FETCH_VIZ_LINKED_REPOS';\nexport const FETCH_VIZ_GITHUB = 'FETCH_VIZ_GITHUB';\nexport const FETCH_VIZ_PR = 'FETCH_VIZ_PR';\n","import { createSelector } from 'redux-orm';\n\nimport orm from '../reducers/orm';\n\nconst getRef = obj => (obj != null ? obj.ref : null);\n\n// Return all the users of a project\nexport const allMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  (props, state) => state.user.selectedProjectId,\n  (session, projectId) => {\n    const projectMembers = getRef(session.Project.get(o => o.id === projectId));\n    if (projectMembers === null) return [];\n    const members = session.Member\n      .filter(o => projectMembers.members.includes(o.id))\n      .orderBy(o => o.name.toUpperCase())\n      .toRefArray();\n    return members;\n  },\n);\n/*\nReturns all the users of a project. Each user comes with an attribute\nassigned<bool>, which is used to know if the user is asigned to the task\nor not.\n*/\nexport const onlyMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  (props, state) => state.board.selectedTask,\n  (props, state) => state.user.selectedProjectId,\n  (session, taskId, projectId) => {\n    const task = session.Task.get(o => o.id === taskId).ref;\n    if (task === null) return null;\n    const taskMembers = task.assigned;\n    const projectMembers = session.Project.get(o => o.id === projectId).ref.members;\n    const members = session.Member\n      .filter(o => projectMembers.includes(o.id))\n      .orderBy(o => o.name.toUpperCase())\n      .toRefArray();\n    return members.map((mem) => {\n      return Object.assign({}, mem, {\n        assigned: taskMembers.includes(mem.id),\n      });\n    });\n  },\n);\n\n// Returns all the users asigned to a single task.\nexport const oneTaskMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  props => props.taskId,\n  (session, taskId) => {\n    const task = getRef(session.Task.get(o => o.id === taskId));\n    if (task === null) return null;\n    return Object.assign({}, {\n      assigned: session.Member.filter(o => task.assigned.includes(o.id)).toRefArray(),\n    }).assigned;\n  },\n);\n\nexport const onlyTaskMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  (prop, state) => state.board.selectedTask,\n  (session, taskId) => {\n    const task = getRef(session.Task.get(o => o.id === taskId));\n    if (task === null) return null;\n    return Object.assign({}, {\n      assigned: session.Member.filter(o => task.assigned.includes(o.id)).toRefArray(),\n    }).assigned;\n  },\n);\n\nexport const evaluableMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  (props, state) => state.user.selectedProjectId,\n  (session, projectId) => {\n    const projectMembers = getRef(session.Project.get(o => o.id === projectId));\n    if (projectMembers === null) return [];\n    const members = session.Member\n      .filter(o => projectMembers.members.includes(o.id) && o.role !== 'viewer')\n      .orderBy(o => o.name.toUpperCase())\n      .toRefArray();\n    return members;\n  },\n);","import {\n  TOGGLE_ASSIGN_MODAL_REPO,\n  ARCHIVE_SEARCH,\n  REPORT_HOURS,\n  USERS_HOURS,\n  TRAZABILITY_HOURS,\n  TIMELINE_HOURS,\n  TOGGLE_FILTER,\n} from '../constants/project';\n\nexport const toggleRepoAssignForm = id => ({\n  type: TOGGLE_ASSIGN_MODAL_REPO,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const archiveSearch = body => ({\n  type: ARCHIVE_SEARCH,\n  payload: {\n    body,\n  },\n});\n\nexport const changeReportHours = body => ({\n  type: REPORT_HOURS,\n  payload: {\n    body,\n  },\n});\n\nexport const changeUsersHours = body => ({\n  type: USERS_HOURS,\n  payload: {\n    body,\n  },\n});\n\nexport const changeTrazabilityHours = body => ({\n  type: TRAZABILITY_HOURS,\n  payload: {\n    body,\n  },\n});\n\nexport const changeTimelineHours = body => ({\n  type: TIMELINE_HOURS,\n  payload: {\n    body,\n  },\n});\n\nexport const toggleTaskFilter = () => {\n  return {\n    type: TOGGLE_FILTER,\n  };\n};\n","'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a),\n        arrB = isArray(b),\n        i,\n        length,\n        key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n\n      for (i = length; i-- !== 0;) {\n        if (!equal(a[i], b[i])) return false;\n      }\n\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n    var dateA = a instanceof Date,\n        dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n    var regexpA = a instanceof RegExp,\n        regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n    var keys = keyList(a);\n    length = keys.length;\n    if (length !== keyList(b).length) return false;\n\n    for (i = length; i-- !== 0;) {\n      if (!hasProp.call(b, keys[i])) return false;\n    }\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a !== a && b !== b;\n};"],"sourceRoot":""}
{"version":3,"sources":["components/report/share/Lead/LeadViz.js","components/report/share/Lead/index.js","routes/leadReport/index.js","actions/api/members.js","actions/api/viz.js","constants/api/viz.js","selectors/members.js","actions/project.js"],"names":["LeadViz","_ref","data","react_default","a","createElement","bar","keys","indexBy","margin","top","right","bottom","left","layout","padding","axisBottom","xScale","type","format","xFormat","styles","wrapper","height","titleContainer","display","paddingLeft","paddingTop","borderBottom","title","fontSize","fontFamiliy","color","item2","width","gridColumn","item3","titleText","fontWeight","marginTop","marginBottom","headerContainer","container","text","alignSelf","marginRight","selectText","marginLeft","grid","line","backgroundColor","errorMsg","noDataMsg","UserContainer","props","_this","Object","classCallCheck","this","_super","call","state","loading","pr_lead","_this2","changeTrazabilityHours","selectedRepo","startDate","endDate","user","userId","fetchGetLinkedRepos","projectId","then","response","ok","setState","repos","body","getPRLeadTime","_this3","repo_id","id","fetchGetPRLeadTime","console","log","lead_time","pr","forEach","element","push","x","createdAt","closedAt","CircularProgress","classes","className","Typography_default","language","selectedLanguage","report","lead","style","graph","length","Lead_LeadViz","Component","connect","ownProps","auth","project","trazabilityhoursRepository","trazabilityhoursUser","trazabilityhoursEndDate","trazabilityhoursStarDate","users","allMembers","dispatch","bindActionCreators","fetchVizHoursPerTask","fetchGetPR","fetchGetCommitsPerPR","fetchVizGithub","notifyError","withStyles","Report","selectProject","fetchProjectMembers","react","Lead","String","match","params","__webpack_require__","d","__webpack_exports__","fetchTaskAssign","fetchTaskUnassign","fetchUpdateMember","fetchDeleteMember","fetchQuitMember","_constants_api_members__WEBPACK_IMPORTED_MODULE_0__","FETCH_GET_ALL_MEMBERS","fetch","url","concat","method","FETCH_TASK_ASSIGN","FETCH_TASK_UNASSIGN","memberId","FETCH_UPDATE_MEMBER","FETCH_DELETE_MEMBER","FETCH_QUIT_PROJECT","fetchVizHoursPerBoard","queryParams","objectSpread","fetchVizHoursPerLabel","fetchVizHoursPerUser","fetchUsersHoursTimeline","onlyMembers","oneTaskMembers","onlyTaskMembers","evaluableMembers","redux_orm__WEBPACK_IMPORTED_MODULE_0__","_reducers_orm__WEBPACK_IMPORTED_MODULE_1__","getRef","obj","ref","createSelector","orm","_","selectedProjectId","session","projectMembers","Project","get","o","Member","filter","members","includes","orderBy","name","toUpperCase","toRefArray","board","selectedTask","taskId","task","Task","taskMembers","assigned","map","mem","assign","prop","role","toggleRepoAssignForm","archiveSearch","changeReportHours","changeUsersHours","changeTimelineHours","toggleTaskFilter","_constants_project__WEBPACK_IMPORTED_MODULE_0__","TOGGLE_ASSIGN_MODAL_REPO","payload","ARCHIVE_SEARCH","REPORT_HOURS","USERS_HOURS","TRAZABILITY_HOURS","TIMELINE_HOURS","TOGGLE_FILTER"],"mappings":"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","file":"static/js/28.fdf047f2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ResponsiveBar } from '@nivo/bar';\n\nconst LeadViz = ({data}) => {\n\n  return (\n    <ResponsiveBar\n        data={data}\n        keys={[ 'x' ]}\n        indexBy='title'\n        margin={{ top: 50, right: 130, bottom: 50, left: 400 }}\n        layout=\"horizontal\"\n        padding={0.5}\n        axisBottom={null}\n        xScale={{\n          type: \"time\",\n          format: \"%Y-%m-%d\"\n        }}\n        xFormat=\"time:%Y-%m-%d\"\n\n    />\n  );\n};\n\nLeadViz.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default LeadViz;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport 'react-day-picker/lib/style.css';\n\nimport LeadViz from './LeadViz';\n\n\nimport CircularProgress from '../../../lib/CircularProgress';\n\nimport {\n  fetchVizHoursPerTask,\n  fetchVizGithub,\n  fetchGetLinkedRepos,\n  fetchGetPR,\n  fetchGetPRLeadTime,\n  fetchGetCommitsPerPR,\n} from '../../../../actions/api/viz';\n\nimport { changeTrazabilityHours } from '../../../../actions/project';\nimport { allMembers } from '../../../../selectors/members';\nimport { notifyError } from '../../../../actions/notification';\nimport language from '../../../../constants/language';\n\n/* eslint-disable max-len */\nconst styles = {\n  wrapper: {\n    height: '400px',\n  },\n  titleContainer: {\n    display: 'block',\n    paddingLeft: 20,\n    paddingTop: 5,\n    borderBottom: '2px solid rgb(68, 68, 68)',\n  },\n  title: {\n    fontSize: '28px',\n    fontFamiliy:\n      '-apple-system, \".SFNSText-Regular\", \"San Francisco\", BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Lucida Grande\", Arial, sans-serif',\n    color: 'rgb(68, 68, 68)',\n  },\n  item2: {\n    height: '500px',\n    width: '1000px',\n    gridColumn: 'span 2 / auto',\n  },\n  item3: {\n    height: '500px',\n    gridColumn: 'span 3 / auto',\n  },\n  titleText: {\n    color: '#2a3d41',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginTop: '10px',\n    marginBottom: '10px',\n  },\n  headerContainer: {\n    margin: '30px',\n    width: 'auto',\n  },\n  container: {\n    height: '700px',\n  },\n  text: {\n    color: '#2a3d41',\n    alignSelf: 'center',\n    fontSize: 14,\n    fontWeight: 'bold',\n    marginTop: '10px',\n    marginBottom: '10px',\n    marginRight: '5px',\n  },\n  selectText: {\n    color: '#2a3d41',\n    fontSize: 14,\n    fontWeight: 'normal',\n    marginTop: '10px',\n    marginBottom: '10px',\n    marginLeft: '10px',\n  },\n  grid: {\n    display: 'flex',\n    width: '100%',\n  },\n  line: {\n    width: 'auto',\n    height: '1px',\n    backgroundColor: '#CCCCCC',\n  },\n  errorMsg: {\n    marginLeft: '500px',\n    marginTop: '200px',\n    width: '200px',\n    fontFamiliy:\n      '-apple-system, \".SFNSText-Regular\", \"San Francisco\", BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Lucida Grande\", Arial, sans-serif',\n    color: 'rgb(68, 68, 68)',\n    fontWeight: 'bold',\n  },\n  noDataMsg: {\n    marginLeft: '100px',\n    marginTop: '200px',\n    marginBottom: '500px',\n    width: '200px',\n    fontFamiliy:\n      '-apple-system, \".SFNSText-Regular\", \"San Francisco\", BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", \"Lucida Grande\", Arial, sans-serif',\n    color: 'rgb(68, 68, 68)',\n    fontWeight: 'bold',\n  },\n};\n\nclass UserContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      pr_lead: [],\n    };\n  }\n\n  componentWillMount() {\n    this.props.changeTrazabilityHours({\n      selectedRepo: this.props.selectedRepo,\n      startDate: this.props.startDate,\n      endDate: this.props.endDate,\n      user: this.props.userId,\n    });\n    this.props.fetchGetLinkedRepos(this.props.projectId).then((response) => {\n      if (response.ok) {\n        this.setState({ repos: response.body });\n        if (response.body) {\n          this.getPRLeadTime();\n        }\n      }\n    });\n  }\n\n\n\n  getPRLeadTime() {\n    const { repos } = this.state;\n    const body = { 'repo_id': repos[0].id };\n    const pr_lead = [];\n    this.props.fetchGetPRLeadTime(this.props.projectId, body).then((response) => {\n      console.log(response);\n      // this.setState({ loading: false });\n      if (response.ok) {\n        response.body.lead_time.pr.forEach(element => {\n          pr_lead.push({ 'x': element.createdAt, 'title': element.title });\n          pr_lead.push({ 'x': element.closedAt, 'title': element.title });\n        })\n        this.setState({ loading: false, pr_lead });\n      }\n    })\n  }\n\n  render() {\n    if (this.state.loading) return <CircularProgress />;\n    const { classes } = this.props;\n    const { pr_lead } = this.state;\n    return (\n      <div className={classes.container} >\n        <div className={classes.headerContainer}>\n          <Typography className={classes.title}>\n            {language[this.props.selectedLanguage].report.lead}\n          </Typography>\n          <div className={classes.line} />\n        </div>\n        <div style={styles.graph} className={classes.wrapper}>\n          {pr_lead.length > 0 && <LeadViz data={pr_lead} />}\n        </div>\n      </div >\n    );\n  }\n}\n\nUserContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n  projectId: PropTypes.string.isRequired,\n  users: PropTypes.array.isRequired,\n  userId: PropTypes.string.isRequired,\n  fetchVizHoursPerTask: PropTypes.func.isRequired,\n  fetchVizGithub: PropTypes.func.isRequired,\n  fetchGetLinkedRepos: PropTypes.func.isRequired,\n  fetchGetPR: PropTypes.func.isRequired,\n  fetchGetCommitsPerPR: PropTypes.func.isRequired,\n  fetchGetPRLeadTime: PropTypes.func.isRequired,\n  changeTrazabilityHours: PropTypes.func.isRequired,\n  notifyError: PropTypes.func.isRequired,\n  selectedRepo: PropTypes.any.isRequired,\n  user: PropTypes.any.isRequired,\n  endDate: PropTypes.any.isRequired,\n  startDate: PropTypes.any.isRequired,\n  selectedLanguage: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    userId: state.auth.id,\n    selectedRepo: state.project.trazabilityhoursRepository,\n    user: state.project.trazabilityhoursUser,\n    endDate: state.project.trazabilityhoursEndDate,\n    startDate: state.project.trazabilityhoursStarDate,\n    users: allMembers(ownProps, state),\n    selectedLanguage: state.user.language,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      fetchVizHoursPerTask,\n      fetchGetPR,\n      fetchGetPRLeadTime,\n      fetchGetCommitsPerPR,\n      fetchVizGithub,\n      fetchGetLinkedRepos,\n      changeTrazabilityHours,\n      notifyError,\n    },\n    dispatch,\n  );\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(UserContainer));\n","import React, { Component, Fragment } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { selectProject } from '../../actions/user';\nimport { fetchProjectMembers } from '../../actions/api/members';\n\nimport CircularProgress from '../../components/lib/CircularProgress';\n\nimport LeadReportsContainer from '../../components/report/share/Lead';\n\nclass Report extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n    }\n\n    componentDidMount() {\n        this.props.selectProject(this.props.projectId);\n        this.props.fetchProjectMembers(this.props.projectId)\n            .then(() => {\n                this.setState({ loading: false });\n            });\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <CircularProgress />;\n        }\n        return (\n            <Fragment>\n                <LeadReportsContainer projectId={this.props.projectId} />\n            </Fragment>\n        );\n    }\n}\n\nReport.propTypes = {\n    projectId: PropTypes.string.isRequired,\n    selectProject: PropTypes.func.isRequired,\n    fetchProjectMembers: PropTypes.func.isRequired,\n};\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        projectId: String(ownProps.match.params.id),\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return bindActionCreators({\n        selectProject,\n        fetchProjectMembers,\n    }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Report);\n","import {\n  FETCH_GET_ALL_MEMBERS,\n  FETCH_TASK_ASSIGN,\n  FETCH_TASK_UNASSIGN,\n  FETCH_UPDATE_MEMBER,\n  FETCH_DELETE_MEMBER,\n  FETCH_QUIT_PROJECT,\n} from '../../constants/api/members';\n\nexport const fetchProjectMembers = id => ({\n  type: FETCH_GET_ALL_MEMBERS,\n  fetch: true,\n  url: `/projects/${id}/members/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchTaskAssign = (id, body) => ({\n  type: FETCH_TASK_ASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/assign/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchTaskUnassign = (id, userId) => ({\n  type: FETCH_TASK_UNASSIGN,\n  fetch: true,\n  url: `/tasks/${id}/users/${userId}/unassign/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateMember = (projectId, memberId, body) => ({\n  type: FETCH_UPDATE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchDeleteMember = (projectId, memberId) => ({\n  type: FETCH_DELETE_MEMBER,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchQuitMember = (projectId, memberId) => ({\n  type: FETCH_QUIT_PROJECT,\n  fetch: true,\n  url: `/projects/${projectId}/members/${memberId}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n","import {\n  FETCH_VIZ_HOURS_PER_BOARD,\n  FETCH_VIZ_HOURS_PER_LABEL,\n  FETCH_VIZ_HOURS_PER_USER,\n  FETCH_VIZ_HOURS_PER_TASK,\n  FETCH_VIZ_HOURS_TIMELINE,\n  FETCH_VIZ_COMMITS_PER_PR,\n  FETCH_VIZ_LINKED_REPOS,\n  FETCH_VIZ_PR_LEAD_TIME,\n  FETCH_VIZ_PR,\n  FETCH_VIZ_GITHUB,\n} from '../../constants/api/viz';\n\nexport const fetchVizHoursPerBoard = (id, body) => ({\n  type: FETCH_VIZ_HOURS_PER_BOARD,\n  fetch: true,\n  url: `/viz/projects/${id}/hours_per_board`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizHoursPerLabel = (id, body) => ({\n  type: FETCH_VIZ_HOURS_PER_LABEL,\n  fetch: true,\n  url: `/viz/boards/${id}/hours_per_label`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizHoursPerUser = (id, body) => ({\n  type: FETCH_VIZ_HOURS_PER_USER,\n  fetch: true,\n  url: `/viz/projects/${id}/hours_per_user`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizHoursPerTask = (projectId, userId, body) => ({\n  type: FETCH_VIZ_HOURS_PER_TASK,\n  fetch: true,\n  url: `/viz/projects/${projectId}/users/${userId}/tasks`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchVizGithub = (projectId, userId, body) => ({\n  type: FETCH_VIZ_GITHUB,\n  fetch: true,\n  url: `/viz/projects/${projectId}/users/${userId}/github`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetLinkedRepos = projectId => ({\n  type: FETCH_VIZ_LINKED_REPOS,\n  fetch: true,\n  url: `/projects/${projectId}/repos`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchUsersHoursTimeline = (projectId, body) => ({\n  type: FETCH_VIZ_HOURS_TIMELINE,\n  fetch: true,\n  url: `/viz/projects/${projectId}/users_timeline`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetPR = (projectId, body) => ({\n  type: FETCH_VIZ_PR,\n  fetch: true,\n  url: `/projects/${projectId}/gits/get_pull_requests`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetPRLeadTime = (projectId, body) => ({\n  type: FETCH_VIZ_PR_LEAD_TIME,\n  fetch: true,\n  url: `/projects/${projectId}/gits/get_pr_lead_time`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n\nexport const fetchGetCommitsPerPR = (projectId, body) => ({\n  type: FETCH_VIZ_COMMITS_PER_PR,\n  fetch: true,\n  url: `/projects/${projectId}/gits/get_commits_of_all_pr`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n","export const FETCH_VIZ_HOURS_PER_BOARD = 'FETCH_VIZ_HOURS_PER_BOARD';\nexport const FETCH_VIZ_HOURS_PER_LABEL = 'FETCH_VIZ_HOURS_PER_LABEL';\nexport const FETCH_VIZ_HOURS_PER_USER = 'FETCH_VIZ_HOURS_PER_USER';\nexport const FETCH_VIZ_HOURS_PER_TASK = 'FETCH_VIZ_HOURS_PER_TASK';\nexport const FETCH_VIZ_HOURS_TIMELINE = 'FETCH_VIZ_HOURS_TIMELINE';\nexport const FETCH_VIZ_COMMITS_PER_PR = 'FETCH_VIZ_COMMITS_PER_PR';\nexport const FETCH_VIZ_PR_LEAD_TIME = 'FETCH_VIZ_PR_LEAD_TIME';\nexport const FETCH_VIZ_LINKED_REPOS = 'FETCH_VIZ_LINKED_REPOS';\nexport const FETCH_VIZ_GITHUB = 'FETCH_VIZ_GITHUB';\nexport const FETCH_VIZ_PR = 'FETCH_VIZ_PR';\n","import { createSelector } from 'redux-orm';\n\nimport orm from '../reducers/orm';\n\nconst getRef = obj => (obj != null ? obj.ref : null);\n\n// Return all the users of a project\nexport const allMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  (props, state) => state.user.selectedProjectId,\n  (session, projectId) => {\n    const projectMembers = getRef(session.Project.get(o => o.id === projectId));\n    if (projectMembers === null) return [];\n    const members = session.Member\n      .filter(o => projectMembers.members.includes(o.id))\n      .orderBy(o => o.name.toUpperCase())\n      .toRefArray();\n    return members;\n  },\n);\n/*\nReturns all the users of a project. Each user comes with an attribute\nassigned<bool>, which is used to know if the user is asigned to the task\nor not.\n*/\nexport const onlyMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  (props, state) => state.board.selectedTask,\n  (props, state) => state.user.selectedProjectId,\n  (session, taskId, projectId) => {\n    const task = session.Task.get(o => o.id === taskId).ref;\n    if (task === null) return null;\n    const taskMembers = task.assigned;\n    const projectMembers = session.Project.get(o => o.id === projectId).ref.members;\n    const members = session.Member\n      .filter(o => projectMembers.includes(o.id))\n      .orderBy(o => o.name.toUpperCase())\n      .toRefArray();\n    return members.map((mem) => {\n      return Object.assign({}, mem, {\n        assigned: taskMembers.includes(mem.id),\n      });\n    });\n  },\n);\n\n// Returns all the users asigned to a single task.\nexport const oneTaskMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  props => props.taskId,\n  (session, taskId) => {\n    const task = getRef(session.Task.get(o => o.id === taskId));\n    if (task === null) return null;\n    return Object.assign({}, {\n      assigned: session.Member.filter(o => task.assigned.includes(o.id)).toRefArray(),\n    }).assigned;\n  },\n);\n\nexport const onlyTaskMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  (prop, state) => state.board.selectedTask,\n  (session, taskId) => {\n    const task = getRef(session.Task.get(o => o.id === taskId));\n    if (task === null) return null;\n    return Object.assign({}, {\n      assigned: session.Member.filter(o => task.assigned.includes(o.id)).toRefArray(),\n    }).assigned;\n  },\n);\n\nexport const evaluableMembers = createSelector(\n  orm,\n  (_, state) => state.orm,\n  (props, state) => state.user.selectedProjectId,\n  (session, projectId) => {\n    const projectMembers = getRef(session.Project.get(o => o.id === projectId));\n    if (projectMembers === null) return [];\n    const members = session.Member\n      .filter(o => projectMembers.members.includes(o.id) && o.role !== 'viewer')\n      .orderBy(o => o.name.toUpperCase())\n      .toRefArray();\n    return members;\n  },\n);","import {\n  TOGGLE_ASSIGN_MODAL_REPO,\n  ARCHIVE_SEARCH,\n  REPORT_HOURS,\n  USERS_HOURS,\n  TRAZABILITY_HOURS,\n  TIMELINE_HOURS,\n  TOGGLE_FILTER,\n} from '../constants/project';\n\nexport const toggleRepoAssignForm = id => ({\n  type: TOGGLE_ASSIGN_MODAL_REPO,\n  payload: {\n    body: {\n      id,\n    },\n  },\n});\n\nexport const archiveSearch = body => ({\n  type: ARCHIVE_SEARCH,\n  payload: {\n    body,\n  },\n});\n\nexport const changeReportHours = body => ({\n  type: REPORT_HOURS,\n  payload: {\n    body,\n  },\n});\n\nexport const changeUsersHours = body => ({\n  type: USERS_HOURS,\n  payload: {\n    body,\n  },\n});\n\nexport const changeTrazabilityHours = body => ({\n  type: TRAZABILITY_HOURS,\n  payload: {\n    body,\n  },\n});\n\nexport const changeTimelineHours = body => ({\n  type: TIMELINE_HOURS,\n  payload: {\n    body,\n  },\n});\n\nexport const toggleTaskFilter = () => {\n  return {\n    type: TOGGLE_FILTER,\n  };\n};\n"],"sourceRoot":""}
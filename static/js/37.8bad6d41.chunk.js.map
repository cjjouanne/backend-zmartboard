{"version":3,"sources":["routes/github/index.js","actions/api/projects.js"],"names":["Github","_this$props","this","props","code","projectId","githubConfirmation","split","redirect","concat","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","Component","connect","state","ownProps","location","search","String","match","params","id","dispatch","bindActionCreators","fetchGetProject","type","FETCH_GET_PROJECT","fetch","url","method","fetchGetProjects","FETCH_GET_ALL_PROJECTS","fetchCreateProject","body","FETCH_CREATE_PROJECT","fetchDeleteProject","FETCH_DELETE_PROJECT","fetchUpdateProject","FETCH_UPDATE_PROJECT","fetchUpdateProjectOrder","FETCH_UPDATE_PROJECT_ORDER","fetchUpdateFavorite","FETCH_UPDATE_PROJECT_FAVORITE","fetchGithubConnect","FETCH_GITHUB_CONNECT","FETCH_GITHUB_CONFIRMATION","fetchGithubRepo","FETCH_GITHUB_REPO","fetchProjectRepo","FETCH_PROJECT_REPO","fetchGithubRemove","FETCH_GITHUB_REMOVE","fetchProjectRepoAssign","FETCH_PROJECT_REPO_ASSIGN","fetchProjectRepoUnassign","repoId","FETCH_PROJECT_REPO_UNASSIGN","fetchGetTasksProject","FETCH_TASKS_PROJECT_BETWEEN_DATES","queryParams","Object","_Users_carlosjouanne_Desktop_T2_2021_2_S4_Grupo1_Web_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"qoBAOMA,gKACJ,WAAqB,IAAAC,EACSC,KAAKC,MAAzBC,EADWH,EACXG,KAAMC,EADKJ,EACLI,UACdH,KAAKC,MAAMG,mBAAmBD,EAAW,CAAED,KAAMA,EAAKG,MAAM,KAAK,2BAGnE,WACE,IAAMC,EAAQ,YAAAC,OAAeP,KAAKC,MAAME,WACxC,OACEK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAIN,WATCO,aAiCNC,sBAbf,SAAyBC,EAAOC,GAC9B,MAAO,CACLd,KAAMc,EAASC,SAASC,OACxBf,UAAWgB,OAAOH,EAASI,MAAMC,OAAOC,MAIjB,SAACC,GAC1B,OAAOC,YAAmB,CACxBpB,wBACCmB,IAGUT,CAA6ChB,whBCtB/C2B,EAAkB,SAAAH,GAAE,MAAK,CACpCI,KAAMC,IACNC,OAAO,EACPC,IAAG,aAAAtB,OAAee,EAAf,KACHD,OAAQ,CACNS,OAAQ,SAICC,EAAmB,iBAAO,CACrCL,KAAMM,IACNJ,OAAO,EACPC,IAAK,aACLR,OAAQ,CACNS,OAAQ,SAICG,EAAqB,SAAAC,GAAI,MAAK,CACzCR,KAAMS,IACNP,OAAO,EACPC,IAAK,aACLR,OAAQ,CACNS,OAAQ,OACRI,UAISE,EAAqB,SAAAd,GAAE,MAAK,CACvCI,KAAMW,IACNT,OAAO,EACPC,IAAG,aAAAtB,OAAee,EAAf,KACHD,OAAQ,CACNS,OAAQ,YAICQ,EAAqB,SAAChB,EAAIY,GAAL,MAAe,CAC/CR,KAAMa,IACNX,OAAO,EACPC,IAAG,aAAAtB,OAAee,EAAf,KACHD,OAAQ,CACNS,OAAQ,MACRI,UAISM,EAA0B,SAACrC,EAAW+B,GAAZ,MAAsB,CAC3DR,KAAMe,IACNb,OAAO,EACPC,IAAG,aAAAtB,OAAeJ,EAAf,WACHkB,OAAQ,CACNS,OAAQ,MACRI,UAISQ,EAAsB,SAAApB,GAAE,MAAK,CACxCI,KAAMiB,IACNf,OAAO,EACPC,IAAG,aAAAtB,OAAee,EAAf,cACHD,OAAQ,CACNS,OAAQ,SAICc,EAAqB,SAACtB,GAAD,MAAS,CACzCI,KAAMmB,IACNjB,OAAO,EACPC,IAAG,aAAAtB,OAAee,EAAf,cACHD,OAAQ,CACNS,OAAQ,SAIC1B,EAAqB,SAACkB,EAAIY,GAAL,MAAe,CAC/CR,KAAMoB,IACNlB,OAAO,EACPC,IAAG,aAAAtB,OAAee,EAAf,eACHD,OAAQ,CACNS,OAAQ,OACRI,UAISa,EAAkB,SAAAzB,GAAE,MAAK,CACpCI,KAAMsB,IACNpB,OAAO,EACPC,IAAG,aAAAtB,OAAee,EAAf,gBACHD,OAAQ,CACNS,OAAQ,SAICmB,EAAmB,SAAA3B,GAAE,MAAK,CACrCI,KAAMwB,IACNtB,OAAO,EACPC,IAAG,aAAAtB,OAAee,EAAf,WACHD,OAAQ,CACNS,OAAQ,SAICqB,EAAoB,SAAA7B,GAAE,MAAK,CACtCI,KAAM0B,IACNxB,OAAO,EACPC,IAAG,aAAAtB,OAAee,EAAf,SACHD,OAAQ,CACNS,OAAQ,YAICuB,EAAyB,SAAC/B,EAAIY,GAAL,MAAe,CACnDR,KAAM4B,IACN1B,OAAO,EACPC,IAAG,aAAAtB,OAAee,EAAf,mBACHD,OAAQ,CACNS,OAAQ,OACRI,UAISqB,EAA2B,SAACpD,EAAWqD,GAAZ,MAAwB,CAC9D9B,KAAM+B,IACN7B,OAAO,EACPC,IAAG,aAAAtB,OAAeJ,EAAf,WAAAI,OAAkCiD,GACrCnC,OAAQ,CACNS,OAAQ,YAGC4B,EAAuB,SAACpC,EAAIY,GAAL,MAAe,CACjDR,KAAMiC,IACN/B,OAAO,EACPC,IAAG,aAAAtB,OAAee,EAAf,aACHD,OAAQ,CACNS,OAAQ,OAEV8B,YAAYC,OAAAC,EAAA,EAAAD,CAAA,GACP3B","file":"static/js/37.8bad6d41.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { githubConfirmation } from '../../actions/api/projects';\n\nclass Github extends Component {\n  componentWillMount() {\n    const { code, projectId } = this.props;\n    this.props.githubConfirmation(projectId, { code: code.split('=')[1] });\n  }\n\n  render() {\n    const redirect = `/project/${this.props.projectId}`;\n    return (\n      <Redirect to={redirect} />\n    );\n  }\n}\n\nGithub.propTypes = {\n  code: PropTypes.any.isRequired,\n  githubConfirmation: PropTypes.func.isRequired,\n  projectId: PropTypes.any.isRequired,\n};\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    code: ownProps.location.search,\n    projectId: String(ownProps.match.params.id),\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({\n    githubConfirmation,\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Github);\n","import {\n  FETCH_GET_PROJECT,\n  FETCH_GET_ALL_PROJECTS,\n  FETCH_CREATE_PROJECT,\n  FETCH_DELETE_PROJECT,\n  FETCH_UPDATE_PROJECT,\n  FETCH_UPDATE_PROJECT_ORDER,\n  FETCH_UPDATE_PROJECT_FAVORITE,\n  FETCH_GITHUB_CONNECT,\n  FETCH_GITHUB_CONFIRMATION,\n  FETCH_GITHUB_REPO,\n  FETCH_GITHUB_REMOVE,\n  FETCH_PROJECT_REPO,\n  FETCH_PROJECT_REPO_ASSIGN,\n  FETCH_PROJECT_REPO_UNASSIGN,\n  FETCH_TASKS_PROJECT_BETWEEN_DATES,\n} from '../../constants/api/projects';\n\nexport const fetchGetProject = id => ({\n  type: FETCH_GET_PROJECT,\n  fetch: true,\n  url: `/projects/${id}/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGetProjects = () => ({\n  type: FETCH_GET_ALL_PROJECTS,\n  fetch: true,\n  url: '/projects/',\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchCreateProject = body => ({\n  type: FETCH_CREATE_PROJECT,\n  fetch: true,\n  url: '/projects/',\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchDeleteProject = id => ({\n  type: FETCH_DELETE_PROJECT,\n  fetch: true,\n  url: `/projects/${id}/`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchUpdateProject = (id, body) => ({\n  type: FETCH_UPDATE_PROJECT,\n  fetch: true,\n  url: `/projects/${id}/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchUpdateProjectOrder = (projectId, body) => ({\n  type: FETCH_UPDATE_PROJECT_ORDER,\n  fetch: true,\n  url: `/projects/${projectId}/order/`,\n  params: {\n    method: 'PUT',\n    body,\n  },\n});\n\nexport const fetchUpdateFavorite = id => ({\n  type: FETCH_UPDATE_PROJECT_FAVORITE,\n  fetch: true,\n  url: `/projects/${id}/favorite/`,\n  params: {\n    method: 'PUT',\n  },\n});\n\nexport const fetchGithubConnect = (id) => ({\n  type: FETCH_GITHUB_CONNECT,\n  fetch: true,\n  url: `/projects/${id}/gits/new/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const githubConfirmation = (id, body) => ({\n  type: FETCH_GITHUB_CONFIRMATION,\n  fetch: true,\n  url: `/projects/${id}/gits/link/`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchGithubRepo = id => ({\n  type: FETCH_GITHUB_REPO,\n  fetch: true,\n  url: `/projects/${id}/gits/repos/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchProjectRepo = id => ({\n  type: FETCH_PROJECT_REPO,\n  fetch: true,\n  url: `/projects/${id}/repos/`,\n  params: {\n    method: 'GET',\n  },\n});\n\nexport const fetchGithubRemove = id => ({\n  type: FETCH_GITHUB_REMOVE,\n  fetch: true,\n  url: `/projects/${id}/gits`,\n  params: {\n    method: 'DELETE',\n  },\n});\n\nexport const fetchProjectRepoAssign = (id, body) => ({\n  type: FETCH_PROJECT_REPO_ASSIGN,\n  fetch: true,\n  url: `/projects/${id}/gits/link_repo`,\n  params: {\n    method: 'POST',\n    body,\n  },\n});\n\nexport const fetchProjectRepoUnassign = (projectId, repoId) => ({\n  type: FETCH_PROJECT_REPO_UNASSIGN,\n  fetch: true,\n  url: `/projects/${projectId}/repos/${repoId}`,\n  params: {\n    method: 'DELETE',\n  },\n});\nexport const fetchGetTasksProject = (id, body) => ({\n  type: FETCH_TASKS_PROJECT_BETWEEN_DATES,\n  fetch: true,\n  url: `/projects/${id}/workload`,\n  params: {\n    method: 'GET',\n  },\n  queryParams: {\n    ...body,\n  },\n});\n"],"sourceRoot":""}